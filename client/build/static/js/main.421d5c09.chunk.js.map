{"version":3,"sources":["workers/devices.worker.js","workers/hwinfo.worker.js","actions/Settings.action.js","components/Dropzone.component.js","services/file.service.js","actions/Snackbar.action.js","actions/Backdrop.action.js","services/ipconfig.service.js","components/Card.component.js","actions/IPconfigDialog.action.js","actions/DevicesSelectionPage.action.js","actions/DevicesList.action.js","components/Settings.component.js","assets/PacIcon.svg","assets/S7Icon.svg","assets/InternalDeviceIcon.svg","assets/MBGatewayIcon.svg","assets/MSAgentIcon.svg","assets/MQTTIcon.svg","utilities/sortObject.utility.js","components/DevicesList.component.js","services/device.service.js","actions/UniversalTabs.action.js","components/UniversalTabs.component.js","components/UniversalTable.component.js","components/DevicesSelectionPageComponents/DeviceDetailsTitle.component.js","utilities/formatDateTime.utility.js","utilities/sortRows.utility.js","components/DevicesSelectionPageComponents/DeviceConnectionVariableTable.component.js","components/DevicesSelectionPageComponents/IncreaseCalculatorTable.component.js","actions/CollapsibleTable.action.js","components/CollapsedRow.component.js","components/CollapsibleTable.component.js","components/DevicesSelectionPageComponents/SumCalculatorTable.component.js","components/DevicesSelectionPageComponents/ExpressionCalculatorTable.component.js","components/DevicesSelectionPageComponents/ValueFromByteArrayCalculatorTable.component.js","components/DevicesSelectionPageComponents/AverageCalculatorTable.component.js","components/DevicesSelectionPageComponents/FactorCalculatorTable.component.js","components/DevicesSelectionPageComponents/EdgeComputingTabContent.component.js","components/DevicesSelectionPageComponents/HighLimitAlertTable.component.js","components/DevicesSelectionPageComponents/LowLimitAlertTable.component.js","components/DevicesSelectionPageComponents/BandwidthLimitAlertTable.component.js","components/DevicesSelectionPageComponents/ExactValuesAlertTable.component.js","components/DevicesSelectionPageComponents/AlertsTabContent.component.js","services/activate.service.js","components/DevicesSelectionPageComponents/StandardBottomToolbar.component.js","utilities/mbVariableConverter.utility.js","components/DevicesSelectionPageComponents/MBDeviceDisplay.component.js","components/DevicesSelectionPageComponents/S7DeviceDisplay.component.js","components/DevicesSelectionPageComponents/InternalDeviceDisplay.component.js","components/DevicesSelectionPageComponents/MBGatewayDeviceDisplay.component.js","components/DevicesSelectionPageComponents/MSAgentBottomToolbar.component.js","components/DevicesSelectionPageComponents/MSAgentDeviceDisplay.component.js","components/DevicesSelectionPageComponents/MSMQTTDeviceDisplay.component.js","components/DevicesSelectionPage.component.js","actions/AccountPage.action.js","services/user.service.js","components/AccountPage.component.js","actions/UserAccountsPage.action.js","actions/CreateAccountDialog.action.js","actions/ConfirmDeleteUserDialog.action.js","services/auth.service.js","components/UserAccountsPage.component.js","services/isAuthenticated.service.js","actions/Authentication.action.js","routes/ProtectedAdmin.routes.js","actions/Logs.action.js","services/logs.service.js","components/Logs.component.js","routes/DrawerRoutes.routes.js","actions/LanguageDialog.action.js","actions/LoginPage.action.js","assets/sie-logo-petrol-rgb.svg","components/LoginPage.component.js","actions/HardwareUsage.action.js","routes/ProtectedUser.routes.js","components/CircularProgress.component.js","components/Drawer.component.js","reducers/LanguageDialog.reducer.js","reducers/UniversalTabs.reducer.js","reducers/DevicesList.reducer.js","reducers/LoginPage.reducer.js","reducers/AccountPage.reducer.js","reducers/HardwareUsage.reducer.js","reducers/Authentication.reducer.js","reducers/CreateAccountDialog.reducer.js","reducers/UserAccountsPage.reducer.js","reducers/Snackbar.reducer.js","reducers/ConfirmDeleteUserDialog.reducer.js","reducers/DevicesSelectionPage.reducer.js","reducers/Settings.reducer.js","reducers/Backdrop.reducer.js","reducers/IPConfig.reducer.js","reducers/Logs.reducer.js","reducers/CollapsibleTable.reducer.js","reducers/Root.reducer.js","i18n.js","translations.js","components/LanguageSelectionDialog.component.js","components/CreateAccountDialog.component.js","components/Snackbar.component.js","components/ConfirmDeleteUserDialog.component.js","components/Backdrop.component.js","components/IPConfigDialog.component.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","SET_CONFIG_FILE","SET_IP_CONFIGURATION","setConfigFile","file","type","setIPConfiguration","ipconfig","useStyles","makeStyles","theme","dropzoneText","color","mapDispatchToProps","connect","classes","t","useTranslation","onDrop","useCallback","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","className","Typography","variant","API_URL","formData","FormData","append","fetch","method","headers","JSON","parse","localStorage","getItem","accessToken","body","response","status","json","configFile","data","fileName","a","document","createElement","appendChild","stringify","blob","Blob","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","SET_SNACKBAR_TEXT","SET_SNACKBAR_SHOWN","setSnackbarText","text","severity","setSnackbarShown","shown","SET_BACKDROP_OPEN","SET_BACKDROP_CLOSED","setBackdropOpen","setBackdropClosed","ipConfig","networkInterface","config","MediaCard","props","Card","CardActionArea","onClick","buttonAction","CardContent","gutterBottom","component","title","CardActions","Button","size","buttonText","SET_IP_CONFIG_DIALOG_OPEN","SET_IP_CONFIG_DIALOG_IP_ADDRESS","SET_IP_CONFIG_DIALOG_SUBNET_MASK","SET_IP_CONFIG_DIALOG_GATEWAY","SET_IP_CONFIG_DIALOG_DHCP","SET_IP_CONFIG_DIALOG_DNS_PRIMARY","SET_IP_CONFIG_DIALOG_DNS_SECONDARY","setIpConfigDialogOpen","open","interfaceName","SET_ALL_DEVICES","REFRESH_DEVICE_PARAMS","TOGGLE_TABLE_VIEW","setAllDevices","devices","refreshDeviceParams","params","SELECT_DEVICE","selectDevice","deviceID","deviceType","divider","marginTop","spacing","marginBottom","strong","fontWeight","subTitle","state","SettingsReducer","useEffect","IPConfigService","getIpConfig","then","res","Fragment","Grid","container","item","xs","toFixed","sm","md","fullWidth","FileService","uploadConfigFile","Divider","lg","downloadConfigFile","saveFileAs","Object","entries","map","index","Grow","in","transformOrigin","timeout","undefined","dhcp","ipAddress","subnetMask","gateway","dns","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","transform","fill","_ref3","_ref4","_ref5","x","y","width","height","_ref6","_ref7","points","_ref8","_ref9","_ref10","SvgPacIcon","_ref","svgRef","titleId","id","xmlns","viewBox","ref","ForwardRef","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","SvgS7Icon","SvgInternalDeviceIcon","SvgMbGatewayIcon","SvgMsAgentIcon","SvgMqttIcon","sortByDeviceName","obj","sort","b","localeCompare","reduce","o","k","v","active","inactive","iconMarginHorizontal","marginLeft","marginRight","listItem","maxHeight","list","paddingTop","paddingBottom","selectedDevice","DevicesListReducer","allDevices","DevicesSelectionPageReducer","selectedDeviceID","firstEntry","deviceTypeIcon","devicesToDisplay","connectableDevices","internalDevices","agentDevices","restDevices","value","sortedConnectableDevices","sortedInternalDevices","sortedAgentDevices","sortedRestDevices","sortByDeviceType","values","deviceGroup","List","aria-label","device","isActive","isConnected","ListItem","button","selected","ListItemIcon","ListItemText","primary","deviceData","SET_UNIVERSAL_TABS_NAME_INDEX","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","root","flexGrow","defaultRoot","noElevation","boxShadow","tabpanel","overflow","setUniversalTabsNameIndex","tabsInstance","UniversalTabsReducer","defaultMargin","AppBar","position","Tabs","onChange","event","scrollButtons","indicatorColor","textColor","tabs","tab","Tab","label","content","UniversalTable","rows","columns","small","TableContainer","Paper","Table","TableHead","TableRow","col","TableCell","TableBody","row","cell","devicesTitleInline","switch","textAlign","toggleTableView","tableView","direction","justify","alignContent","FormControlLabel","control","Switch","checked","formatDateTime","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","day","getDate","month","getMonth","year","getFullYear","sortRowsBy","cols","nameTranslationObject","variableSetType","sortBy1stLevel","sortBy2ndLevel","sortBy3rdLevel","MBUnitIDIndex","findIndex","MBFunctionIndex","S7MemoryTypeIndex","S7DBNumberIndex","offsetIndex","nameIndex","deviceConnectionVariablesArray","forEach","variable","push","unit","lastValueTick","defaultValue","sampleTime","increaseCalcElementsArray","calcElement","variableIDName","variables","variableID","factor","calculationInterval","SET_COLLAPSIBLE_TABLE_INSTANCE","useRowStyles","expandArrow","maxWidth","borderBottom","setCollapsibleTableInstance","instanceName","collapsedState","rowInstance","CollapsibleTableReducer","collapsedContent","rowName","IconButton","colSpan","Collapse","unmountOnExit","margin","CollapsibleTable","collapsedRows","rowContainsCollapsedContainer","filter","collapsedRow","rowIndex","sumCalcElementsArray","collapsedCols","rowToBeCollapsed","sumElement","variableIDs","el","expressionCalcElementsArray","expressionCalcElement","parameters","elementId","expression","valueFromByteArrayCalcElementsArray","byteArrayElement","bitNumber","byteNumber","averageCalcElementsArray","factorCalcElementsArray","topMargin","calcElementsObject","calcElements","parseFloat","Date","increaseCalculator","sumCalculator","expressionCalculator","valueFromByteArrayCalculator","factorCalculator","averageCalculator","highLimitAlertArray","highLimitAlertElement","texts","pl","en","highLimit","hysteresis","timeOffDelay","timeOnDelay","variableName","lowLimitAlertArray","lowLimitAlertElement","lowLimit","bandwidthLimitAlertArray","bandwidthLimitAlertElement","exactValuesAlertArray","exactValuesAlertElement","alertValues","alertActive","alertElementsObject","alertValueConverter","alertValue","alertElements","alert","highLimitAlerts","lowLimitAlerts","bandWidthLimitAlerts","exactValuesAlerts","activate","onboarded","offboarded","activateDevice","ActivateService","disabled","mbVariableConverter","controlButtons","renderModbusVariablesTable","read","write","readAsSingle","writeAsSingle","readWrite","readWriteAsSingle","readWriteFCode","offset","unitID","sortedRows","bottomMargin","portNumber","modbusVariables","deviceConnectionVariables","renderVariablesTabContent","alerts","renderS7VariablesTable","S7VariablesConverter","dbNumber","memoryType","rack","slot","s7Variables","renderAssociatedVariablesTable","associatedDeviceIDName","associatedDeviceID","associatedElementIDName","associatedElementID","renderHardwareUsageVariablesTable","isNaN","associatedVariables","hardwareUsageVariables","boarded","dataStorageSize","eventStorageSize","numberOfDataFilesToSend","numberOfEventFilesToSend","numberOfSendDataRetries","numberOfSendEventRetries","sendDataFileInterval","sendEventFileInterval","dataToSendConfig","dataConfig","qualityCodeEnabled","deviceId","sendingInterval","dataConverter","conversionType","precision","datapointId","renderDataSentTabContent","eventsToSendConfig","eventConfig","code","acknowledged","correlationId","entityId","renderEventsSentTabContent","instance","mqttName","clientId","checkStateInterval","model","revision","tenantName","serialNumber","mqttMessagesLimit","variableUnit","groupName","eventName","eventType","alignTop","verticalAlign","marginTopTable","noDevicesContainer","sticky","breakpoints","up","top","authenticated","AuthenticationReducer","authed","fetchDevices","DeviceService","getDevices","refreshDeviceData","message","worker","addEventListener","postMessage","token","removeEventListener","terminate","xl","Zoom","transitionDelay","Tooltip","placement","selectedDeviceType","displaySelectedDevice","SET_ACCOUNT_FORM_CURRENT_PASSWORD","SET_ACCOUNT_FORM_NEW_PASSWORD","SET_ACCOUNT_FORM_REPEATED_NEW_PASSWORD","userData","permissions","newPassword","bodyWithPasswords","password","oldPassword","username","loginButton","form","setAccountFormCurrentPassword","currentPassword","setAccountFormNewPassword","setAccountFormRepeatedNewPassword","repeatedNewPassword","AccountPageReducer","useState","accountDetails","setAccountDetails","getMyAccountDetails","UserService","verify","textfield","lengthErrorText","noMatchErrorText","error","Chip","avatar","Avatar","noValidate","autoComplete","TextField","e","helperText","editMyPassword","SET_USER_ACCOUNTS_LIST","setUserAccountsList","SET_CREATE_ACCOUNT_DIALOG_OPEN","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT","SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_EDIT_ID","setCreateAccountDialogOpen","dialogType","setCreateAccountDialogNameTextfield","setCreateAccountDialogPermissionsSelect","SET_CONFIRM_DELETE_USER_DIALOG_OPEN","SET_CONFIRM_DELETE_USER_DIALOG_USERNAME","setConfirmDeleteUserDialogOpen","setConfirmDeleteUserDialogUsername","get","setItem","Error","removeItem","icons","setCreateAccountDialogEditId","accountsList","UserAccountsPageReducer","getAllAccounts","checkPermissions","currentUser","AuthService","getCurrentUser","acc","_id","startIcon","isAuthenticated","user","isAdmin","SET_AUTHENTICATED","setAuthenticated","rest","render","location","to","pathname","from","SET_LOGS","logs","linkInAlert","textDecoration","cursor","setLogs","LogsReducer","downloadButtonDisabled","setdownloadButtonDisabled","downloadLogsFile","filename","element","setAttribute","encodeURIComponent","removeChild","getLogs","getAll","LogsService","parsedContent","parseLogs","joinedString","join","textarea","getElementById","scrollTop","scrollHeight","logFileContent","logsToReturn","splitedLogs","split","logLine","jsonLine","timestamp","level","err","multiline","rowsMax","DrawerRoutes","path","SET_LANGUAGE_DIALOG_OPEN","setLanguageDialogOpen","SET_LOGIN_FORM_USERNAME","SET_LOGIN_FORM_PASSWORD","SET_LOGIN_FORM_USERNAME_ERROR","SET_LOGIN_FORM_PASSWORD_ERROR","setLoginFormUsername","setLoginFormPassword","contentDesktop","contentMobile","fab","right","siemensLogo","paddingRight","topBar","loginContainer","setLoginFormUsernameError","setLoginFormPasswordError","login","LoginPageReducer","loginError","usernameError","passwordError","useTheme","matches","useMediaQuery","down","history","useHistory","tryLogin","catch","handleKeyDown","controlFormFields","field","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","Fab","Fade","src","SiemensLogoPetrol","alt","align","onKeyDown","SET_HARDWARE_USAGE","React","CircularProgressWithLabel","percentColors","pct","r","g","CircularProgress","thickness","animationDuration","lower","upper","range","rangePct","pctLower","pctUpper","Math","floor","getColorForPercentage","left","bottom","justifyContent","round","drawerWidth","appBar","zIndex","drawer","create","easing","sharp","appBarShift","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","paddingLeft","bottomNavi","borderTop","hardwareUsage","sectionDesktop","sectionMobile","setHardwareUsage","cpuUsage","cpuTemperature","ramUsage","diskUsage","HardwareUsageReducer","setOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","bottomNaviValue","setBottomNaviValue","useLocation","isMenuOpen","Boolean","isMobileMenuOpen","setHardwareStats","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","onClose","MenuItem","Link","logout","num","mobileMenuId","renderMobileMenu","Badge","badgeContent","icon","faMicrochip","faThermometerHalf","faMemory","faHdd","aria-controls","aria-haspopup","CssBaseline","clsx","Toolbar","edge","noWrap","Drawer","paper","BottomNavigation","showLabels","BottomNavigationAction","initialState","nameError","editAccountId","dnsPrimary","dnsSecondary","combineReducers","LanguageDialogReducer","action","CreateAccountDialog","newpassword","SnackbarReducer","ConfirmDeleteUserDialogReducer","BackdropReducer","IPConfigReducer","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","documentElement","checkWhitelist","checkForSimilarInWhitelist","cookieOptions","i18n","use","LanguageDetector","initReactI18next","init","resources","translation","detection","fallbackLng","keySeparator","interpolation","escapeValue","blue","chooseLanguage","language","changeLanguage","Dialog","DialogTitle","ListItemAvatar","formControl","selectEmpty","setCreateAccountDialogPasswordTextfield","setCreateAccountDialogNameTextfieldError","setCreateAccountDialogPasswordTextfieldError","handleChange","val","DialogContent","DialogContentText","autoFocus","FormControl","InputLabel","Select","labelId","DialogActions","disableButton","editAccount","register","Alert","elevation","handleClose","reason","Snackbar","autoHideDuration","accountNameToBeDeleted","accountIdToBeDeleted","aria-describedby","deleteAccount","backdrop","Backdrop","visible","invisible","disconnectionWarning","setIpConfigDialogIpAddress","setIpConfigDialogSubnetMask","setIpConfigDialogGateway","setIpConfigDialogDHCP","setIpConfigDialogDNSPrimary","setIpConfigDialogDNSSecondary","setIpConfig","httpReq","milliseconds","Promise","resolve","reject","setTimeout","hostname","port","reload","origin","FormGroup","Checkbox","store","createStore","rootReducer","createMuiTheme","palette","light","main","dark","contrastText","secondary","App","ThemeProvider","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.421d5c09.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"0fbc5c0168903192609a.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"2461d4f30c964a1bb67d.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export const SET_CONFIG_FILE = 'SET_CONFIG_FILE';\nexport const SET_IP_CONFIGURATION = 'SET_IP_CONFIGURATION';\n\nexport const setConfigFile = (file) => ({ type: SET_CONFIG_FILE, file: file })\nexport const setIPConfiguration = (ipconfig) => ({ type: SET_IP_CONFIGURATION, ipconfig: ipconfig })","import React, { useCallback, useMemo } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { setConfigFile } from '../actions/Settings.action';\n\nconst useStyles = makeStyles((theme) => ({\n  dropzoneText: {\n    color: 'rgb(140 140 140)'\n  },\n}));\n\nfunction Dropzone({ setConfigFile }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    setConfigFile(acceptedFiles[0])\n  }, [setConfigFile])\n\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({ onDrop, accept: 'application/JSON' });\n\n\n  const style = useMemo(() => {\n    const baseStyle = {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '40px',\n      borderWidth: 2,\n      borderRadius: 2,\n      borderColor: 'rgb(187 187 187)',\n      borderStyle: 'dashed',\n      backgroundColor: 'rgb(255 255 255)',\n      outline: 'none',\n      transition: 'border .5s ease-in-out'\n    };\n\n    const activeStyle = {\n      borderColor: '#2196f3'\n    };\n\n    const acceptStyle = {\n      borderColor: '#00e676'\n    };\n\n    const rejectStyle = {\n      borderColor: '#ff1744'\n    };\n\n    return {\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }\n\n  }, [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ style })} className=\"dropzone\">\n        <input {...getInputProps()} />\n        <Typography variant=\"body1\" className={classes.dropzoneText}>{t('SettingsPage.DropzoneText')}</Typography>\n      </div>\n    </section>\n  );\n}\n\nconst mapDispatchToProps = {\n  setConfigFile\n}\n\nexport default connect(null, mapDispatchToProps)(Dropzone);","const API_URL = \"/api/configFile/\";\n\nclass FileService {\n  async uploadConfigFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      },\n      body: formData\n    })\n    return { status: response.status }\n  }\n\n  async downloadConfigFile() {\n    const response = await fetch(API_URL, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\n      }\n    })\n    if (response.status === 200) {\n      const configFile = await response.json()\n      return {\n        status: response.status,\n        data: configFile\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n\n  saveFileAs(data, fileName) {\n    var a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style = \"display: none\";\n    var json = JSON.stringify(data),\n      blob = new Blob([json], { type: \"octet/stream\" }),\n      url = window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    window.URL.revokeObjectURL(url);\n\n  };\n}\n\nexport default new FileService();","export const SET_SNACKBAR_TEXT = 'SET_SNACKBAR_TEXT';\nexport const SET_SNACKBAR_SHOWN = 'SET_SNACKBAR_SHOWN';\n\nexport const setSnackbarText = (text, severity) => ({ type: SET_SNACKBAR_TEXT, text: text, severity: severity})\nexport const setSnackbarShown = (shown) => ({ type: SET_SNACKBAR_SHOWN, shown: shown})","export const SET_BACKDROP_OPEN = 'SET_BACKDROP_OPEN'\nexport const SET_BACKDROP_CLOSED = 'SET_BACKDROP_CLOSED'\n\nexport const setBackdropOpen = () => ({ type: SET_BACKDROP_OPEN })\nexport const setBackdropClosed = () => ({ type: SET_BACKDROP_CLOSED })","const API_URL = \"/api/ipConfig/\";\n\nclass IPConfigService {\n  async getIpConfig() {\n    const response = await fetch(`${API_URL}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    })\n    if (response.status === 200) {\n      const ipConfig = await response.json()\n      return {\n        status: response.status,\n        data: ipConfig\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n  async setIpConfig(networkInterface, config) {\n\n    const response = await fetch(`${API_URL}/${networkInterface}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n      body: JSON.stringify(config)\n    })\n    if (response.status === 200) {\n      const ipConfig = await response.json()\n      return {\n        status: response.status,\n        data: ipConfig\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n}\n\nexport default new IPConfigService();","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function MediaCard(props) {\n  return (\n    <Card>\n      <CardActionArea onClick={props.buttonAction}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.title}\n          </Typography>\n          {props.body}\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={props.buttonAction}>\n          {props.buttonText}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","export const SET_IP_CONFIG_DIALOG_OPEN = 'SET_IP_CONFIG_DIALOG_OPEN';\nexport const SET_IP_CONFIG_DIALOG_IP_ADDRESS = 'SET_IP_CONFIG_DIALOG_IP_ADDRESS';\nexport const SET_IP_CONFIG_DIALOG_SUBNET_MASK = 'SET_IP_CONFIG_DIALOG_SUBNET_MASK';\nexport const SET_IP_CONFIG_DIALOG_GATEWAY = 'SET_IP_CONFIG_DIALOG_GATEWAY';\nexport const SET_IP_CONFIG_DIALOG_DHCP = 'SET_IP_CONFIG_DIALOG_DHCP';\nexport const SET_IP_CONFIG_DIALOG_DNS_PRIMARY = 'SET_IP_CONFIG_DIALOG_DNS_PRIMARY';\nexport const SET_IP_CONFIG_DIALOG_DNS_SECONDARY = 'SET_IP_CONFIG_DIALOG_DNS_SECONDARY';\n\nexport const setIpConfigDialogOpen = (open, interfaceName = false) => ({ type: SET_IP_CONFIG_DIALOG_OPEN, open, interfaceName })\nexport const setIpConfigDialogIpAddress = (ipAddress) => ({ type: SET_IP_CONFIG_DIALOG_IP_ADDRESS, ipAddress })\nexport const setIpConfigDialogSubnetMask = (subnetMask) => ({ type: SET_IP_CONFIG_DIALOG_SUBNET_MASK, subnetMask })\nexport const setIpConfigDialogGateway = (gateway) => ({ type: SET_IP_CONFIG_DIALOG_GATEWAY, gateway })\nexport const setIpConfigDialogDHCP = (dhcp) => ({ type: SET_IP_CONFIG_DIALOG_DHCP, dhcp })\nexport const setIpConfigDialogDNSPrimary = (dnsPrimary) => ({ type: SET_IP_CONFIG_DIALOG_DNS_PRIMARY, dnsPrimary })\nexport const setIpConfigDialogDNSSecondary = (dnsSecondary) => ({ type: SET_IP_CONFIG_DIALOG_DNS_SECONDARY, dnsSecondary })","export const SET_ALL_DEVICES = 'SET_ALL_DEVICES';\nexport const REFRESH_DEVICE_PARAMS = 'REFRESH_DEVICE_PARAMS';\nexport const TOGGLE_TABLE_VIEW = 'TOGGLE_TABLE_VIEW';\n\nexport const setAllDevices = (devices) => ({ type: SET_ALL_DEVICES, devices: devices })\nexport const refreshDeviceParams = (params) => ({ type: REFRESH_DEVICE_PARAMS, params: params })\nexport const toggleTableView = () => ({ type: TOGGLE_TABLE_VIEW })","export const SELECT_DEVICE = 'SELECT_DEVICE';\n\nexport const selectDevice = (deviceID, deviceType) => ({ type: SELECT_DEVICE, deviceID: deviceID, deviceType: deviceType })","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Dropzone from './Dropzone.component';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport FileService from '../services/file.service';\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\nimport { connect } from 'react-redux';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setConfigFile, setIPConfiguration } from '../actions/Settings.action';\nimport { setBackdropOpen, setBackdropClosed } from '../actions/Backdrop.action';\nimport IPConfigService from '../services/ipconfig.service';\nimport Card from '../components/Card.component';\nimport { setIpConfigDialogOpen } from '../actions/IPconfigDialog.action';\nimport Grow from '@material-ui/core/Grow';\nimport { setAllDevices } from '../actions/DevicesSelectionPage.action';\nimport { selectDevice } from '../actions/DevicesList.action';\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  strong: {\n    fontWeight: 700\n  },\n  subTitle: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction Settings({ setSnackbarText, setSnackbarShown, file, setConfigFile, setBackdropOpen, setBackdropClosed, setIPConfiguration, ipconfig, setIpConfigDialogOpen, setAllDevices, selectDevice }) {\n  const classes = useStyles();\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    IPConfigService.getIpConfig().then(res => {\n      if (res.status === 200) {\n        setIPConfiguration(res.data)\n      }\n    })\n  }, [setIPConfiguration])\n\n  const getConfigFile = () => {\n    FileService.downloadConfigFile().then(res => {\n      if (res.status === 200) {\n        FileService.saveFileAs(res.data, 'projectSettings.json')\n      }\n      else if (res.status === 403) {\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\n        setSnackbarShown(true)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\n        setSnackbarShown(true)\n      }\n    })\n  }\n\n  const uploadFile = () => {\n    setBackdropOpen()\n    FileService.uploadConfigFile(file).then(res => {\n      setBackdropClosed()\n      //reset file after upload try\n      setConfigFile(null)\n\n      if (res.status === 200) {\n        setSnackbarText(t('Snackbar.SuccessfulFileUpload'), 'success')\n        setSnackbarShown(true)\n        //reset devices and selected device so they are refreshed on route open\n        setAllDevices([])\n        selectDevice(0, '', '')\n      }\n      else if (res.status === 403) {\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload403'), 'error')\n        setSnackbarShown(true)\n      }\n      else if (res.status === 400) {\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload400'), 'error')\n        setSnackbarShown(true)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\n        setSnackbarShown(true)\n      }\n    })\n  }\n\n  const renderNetworkInterfaces = () => {\n    return Object.entries(ipconfig).map((networkInterface, index) => {\n      networkInterface = networkInterface[1]\n      return <Grow key={networkInterface.name} in={true} style={{ transformOrigin: '0 0 0' }} timeout={(index+1)*500}>\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n          <Card\n            title={networkInterface.name}\n            body={<React.Fragment>\n              {networkInterface.dhcp !== undefined ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">DHCP: {networkInterface.dhcp === true ? t('SettingsPage.DHCPTrue') : t('SettingsPage.DHCPFalse')}</Typography> : null}\n              {networkInterface.ipAddress !== undefined ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('SettingsPage.IPAddress')}: {networkInterface.ipAddress}</Typography> : null}\n              {networkInterface.subnetMask !== undefined ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('SettingsPage.SubnetMask')}: {networkInterface.subnetMask}</Typography> : null}\n              {networkInterface.gateway !== undefined ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('SettingsPage.Gateway')}: {networkInterface.gateway}</Typography> : null}\n              {networkInterface.dns !== undefined && networkInterface.dns[0] !== undefined ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('IPConfigDialog.DNSPrimary')}: {networkInterface.dns[0]}</Typography> : null}\n              {networkInterface.dns !== undefined && networkInterface.dns[1] !== undefined ? <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('IPConfigDialog.DNSSecondary')}: {networkInterface.dns[1]}</Typography> : null}\n            </React.Fragment>}\n            buttonText={t('SettingsPage.Edit')}\n            buttonAction={() => setIpConfigDialogOpen(true, networkInterface.name)} />\n        </Grid>\n      </Grow>\n    })\n\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">{t('SettingsPage.Title')}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Dropzone />\n        </Grid>\n        {file !== null ?\n          <React.Fragment>\n            <Grid item xs={12}>\n              <table>\n                <tbody>\n                  <tr>\n                    <td>{t('SettingsPage.FileName')}&emsp;</td>\n                    <td>{file.name}</td>\n                  </tr>\n                  <tr>\n                    <td>{t('SettingsPage.FileSize')}&emsp;</td>\n                    <td>{(file.size/1024).toFixed(2)} kB</td>\n                  </tr>\n                </tbody>\n              </table>\n            </Grid>\n            <Grid item xs={6} sm={3} md={2}>\n              <Button\n                fullWidth\n                onClick={() => uploadFile()}\n                variant=\"outlined\" color=\"secondary\">{t('SettingsPage.UploadFile')}</Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Divider className={classes.divider} />\n            </Grid>\n\n          </React.Fragment>\n          : null}\n\n        <Grid item xs={6} sm={6} md={4} lg={2}>\n          <Button\n            onClick={() => getConfigFile()}\n            fullWidth variant=\"contained\" color=\"primary\">{t('SettingsPage.LoadButton')}</Button>\n        </Grid>\n        {ipconfig !== null && ipconfig !== {} ?\n          <React.Fragment>\n            <Grid item xs={12} className={classes.subTitle}>\n              <Typography variant=\"h4\">{t('SettingsPage.IPConfigTitle')}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">{t('SettingsPage.NetworkInterfaces')}</Typography>\n            </Grid>\n            {renderNetworkInterfaces()}\n          </React.Fragment>\n          : null}\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    file: state.SettingsReducer.file,\n    ipconfig: state.SettingsReducer.ipconfig\n  }\n}\n\nconst mapDispatchToProps = {\n  setSnackbarText,\n  setSnackbarShown,\n  setConfigFile,\n  setBackdropOpen,\n  setBackdropClosed,\n  setIPConfiguration,\n  setIpConfigDialogOpen,\n  setAllDevices,\n  selectDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M744.23,174.58a1.58,1.58,0,0,1,.46-1.08,1.55,1.55,0,0,1,1.08-.46h25a1.58,1.58,0,0,1,1.08.46,1.63,1.63,0,0,1,.46,1.08v25a1.61,1.61,0,0,1-.46,1.08,1.58,1.58,0,0,1-1.08.46h-25a1.55,1.55,0,0,1-1.08-.46,1.56,1.56,0,0,1-.46-1.08Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#a6c7d5\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M745.77,201.45a1.92,1.92,0,0,1-1.31-.55,1.88,1.88,0,0,1-.55-1.31v-25a1.86,1.86,0,0,1,.55-1.3,1.83,1.83,0,0,1,1.3-.55h25a1.88,1.88,0,0,1,1.85,1.85v25a1.84,1.84,0,0,1-.55,1.31,1.9,1.9,0,0,1-1.3.55Zm-1.22-26.87v25a1.22,1.22,0,0,0,.36.86,1.26,1.26,0,0,0,.86.36h25a1.24,1.24,0,0,0,.85-.36,1.27,1.27,0,0,0,.37-.86v-25a1.27,1.27,0,0,0-1.23-1.22h-25a1.27,1.27,0,0,0-.86.37A1.2,1.2,0,0,0,744.55,174.58Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#005f87\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M768.84,193.36a.29.29,0,0,0,.29-.29v-15.9a.29.29,0,0,0-.29-.3H747.68a.29.29,0,0,0-.29.3v15.9a.29.29,0,0,0,.29.29Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#e5f5f9\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 1.95,\n  y: 2.22,\n  width: 4.09,\n  height: 1.11,\n  fill: \"#005f87\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M745.77,200.48a1,1,0,0,1-.9-.88v-25h0a1,1,0,0,1,.88-.88h25a1,1,0,0,1,.9.88v25a1,1,0,0,1-.89.89Zm-.62-25.89v25a.68.68,0,0,0,.63.62h25a.69.69,0,0,0,.62-.63v-25a.69.69,0,0,0-.63-.63h-25A.69.69,0,0,0,745.15,174.59Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#005f87\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"8.74 22.33 8.74 26.69 4.39 26.69 4.39 27.01 9.06 27.01 9.06 22.33 8.74 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"13.84 22.33 13.84 26.69 9.49 26.69 9.49 27.01 14.16 27.01 14.16 22.33 13.84 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"18.94 22.33 18.94 26.69 14.6 26.69 14.6 27.01 19.27 27.01 19.27 22.33 18.94 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"24.05 22.33 24.05 26.69 19.71 26.69 19.71 27.01 24.37 27.01 24.37 22.33 24.05 22.33\",\n  fill: \"#005f87\"\n});\n\nfunction SvgPacIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"GRAPHIC\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"10.13mm\",\n    height: \"10.13mm\",\n    viewBox: \"0 0 28.71 28.72\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPacIcon);\nexport default __webpack_public_path__ + \"static/media/PacIcon.cf00dc55.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.22,\n  y: 0.22,\n  width: 20.23,\n  height: 42.6,\n  fill: \"#98c0d6\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M753.43,208.61H732.77v-43h20.66Zm-20.23-.44H753V166H733.2Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M733,207.16v-.43a31.23,31.23,0,0,0,7.22-.87h13v.43H740.28A31.35,31.35,0,0,1,733,207.16Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 15.88,\n  y: 0.22,\n  width: 0.12,\n  height: 3.13,\n  fill: \"#005b81\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 12.38,\n  y: 0.22,\n  width: 0.12,\n  height: 3.13,\n  fill: \"#005b81\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M750.12,169h-14v-3.25h14Zm-13.93-.12H750v-3H736.19Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 6.25,\n  y: 1.06,\n  width: 0.64,\n  height: 0.64,\n  fill: \"#eaf6f9\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 7.41,\n  y: 1.06,\n  width: 0.64,\n  height: 0.64,\n  fill: \"#eaf6f9\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 8.57,\n  y: 1.06,\n  width: 0.64,\n  height: 0.64,\n  fill: \"#eaf6f9\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M742.52,167.93h-4.06V165.8h4.06Zm-3.94-.12h3.83v-1.89h-3.83Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"11.64 34.24 9.03 34.24 9.03 31.34 8.74 31.34 8.74 34.53 11.93 34.53 11.93 31.34 11.64 31.34 11.64 34.24\",\n  fill: \"#005b81\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"9.03 24.68 9.03 27.57 8.74 27.57 8.74 24.39 11.93 24.39 11.93 27.57 11.64 27.57 11.64 24.68 9.03 24.68\",\n  fill: \"#005b81\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"8.45 30.76 5.55 30.76 5.55 28.15 8.45 28.15 8.45 27.86 5.26 27.86 5.26 31.05 8.45 31.05 8.45 30.76\",\n  fill: \"#005b81\"\n});\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"6.57 35.49 6.57 35.78 3.38 35.78 3.38 32.59 3.67 32.59 3.67 35.49 6.57 35.49\",\n  fill: \"#005b81\"\n});\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"17 32.59 17 35.49 14.1 35.49 14.1 35.78 17.29 35.78 17.29 32.59 17 32.59\",\n  fill: \"#005b81\"\n});\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"12.22 31.05 12.22 30.76 15.12 30.76 15.12 28.15 12.22 28.15 12.22 27.86 15.41 27.86 15.41 31.05 12.22 31.05\",\n  fill: \"#005b81\"\n});\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M751.66,202.49H734.54V169.93h17.12Zm-17-.11h16.88V170H734.66Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref19 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 4.52,\n  y: 4.8,\n  width: 5.02,\n  height: 1.33,\n  fill: \"#005b81\"\n});\n\nvar _ref20 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M750.12,189.28h-14V169.93h14Zm-13.92-.11H750V170H736.2Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref21 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 4.52,\n  y: 7.4,\n  width: 11.62,\n  height: 14.83,\n  fill: \"#eaf6f9\"\n});\n\nvar _ref22 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 20.46,\n  y: 0.22,\n  width: 20.23,\n  height: 42.6,\n  fill: \"#98c0d6\"\n});\n\nvar _ref23 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M773.68,208.61H753v-43h20.67Zm-20.24-.44h19.8V166h-19.8Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref24 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M753.23,207.16v-.43a31.21,31.21,0,0,0,7.21-.87h13v.43H760.52A31.35,31.35,0,0,1,753.23,207.16Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref25 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 40.7,\n  y: 0.22,\n  width: 10.09,\n  height: 42.61,\n  fill: \"#98c0d6\"\n});\n\nvar _ref26 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M783.77,208.61H773.25V165.56h10.52Zm-10.09-.44h9.66V166h-9.66Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref27 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M773.46,207.16v-.43a30.12,30.12,0,0,0,7.2-.87h2.89v.43h-2.81A30.72,30.72,0,0,1,773.46,207.16Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nvar _ref28 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M782.27,169h-7.53v-3.25h7.53Zm-7.41-.11h7.3v-3h-7.3Z\",\n  transform: \"translate(-732.77 -165.56)\",\n  fill: \"#005b81\"\n});\n\nfunction SvgS7Icon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"GRAPHIC\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"17.99mm\",\n    height: \"15.19mm\",\n    viewBox: \"0 0 51 43.04\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19, _ref20, _ref21, _ref22, _ref23, _ref24, _ref25, _ref26, _ref27, _ref28);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgS7Icon);\nexport default __webpack_public_path__ + \"static/media/S7Icon.475f3f22.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M158.74,187.09a17,17,0,1,1-17-17A17,17,0,0,1,158.74,187.09Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#98c0d6\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M141.73,204.52a17.44,17.44,0,1,1,17.44-17.43A17.45,17.45,0,0,1,141.73,204.52Zm0-34a16.59,16.59,0,1,0,16.59,16.59A16.6,16.6,0,0,0,141.73,170.5Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M141.73,192a4.9,4.9,0,1,1,4.9-4.9A4.9,4.9,0,0,1,141.73,192Zm0-9.57a4.67,4.67,0,1,0,4.67,4.67A4.68,4.68,0,0,0,141.73,182.42Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M141.73,189.81a2.72,2.72,0,1,1,2.72-2.72A2.72,2.72,0,0,1,141.73,189.81Zm0-5.21a2.49,2.49,0,1,0,2.49,2.49A2.5,2.5,0,0,0,141.73,184.6Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M132.16,181.72a1.52,1.52,0,1,1,1.52-1.52A1.53,1.53,0,0,1,132.16,181.72Zm0-2.81a1.29,1.29,0,1,0,1.3,1.29A1.29,1.29,0,0,0,132.16,178.91Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M129.24,189.16a2.09,2.09,0,1,1,2.08-2.08A2.08,2.08,0,0,1,129.24,189.16Zm0-3.94a1.86,1.86,0,1,0,1.85,1.86A1.86,1.86,0,0,0,129.24,185.22Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M132.16,195.47a1.52,1.52,0,1,1,1.52-1.52A1.53,1.53,0,0,1,132.16,195.47Zm0-2.81a1.3,1.3,0,1,0,1.3,1.29A1.29,1.29,0,0,0,132.16,192.66Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M138.13,199.82h0a1.52,1.52,0,1,1,1.22-2.42,1.52,1.52,0,0,1-.32,2.12A1.46,1.46,0,0,1,138.13,199.82Zm0-2.81a1.25,1.25,0,0,0-.77.25,1.3,1.3,0,0,0-.27,1.81,1.28,1.28,0,0,0,1,.52,1.27,1.27,0,0,0,.77-.25,1.29,1.29,0,0,0,.51-.85,1.27,1.27,0,0,0-.24-1A1.3,1.3,0,0,0,138.13,197Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M151.3,181.72a1.52,1.52,0,1,1,1.52-1.52A1.53,1.53,0,0,1,151.3,181.72Zm0-2.81a1.29,1.29,0,1,0,1.3,1.29A1.29,1.29,0,0,0,151.3,178.91Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M154.23,189.16a2.09,2.09,0,1,1,2.08-2.08A2.09,2.09,0,0,1,154.23,189.16Zm0-3.94a1.86,1.86,0,1,0,1.85,1.86A1.86,1.86,0,0,0,154.23,185.22Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M151.3,195.47a1.52,1.52,0,1,1,1.52-1.52A1.53,1.53,0,0,1,151.3,195.47Zm0-2.81a1.3,1.3,0,1,0,1.3,1.29A1.29,1.29,0,0,0,151.3,192.66Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M145.33,199.82a1.52,1.52,0,0,1-1.22-2.42,1.54,1.54,0,0,1,1.23-.62,1.48,1.48,0,0,1,.9.3,1.5,1.5,0,0,1,.6,1,1.52,1.52,0,0,1-.28,1.13A1.56,1.56,0,0,1,145.33,199.82Zm0-2.81a1.3,1.3,0,0,0-1.05.52,1.27,1.27,0,0,0-.23,1,1.32,1.32,0,0,0,.5.85,1.29,1.29,0,0,0,.77.25,1.27,1.27,0,0,0,1-.52,1.23,1.23,0,0,0,.24-1,1.29,1.29,0,0,0-.51-.85A1.22,1.22,0,0,0,145.34,197Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M139.68,202.54,134.52,201l1.7-5.6.45.14.34-1.14c-.28-.18-.51-.35-.72-.51l-.9.67.2.27-.1.07-4.6,3.42L127.67,194l.09-.06,4.61-3.42.28.37.95-.7a8.82,8.82,0,0,1-.45-1.67h-.71a3.51,3.51,0,1,1,0-2.83h.72a8.87,8.87,0,0,1,.44-1.62l-.95-.71-.28.38-4.7-3.49,3.22-4.33.09.07,4.61,3.42-.2.27.9.67a8.76,8.76,0,0,1,3-1.57,14.73,14.73,0,0,0-2.26-7.54l.2-.12a14.54,14.54,0,0,1,2.28,7.75v.05l0,0,0,0a8.42,8.42,0,0,0-3,1.6l-.07.06-1.23-.92.2-.27-4.34-3.21-2.94,4,4.33,3.21.28-.38,1.27.95,0,.08a8.74,8.74,0,0,0-.47,1.75l0,.1h-1.06l0-.07a3.28,3.28,0,1,0,0,2.51l0-.07h1.05l0,.09a8.66,8.66,0,0,0,.48,1.81l0,.08-1.27.94-.28-.38L128,194l2.94,4,4.34-3.22-.2-.27,1.23-.91.07.06a8.94,8.94,0,0,0,.84.6l.07.05-.46,1.51-.44-.13-1.58,5.16,4.73,1.44,1.57-5.16-.32-.1.44-1.46h1l.45,1.46-.33.1,1.57,5.16,4.74-1.44-1.58-5.16-.45.13-.46-1.51.07-.05a8.47,8.47,0,0,0,.85-.6l.07-.06,1.23.91-.2.27,4.34,3.22,2.94-4-4.34-3.22-.28.38-1.27-.94,0-.08a8.12,8.12,0,0,0,.49-1.81v-.09h1l0,.07a3.29,3.29,0,1,0,0-2.51l0,.07h-1l0-.1a8.37,8.37,0,0,0-.48-1.75l0-.08,1.27-.95.28.38,4.34-3.21-2.94-4-4.34,3.21.2.27-1.23.92-.07-.06a8.42,8.42,0,0,0-3-1.6l-.08,0v-.08a14.66,14.66,0,0,1,2.29-7.76l.2.12a14.38,14.38,0,0,0-2.26,7.54,8.62,8.62,0,0,1,3,1.57l.91-.67-.2-.27,4.7-3.49,3.21,4.33-4.7,3.49-.28-.38-.95.71a8.24,8.24,0,0,1,.45,1.62H151a3.51,3.51,0,1,1,0,2.83h-.7a8.82,8.82,0,0,1-.45,1.67l.94.7.28-.37,4.7,3.48-3.21,4.34-4.7-3.49.2-.27-.91-.67c-.2.16-.43.32-.72.52l.34,1.13.45-.14L149,201l-5.17,1.57-1.7-5.6.32-.09-.33-1.08h-.68l-.33,1.08.33.09Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#005b81\"\n});\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M146.75,174.84a1.28,1.28,0,1,0,1.28-1.27A1.28,1.28,0,0,0,146.75,174.84Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#eaf6f9\"\n});\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M136.71,174.84a1.27,1.27,0,1,1-1.27-1.27A1.28,1.28,0,0,1,136.71,174.84Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#eaf6f9\"\n});\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M133.57,187.12a1.28,1.28,0,1,0,1.27-1.27A1.27,1.27,0,0,0,133.57,187.12Z\",\n  transform: \"translate(-124.3 -169.65)\",\n  fill: \"#eaf6f9\"\n});\n\nfunction SvgInternalDeviceIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"GRAPHIC\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"12.3mm\",\n    height: \"12.3mm\",\n    viewBox: \"0 0 34.87 34.87\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInternalDeviceIcon);\nexport default __webpack_public_path__ + \"static/media/InternalDeviceIcon.2a2f7093.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M744.23,174.58a1.58,1.58,0,0,1,.46-1.08,1.55,1.55,0,0,1,1.08-.46h25a1.58,1.58,0,0,1,1.08.46,1.63,1.63,0,0,1,.46,1.08v25a1.61,1.61,0,0,1-.46,1.08,1.58,1.58,0,0,1-1.08.46h-25a1.55,1.55,0,0,1-1.08-.46,1.56,1.56,0,0,1-.46-1.08Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#a6c7d5\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M745.77,201.45a1.92,1.92,0,0,1-1.31-.55,1.88,1.88,0,0,1-.55-1.31v-25a1.86,1.86,0,0,1,.55-1.3,1.83,1.83,0,0,1,1.3-.55h25a1.88,1.88,0,0,1,1.85,1.85v25a1.84,1.84,0,0,1-.55,1.31,1.9,1.9,0,0,1-1.3.55Zm-1.22-26.87v25a1.22,1.22,0,0,0,.36.86,1.26,1.26,0,0,0,.86.36h25a1.24,1.24,0,0,0,.85-.36,1.27,1.27,0,0,0,.37-.86v-25a1.27,1.27,0,0,0-1.23-1.22h-25a1.27,1.27,0,0,0-.86.37A1.2,1.2,0,0,0,744.55,174.58Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#005f87\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M768.84,193.36a.29.29,0,0,0,.29-.29v-15.9a.29.29,0,0,0-.29-.3H747.68a.29.29,0,0,0-.29.3v15.9a.29.29,0,0,0,.29.29Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#e5f5f9\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 1.95,\n  y: 2.22,\n  width: 4.09,\n  height: 1.11,\n  fill: \"#005f87\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M745.77,200.48a1,1,0,0,1-.9-.88v-25h0a1,1,0,0,1,.88-.88h25a1,1,0,0,1,.9.88v25a1,1,0,0,1-.89.89Zm-.62-25.89v25a.68.68,0,0,0,.63.62h25a.69.69,0,0,0,.62-.63v-25a.69.69,0,0,0-.63-.63h-25A.69.69,0,0,0,745.15,174.59Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#005f87\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"8.74 22.33 8.74 26.69 4.39 26.69 4.39 27.01 9.06 27.01 9.06 22.33 8.74 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"13.84 22.33 13.84 26.69 9.49 26.69 9.49 27.01 14.16 27.01 14.16 22.33 13.84 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"18.94 22.33 18.94 26.69 14.6 26.69 14.6 27.01 19.27 27.01 19.27 22.33 18.94 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"24.05 22.33 24.05 26.69 19.71 26.69 19.71 27.01 24.37 27.01 24.37 22.33 24.05 22.33\",\n  fill: \"#005f87\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M747.71,178.6a1.54,1.54,0,0,1,.45-1.08,1.59,1.59,0,0,1,1.09-.46h25a1.59,1.59,0,0,1,1.09.46,1.54,1.54,0,0,1,.45,1.08v25a1.54,1.54,0,0,1-1.54,1.53h-25a1.54,1.54,0,0,1-1.54-1.53Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#a6c7d5\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M749.25,205.46a1.88,1.88,0,0,1-1.86-1.85v-25a1.88,1.88,0,0,1,1.85-1.85h25a1.88,1.88,0,0,1,1.86,1.85v25a1.88,1.88,0,0,1-1.85,1.85ZM748,178.6v25a1.23,1.23,0,0,0,1.22,1.21h25a1.23,1.23,0,0,0,1.22-1.22v-25a1.23,1.23,0,0,0-1.22-1.22h-25A1.23,1.23,0,0,0,748,178.6Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#005f87\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M772.32,197.38a.29.29,0,0,0,.29-.29V181.18a.29.29,0,0,0-.29-.29H751.16a.29.29,0,0,0-.29.29v15.91a.29.29,0,0,0,.29.29Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#e5f5f9\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 5.42,\n  y: 6.24,\n  width: 4.09,\n  height: 1.11,\n  fill: \"#005f87\"\n});\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M749.24,204.5a1,1,0,0,1-.89-.89v-25h0a1,1,0,0,1,.88-.89h25a1,1,0,0,1,.89.89v25a1,1,0,0,1-.88.9Zm-.62-25.89v25a.69.69,0,0,0,.64.62h25a.69.69,0,0,0,.62-.63v-25a.69.69,0,0,0-.64-.62h-25A.69.69,0,0,0,748.62,178.61Z\",\n  transform: \"translate(-743.91 -172.73)\",\n  fill: \"#005f87\"\n});\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"12.21 26.34 12.21 30.71 7.87 30.71 7.87 31.03 12.54 31.03 12.54 26.34 12.21 26.34\",\n  fill: \"#005f87\"\n});\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"17.31 26.34 17.31 30.71 12.97 30.71 12.97 31.03 17.64 31.03 17.64 26.34 17.31 26.34\",\n  fill: \"#005f87\"\n});\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"22.42 26.34 22.42 30.71 18.08 30.71 18.08 31.03 22.74 31.03 22.74 26.34 22.42 26.34\",\n  fill: \"#005f87\"\n});\n\nvar _ref19 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"27.53 26.34 27.53 30.71 23.18 30.71 23.18 31.03 27.85 31.03 27.85 26.34 27.53 26.34\",\n  fill: \"#005f87\"\n});\n\nfunction SvgMbGatewayIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"GRAPHIC\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"11.36mm\",\n    height: \"11.55mm\",\n    viewBox: \"0 0 32.19 32.74\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMbGatewayIcon);\nexport default __webpack_public_path__ + \"static/media/MBGatewayIcon.482b2385.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M781.05,202.72h-47.3a5.2,5.2,0,1,1,1-10.3h0a6.12,6.12,0,1,1,9.53-7.67h0a10.85,10.85,0,0,1-.24-2.29,11,11,0,0,1,21.15-4.29l.08-.08a9.41,9.41,0,0,1,16,9.47h0A7.52,7.52,0,0,1,788,195a7.67,7.67,0,0,1-7.52,7.69\",\n  transform: \"translate(-728.23 -171.13)\",\n  fill: \"#98c0d6\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M781.05,203h-47.3a5.51,5.51,0,1,1,.29-11,6.43,6.43,0,0,1,5.44-9.88,6.41,6.41,0,0,1,4.29,1.64,11.69,11.69,0,0,1-.08-1.32,11.33,11.33,0,0,1,21.55-4.88,9.74,9.74,0,0,1,16.5,9.72,7.82,7.82,0,0,1,6.57,7.73,8.07,8.07,0,0,1-7.26,8Zm-47.3-10.39a4.88,4.88,0,0,0,0,9.76h46.72a7.39,7.39,0,0,0,7.2-7.38,7.18,7.18,0,0,0-6.41-7.15l-.42,0,.16-.39a9,9,0,0,0,.69-3.48,9.1,9.1,0,0,0-16.21-5.67l-.42.48-.19-.47a10.69,10.69,0,0,0-20.54,4.16,11.1,11.1,0,0,0,.23,2.23l-.21,0-.26.3L744,185v-.06a5.8,5.8,0,0,0-9,7.33l.55.68-.86-.17A5.5,5.5,0,0,0,733.75,192.65Z\",\n  transform: \"translate(-728.23 -171.13)\",\n  fill: \"#005b81\"\n});\n\nfunction SvgMsAgentIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"GRAPHIC\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"21.19mm\",\n    height: \"11.26mm\",\n    viewBox: \"0 0 60.08 31.91\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMsAgentIcon);\nexport default __webpack_public_path__ + \"static/media/MSAgentIcon.da1d1ad7.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0.22,\n  y: 0.22,\n  width: 34.7,\n  height: 34.7,\n  fill: \"#a6c7d5\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M775.83,204.65H740.7V169.52h35.13Zm-34.69-.43H775.4V170H741.14Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M751.93,186.73l-1,0a7.37,7.37,0,0,1,7-7l0,1a6.35,6.35,0,0,0-6.06,6.07Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M748.45,186.72l-1,0A10.84,10.84,0,0,1,758,176.17l0,1a9.81,9.81,0,0,0-9.54,9.54Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M744.85,186.71l-1,0A14.42,14.42,0,0,1,758,172.57l0,1a13.43,13.43,0,0,0-13.13,13.13Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M758.59,194.35l-.05-1a6.34,6.34,0,0,0,4.21-1.85,6.27,6.27,0,0,0,1.85-4.22l1,0a7.37,7.37,0,0,1-7,7Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M758.58,197.83l0-1a9.83,9.83,0,0,0,9.54-9.54l1,0a10.84,10.84,0,0,1-10.52,10.52Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M758.58,201.43l0-1a13.43,13.43,0,0,0,13.14-13.13l1,0a14.44,14.44,0,0,1-14.12,14.12Z\",\n  transform: \"translate(-740.7 -169.52)\",\n  fill: \"#005f87\"\n});\n\nfunction SvgMqttIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"GRAPHIC\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"12.39mm\",\n    height: \"12.39mm\",\n    viewBox: \"0 0 35.13 35.13\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMqttIcon);\nexport default __webpack_public_path__ + \"static/media/MQTTIcon.49d79e9c.svg\";\nexport { ForwardRef as ReactComponent };","const sortByDeviceName = (obj) => Object.entries(obj).sort((a, b) => a[1].name.localeCompare(b[1].name)).reduce((o, [k, v]) => { o[k] = v; return o }, {})\n\nexport const sortByDeviceType = (obj) => {\n  let connectableDevices = {}\n  let internalDevices = {}\n  let agentDevices = {}\n  let restDevices = {}\n  for (const [key, value] of Object.entries(obj)) {\n    if (value.type === 'MBDevice' || value.type === 'MBGatewayDevice' || value.type === 'S7Device') {\n      connectableDevices = {\n        ...connectableDevices,\n        [key]: value\n      }\n    }\n    else if (value.type === 'InternalDevice') {\n      internalDevices = {\n        ...internalDevices,\n        [key]: value\n      }\n    }\n    else if (value.type === 'MSAgentDevice' || value.type === 'MSMQTTAgentDevice') {\n      agentDevices = {\n        ...agentDevices,\n        [key]: value\n      }\n    }\n    else {\n      restDevices = {\n        ...restDevices,\n        [key]: value\n      }\n    }\n  }\n  const sortedConnectableDevices = sortByDeviceName(connectableDevices)\n  const sortedInternalDevices = sortByDeviceName(internalDevices)\n  const sortedAgentDevices = sortByDeviceName(agentDevices)\n  const sortedRestDevices = sortByDeviceName(restDevices)\n  return {\n    sortedConnectableDevices,\n    sortedInternalDevices,\n    sortedAgentDevices,\n    sortedRestDevices\n  }\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux';\nimport { selectDevice } from '../actions/DevicesList.action';\nimport OnlineCircleIcon from '@material-ui/icons/FiberManualRecord';\nimport DeviceUnknownIcon from '@material-ui/icons/DeviceUnknown';\nimport { ReactComponent as ModbusDeviceIcon } from '../assets/PacIcon.svg';\nimport { ReactComponent as S7DeviceIcon } from '../assets/S7Icon.svg';\nimport { ReactComponent as InternalDeviceIcon } from '../assets/InternalDeviceIcon.svg';\nimport { ReactComponent as MBGatewayDeviceIcon } from '../assets/MBGatewayIcon.svg';\nimport { ReactComponent as MSAgentDeviceIcon } from '../assets/MSAgentIcon.svg';\nimport { ReactComponent as MQTTDeviceIcon } from '../assets/MQTTIcon.svg';\nimport { sortByDeviceType } from '../utilities/sortObject.utility';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    color: '#2fcc2f',\n    height: '15px',\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  inactive: {\n    color: 'red',\n    height: '15px',\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  iconMarginHorizontal: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '40px'\n  },\n  listItem: {\n    maxHeight: '60px',\n  },\n  list: {\n    paddingTop: '0px',\n    paddingBottom: '0px'\n  }\n}));\n\nfunction SimpleList(props) {\n  const classes = useStyles();\n  const { allDevices, selectedDevice, selectDevice } = props;\n\n  useEffect(() => {\n    if (selectedDevice.selectedDeviceID === '' && Object.keys(allDevices).length > 0) {\n      const firstEntry = Object.entries(allDevices)[0]\n      selectDevice(firstEntry[1].id, firstEntry[1].type)\n    }\n  }, [allDevices, selectDevice, selectedDevice])\n\n  const deviceTypeIcon = (type) => {\n    switch (type) {\n      case 'MBDevice':\n        return <ModbusDeviceIcon className={classes.iconMarginHorizontal} />\n      case 'S7Device':\n        return <S7DeviceIcon className={classes.iconMarginHorizontal} />\n      case 'InternalDevice':\n        return <InternalDeviceIcon className={classes.iconMarginHorizontal} />\n      case 'MBGatewayDevice':\n        return <MBGatewayDeviceIcon className={classes.iconMarginHorizontal} />\n      case 'MSAgentDevice':\n        return <MSAgentDeviceIcon className={classes.iconMarginHorizontal} />\n      case 'MSMQTTAgentDevice':\n        return <MQTTDeviceIcon className={classes.iconMarginHorizontal} />\n      default:\n        return <DeviceUnknownIcon className={classes.iconMarginHorizontal} />\n    }\n  }\n\n  const devicesToDisplay = sortByDeviceType(allDevices)\n  const createDevicesLists = () => {\n    return Object.values(devicesToDisplay).map((deviceGroup, index) => {\n      return (\n        Object.values(deviceGroup).length > 0 ?\n          <React.Fragment key={index}>\n              <List component=\"nav\" aria-label=\"device-list\" className={classes.list}>\n                {Object.values(deviceGroup).map((device, index) => {\n                  const isActive = device.isConnected !== undefined ? device.isConnected && device.isActive : device.isActive;\n                  return (\n                    <ListItem\n                      className={classes.listItem}\n                      key={index}\n                      button\n                      selected={selectedDevice.selectedDeviceID === device.id ? true : false}\n                      onClick={() => props.selectDevice(device.id, device.type)}>\n                      <ListItemIcon>\n                        <OnlineCircleIcon className={isActive ? classes.active : classes.inactive} />\n                        {deviceTypeIcon(device.type)}\n                      </ListItemIcon>\n                      <ListItemText primary={device.name} />\n                    </ListItem>\n                  )\n                })}\n              </List>\n            <Divider />\n          </React.Fragment>\n          : null\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {createDevicesLists()}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices\n  }\n}\n\nconst mapDispatchToProps = {\n  selectDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleList)","const API_URL = \"/api/device/\";\n\nclass DeviceService {\n  async getDevices() {\n    const response = await fetch(`${API_URL}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    })\n    if(response.status === 200) {\n      const deviceData = await response.json()\n      return {\n        status: response.status,\n        data: deviceData\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n}\n\nexport default new DeviceService();","export const SET_UNIVERSAL_TABS_NAME_INDEX = 'SET_UNIVERSAL_TABS_NAME_INDEX';\n\nexport const setUniversalTabsNameIndex = (name, index) => ({ type: SET_UNIVERSAL_TABS_NAME_INDEX, name: name, index: index })","// universal tabs component with tabpanels, only horizontal\n//pass required prop 'tabs' to it with [{label: yourlabeltext, content: yourcontent}, ...]\n// prop required 'name' required for redux active tab index storage\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { setUniversalTabsNameIndex } from '../actions/UniversalTabs.action';\nimport { connect } from 'react-redux';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={1}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(8)\n  },\n  defaultRoot: {\n    flexGrow: 1,\n    width: '100%',\n    marginBottom: '20px'\n  },\n  noElevation: {\n    boxShadow: 'unset'\n  },\n  tabpanel: {\n    overflow: 'auto'\n  }\n}));\n\nfunction ScrollableTabsButtonForce(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={props.defaultMargin ? classes.defaultRoot : classes.root}>\n      <AppBar position=\"static\" color=\"default\" className={classes.noElevation}>\n        <Tabs\n          value={props.tabsInstance[props.name] || 0}\n          onChange={(event, value)=>props.setUniversalTabsNameIndex(props.name, value)}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          aria-label=\"scrollable force tabs\"\n        >\n          {props.tabs.map((tab, i) => {\n            return <Tab key={`tab-${i}`} label={tab.label} {...a11yProps(i)} />\n          })}\n        </Tabs>\n      </AppBar>\n      {props.tabs.map((tab, i) => {\n        return <TabPanel key={`tabpanel-${i}`} value={props.tabsInstance[props.name] || 0} index={i} className={classes.tabpanel}>\n          {tab.content}\n        </TabPanel>\n      })}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tabsInstance: state.UniversalTabsReducer\n  }\n}\n\nconst mapDispatchToProps = {\n  setUniversalTabsNameIndex,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScrollableTabsButtonForce)","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport function UniversalTable({ rows, columns, small = false, noElevation = false }) {\n  return (\n    <TableContainer component={noElevation ? \"div\" : Paper}>\n      <Table aria-label=\"simple table\" size={small ? \"small\" : \"medium\"}>\n        <TableHead>\n          <TableRow>\n            {columns.map((col) => <TableCell style={{ width: `${100 / columns.length}%` }} key={col}>{col}</TableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, i) => {\n            return (\n              <TableRow key={i}>\n                {row.map((cell, index) => <TableCell key={index}>{cell !== undefined ? cell : ''}</TableCell>\n                )}\n              </TableRow>\n            )\n          }\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { toggleTableView } from '../../actions/DevicesSelectionPage.action';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  devicesTitleInline: {\n    display: 'inline-block'\n  },\n  switch: {\n    textAlign: 'right'\n  }\n}));\n\nfunction DeviceDetailsTitle({ selectedDevice, allDevices, toggleTableView, tableView }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  const checked = () => {\n    return tableView === 'simple' ? false : true\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignContent=\"flex-end\">\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h4\" className={classes.devicesTitleInline}>{device.name}</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} className={classes.switch}>\n          <FormControlLabel\n            control={<Switch checked={checked()} onChange={() => toggleTableView()} />}\n            label={t('DevicesSelectionPage.TableSwitchAdvancedView')}\n          />\n        </Grid>\n      </Grid>\n      <Divider />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\nconst mapDispatchToProps = {\n  toggleTableView\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceDetailsTitle)","export const formatDateTime = (date) => {\n  const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()\n  const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()\n  const seconds = date.getSeconds() < 10 ? `0${date.getSeconds()}` : date.getSeconds()\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\n  const month = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n  const year = date.getFullYear()\n\n  return `${day}.${month}.${year}, ${hours}:${minutes}:${seconds}`;\n}","export const sortRowsBy = (rows, cols, nameTranslationObject, variableSetType, sortBy1stLevel, sortBy2ndLevel, sortBy3rdLevel ) => {\n  //modbus specific\n  const MBUnitIDIndex = cols.findIndex(col => col === sortBy1stLevel)\n  const MBFunctionIndex = cols.findIndex(col => col === sortBy2ndLevel)\n  //s7 specific\n  const S7MemoryTypeIndex = cols.findIndex(col => col === sortBy1stLevel)\n  const S7DBNumberIndex = cols.findIndex(col => col === sortBy2ndLevel)\n  //generic\n  const offsetIndex = cols.findIndex(col => col === sortBy3rdLevel)\n  const nameIndex = cols.findIndex(col => col === nameTranslationObject)\n\n  if (variableSetType === 'MB') {\n    //expanded table\n    if (MBUnitIDIndex !== -1 && MBFunctionIndex !== -1 && offsetIndex !== -1) {\n      rows.sort((a, b) => a[MBUnitIDIndex] - b[MBUnitIDIndex] || a[MBFunctionIndex] - b[MBFunctionIndex] || a[offsetIndex] - b[offsetIndex])\n    }\n    //simple view\n    else {\n      rows.sort((a, b) => a[nameIndex].localeCompare(b[nameIndex]))\n    }\n  }\n\n  else if (variableSetType === 'S7') {\n    //expanded table, memoryType === 'DB'\n    if (S7MemoryTypeIndex !== -1 && S7DBNumberIndex !== -1 && offsetIndex !== -1) {\n      rows.sort((a, b) => a[S7MemoryTypeIndex].localeCompare(b[S7MemoryTypeIndex]) || a[S7DBNumberIndex] - b[S7DBNumberIndex] || a[offsetIndex] - b[offsetIndex])\n    }\n    //simple view\n    else {\n      rows.sort((a, b) => a[nameIndex] - b[nameIndex])\n    }\n  }\n return rows\n};","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function DeviceConnectionVariableTable({ deviceConnectionVariablesArray, tableView }) {\n  const { t } = useTranslation();\n\n  let rows = []\n  let cols = []\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.lastValueTick'),\n    ]\n  }\n  deviceConnectionVariablesArray.forEach(variable => {\n    if (tableView === 'simple') {\n      rows.push([variable.name, `${variable.value}`, variable.unit, variable.lastValueTick])\n    }\n    else {\n      rows.push([variable.name, variable.type, `${variable.value}`, variable.unit, variable.defaultValue, variable.sampleTime, variable.lastValueTick])\n    }\n  })\n  return <UniversalTable columns={cols} rows={rows} />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(DeviceConnectionVariableTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function IncreaseCalculatorTable({ increaseCalcElementsArray, selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n  \n  let rows = []\n  let cols = []\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.factor'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.overflow'),\n    t('DevicesSelectionPage.Properties.calculationInterval'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick'),\n    ]\n  }\n  increaseCalcElementsArray.forEach(calcElement => {\n    //associate variableID with variable name\n    calcElement = {\n      ...calcElement,\n      variableIDName: device.variables[calcElement.variableID] !== undefined ? device.variables[calcElement.variableID].name : ''\n    }\n\n    if (tableView === 'simple') {\n      rows.push([calcElement.name, calcElement.value, calcElement.unit, calcElement.lastValueTick])\n    }\n    else {\n      rows.push([calcElement.name, calcElement.type, calcElement.value, calcElement.unit, calcElement.defaultValue, calcElement.factor, calcElement.sampleTime, calcElement.overflow, calcElement.calculationInterval, calcElement.variableIDName, calcElement.lastValueTick])\n    }\n  })\n  return (\n    <UniversalTable columns={cols} rows={rows} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(IncreaseCalculatorTable)","export const SET_COLLAPSIBLE_TABLE_INSTANCE = 'SET_COLLAPSIBLE_TABLE_INSTANCE';\n\nexport const setCollapsibleTableInstance = (instanceName, collapsedState) => ({ type: SET_COLLAPSIBLE_TABLE_INSTANCE, instanceName, collapsedState })","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { setCollapsibleTableInstance } from '../actions/CollapsibleTable.action';\n\nconst useRowStyles = makeStyles({\n  expandArrow: {\n    maxWidth: '50px'\n  },\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction Row(props) {\n  const { row, collapsedContent, rowInstance, rowName, setCollapsibleTableInstance } = props;\n  const classes = useRowStyles();\n\n  useEffect(() => {\n    if (rowInstance[rowName] === undefined) {\n      setCollapsibleTableInstance(rowName, false)\n    }\n  }, [rowName, setCollapsibleTableInstance, rowInstance])\n\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell className={classes.expandArrow}>\n          {collapsedContent !== null && collapsedContent !== undefined ?\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setCollapsibleTableInstance(rowName, !rowInstance[rowName])}>\n              {rowInstance[rowName] ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n            : null}\n        </TableCell>\n        {row.map((cell, i) => {\n          return (\n            <TableCell key={i}>\n              {cell}\n            </TableCell>\n          )\n        })}\n      </TableRow>\n      {collapsedContent !== null && collapsedContent !== undefined ?\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={row.length + 1}>\n            <Collapse in={rowInstance[rowName]} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                {collapsedContent}\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n        :\n        null}\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    rowInstance: state.CollapsibleTableReducer\n  }\n}\n\nconst mapDispatchToProps = {\n  setCollapsibleTableInstance\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Row)","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CollapsedRow from './CollapsedRow.component';\n\nexport function CollapsibleTable({ columns, rows, collapsedRows, name }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            {columns.map((col, i) => <TableCell style={{ width: `${100 / columns.length}%` }} key={col}>{col}</TableCell>)}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, i) => {\n            const rowContainsCollapsedContainer = collapsedRows.filter(collapsedRow => collapsedRow.rowIndex === i)\n            return (<CollapsedRow rowName={`${name}-${i}`} key={row} row={row} collapsedContent={rowContainsCollapsedContainer.length !== 0 ? rowContainsCollapsedContainer[0].content : null} />)\n          })\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport {CollapsibleTable} from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function SumCalculatorTable({ sumCalcElementsArray, selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  let rows = []\n  let cols = []\n  let collapsedRows = []\n  let collapsedCols = []\n  let rowToBeCollapsed = []\n\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    //push collapsed cols\n    collapsedCols = [t('DevicesSelectionPage.Properties.variableNames'), t('DevicesSelectionPage.Properties.factor')]\n\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  sumCalcElementsArray.forEach((sumElement, i) => {\n    collapsedRows = []\n    if (tableView === 'simple') {\n      rows.push([sumElement.name, sumElement.value, sumElement.unit, sumElement.lastValueTick])\n    }\n    else {\n      //push variableIDs into collapsed table\n      sumElement.variableIDs.forEach(el => {\n        //associate variableID with variable name\n        el = {\n          ...el,\n          variableID: device.variables[el.variableID] !== undefined ? device.variables[el.variableID].name : ''\n        }\n        collapsedRows.push([el.variableID, el.factor])\n      })\n      rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n      rows.push([sumElement.name, sumElement.type, sumElement.value, sumElement.unit, sumElement.defaultValue, sumElement.sampleTime, sumElement.lastValueTick])\n    }\n  })\n  return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n    <CollapsibleTable\n      columns={cols}\n      rows={rows}\n      collapsedRows={rowToBeCollapsed}\n      name='SumCalculatorTable'\n    />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(SumCalculatorTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport {CollapsibleTable} from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function ExpressionCalculatorTable({ expressionCalcElementsArray, selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  let rows = []\n  let cols = []\n  let collapsedRows = []\n  let collapsedCols = []\n  let rowToBeCollapsed = []\n\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    //push collapsed cols\n    collapsedCols = [t('DevicesSelectionPage.Properties.parameter'), t('DevicesSelectionPage.Properties.type'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.elementName')]\n\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.expression'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  expressionCalcElementsArray.forEach((expressionCalcElement, i) => {\n    collapsedRows = []\n    if (tableView === 'simple') {\n      rows.push([expressionCalcElement.name, expressionCalcElement.value, expressionCalcElement.unit, expressionCalcElement.lastValueTick])\n    }\n    else {\n      //push expression calculator's parameters into collapsed table\n      for (const [key, obj] of Object.entries(expressionCalcElement.parameters)) {\n        if (obj.hasOwnProperty('elementId')) {\n          expressionCalcElement = {\n            ...expressionCalcElement,\n            parameters: {\n              ...expressionCalcElement.parameters,\n              [key]: {\n                ...expressionCalcElement.parameters[key],\n                elementId: device.variables[obj.elementId] !== undefined ? device.variables[obj.elementId].name : ''\n              }\n            }\n          }\n        }\n        collapsedRows.push([key, obj.type, obj.value, expressionCalcElement.parameters[key].elementId])\n      }\n      rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n      rows.push([expressionCalcElement.name, expressionCalcElement.type, expressionCalcElement.value, expressionCalcElement.unit, expressionCalcElement.defaultValue, expressionCalcElement.expression, expressionCalcElement.sampleTime, expressionCalcElement.lastValueTick])\n    }\n  })\n  return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n    <CollapsibleTable\n      columns={cols}\n      rows={rows}\n      collapsedRows={rowToBeCollapsed}\n      name='ExpressionCalculatorTable'\n    />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(ExpressionCalculatorTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function ValueFromByteArrayCalculatorTable({ valueFromByteArrayCalcElementsArray, selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  let rows = []\n  let cols = []\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.bitNumber'),\n    t('DevicesSelectionPage.Properties.byteNumber'),\n    t('DevicesSelectionPage.Properties.length'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick'),\n    ]\n  }\n  valueFromByteArrayCalcElementsArray.forEach(byteArrayElement => {\n    //associate variableID with variable name\n    byteArrayElement = {\n      ...byteArrayElement,\n      variableIDName: device.variables[byteArrayElement.variableID] !== undefined ? device.variables[byteArrayElement.variableID].name : ''\n    }\n\n    if (tableView === 'simple') {\n      rows.push([byteArrayElement.name, byteArrayElement.value, byteArrayElement.unit, byteArrayElement.lastValueTick])\n    }\n    else {\n      rows.push([byteArrayElement.name, byteArrayElement.type, byteArrayElement.value, byteArrayElement.unit, byteArrayElement.defaultValue, byteArrayElement.bitNumber, byteArrayElement.byteNumber, byteArrayElement.length, byteArrayElement.sampleTime, byteArrayElement.variableIDName, byteArrayElement.lastValueTick])\n    }\n  })\n  return <UniversalTable columns={cols} rows={rows} />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(ValueFromByteArrayCalculatorTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function AverageCalculatorTable({ averageCalcElementsArray, selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  let rows = []\n  let cols = []\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.factor'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.calculationInterval'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick'),\n    ]\n  }\n  averageCalcElementsArray.forEach(calcElement => {\n    //associate variableID with variable name\n    calcElement = {\n      ...calcElement,\n      variableIDName: device.variables[calcElement.variableID] !== undefined ? device.variables[calcElement.variableID].name : ''\n    }\n\n    if (tableView === 'simple') {\n      rows.push([calcElement.name, calcElement.value, calcElement.unit, calcElement.lastValueTick])\n    }\n    else {\n      rows.push([calcElement.name, calcElement.type, calcElement.value, calcElement.unit, calcElement.defaultValue, calcElement.factor, calcElement.sampleTime, calcElement.calculationInterval, calcElement.variableIDName, calcElement.lastValueTick])\n    }\n  })\n  return (\n    <UniversalTable columns={cols} rows={rows} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(AverageCalculatorTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function FactorCalculatorTable({ factorCalcElementsArray, selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  let rows = []\n  let cols = []\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.factor'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick'),\n    ]\n  }\n  factorCalcElementsArray.forEach(calcElement => {\n    //associate variableID with variable name\n    calcElement = {\n      ...calcElement,\n      variableIDName: device.variables[calcElement.variableID] !== undefined ? device.variables[calcElement.variableID].name : ''\n    }\n\n    if (tableView === 'simple') {\n      rows.push([calcElement.name, calcElement.value, calcElement.unit, calcElement.lastValueTick])\n    }\n    else {\n      rows.push([calcElement.name, calcElement.type, calcElement.value, calcElement.unit, calcElement.defaultValue, calcElement.factor, calcElement.sampleTime, calcElement.variableIDName, calcElement.lastValueTick])\n    }\n  })\n  return (\n    <UniversalTable columns={cols} rows={rows} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(FactorCalculatorTable)","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport IncreaseCalculatorTable from './IncreaseCalculatorTable.component';\nimport SumCalculatorTable from './SumCalculatorTable.component';\nimport ExpressionCalculatorTable from './ExpressionCalculatorTable.component';\nimport ValueFromByteArrayCalculatorTable from './ValueFromByteArrayCalculatorTable.component';\nimport AverageCalculatorTable from './AverageCalculatorTable.component';\nimport FactorCalculatorTable from './FactorCalculatorTable.component';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction EdgeComputingTabContent({ calcElementsObject }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const calcElements = Object.values(calcElementsObject).map(calcElement => {\n    return {\n      ...calcElement,\n      value: parseFloat(calcElement.value).toFixed(3),\n      lastValueTick: calcElement.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(calcElement.lastValueTick) * 1000))\n    }\n  })\n\n  const increaseCalculator = calcElements.filter(calcElement => calcElement.type === 'IncreaseCalculator')\n  const sumCalculator = calcElements.filter(calcElement => calcElement.type === 'SumCalculator')\n  const expressionCalculator = calcElements.filter(calcElement => calcElement.type === 'ExpressionCalculator')\n  const valueFromByteArrayCalculator = calcElements.filter(calcElement => calcElement.type === 'ValueFromByteArrayCalculator')\n  const factorCalculator = calcElements.filter(calcElement => calcElement.type === 'FactorCalculator')\n  const averageCalculator = calcElements.filter(calcElement => calcElement.type === 'AverageCalculator')\n\n  return (\n    <React.Fragment>\n      {increaseCalculator.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.IncreaseCalculator')}</Typography>\n          <IncreaseCalculatorTable increaseCalcElementsArray={increaseCalculator} />\n        </React.Fragment>\n        : null}\n      {sumCalculator.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.SumCalculator')}</Typography>\n          <SumCalculatorTable sumCalcElementsArray={sumCalculator} />\n        </React.Fragment>\n        : null}\n      {expressionCalculator.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.ExpressionCalculator')}</Typography>\n          <ExpressionCalculatorTable expressionCalcElementsArray={expressionCalculator} />\n        </React.Fragment>\n        : null\n      }\n      {averageCalculator.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.AverageCalculator')}</Typography>\n          <AverageCalculatorTable averageCalcElementsArray={averageCalculator} />\n        </React.Fragment>\n        : null\n      }\n      {factorCalculator.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.FactorCalculator')}</Typography>\n          <FactorCalculatorTable factorCalcElementsArray={factorCalculator} />\n        </React.Fragment>\n        : null\n      }\n      {valueFromByteArrayCalculator.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.ValueFromByteArrayCalculator')}</Typography>\n          <ValueFromByteArrayCalculatorTable valueFromByteArrayCalcElementsArray={valueFromByteArrayCalculator} />\n        </React.Fragment>\n        : null\n      }\n    </React.Fragment>\n  )\n}\n\nexport default connect()(EdgeComputingTabContent)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport {CollapsibleTable} from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function HighLimitAlertTable({ highLimitAlertArray, tableView }) {\n  const { t } = useTranslation();\n\n  let rows = []\n  let cols = []\n  let collapsedRows = []\n  let collapsedCols = []\n  let rowToBeCollapsed = []\n\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    //push collapsed cols\n    collapsedCols = [t('DevicesSelectionPage.Properties.textPL'), t('DevicesSelectionPage.Properties.textEN')]\n\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.highLimit'),\n    t('DevicesSelectionPage.Properties.hysteresis'),\n    t('DevicesSelectionPage.Properties.severity'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.timeOffDelay'),\n    t('DevicesSelectionPage.Properties.timeOnDelay'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  highLimitAlertArray.forEach((highLimitAlertElement, i) => {\n    collapsedRows = []\n    if (tableView === 'simple') {\n      rows.push([highLimitAlertElement.name, highLimitAlertElement.value, highLimitAlertElement.unit, highLimitAlertElement.lastValueTick])\n    }\n    else {\n      //push Texts property into collapsed table\n      collapsedRows.push([highLimitAlertElement.texts.pl, highLimitAlertElement.texts.en])\n\n      rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n      rows.push([highLimitAlertElement.name, \n        highLimitAlertElement.type, \n        highLimitAlertElement.value, \n        highLimitAlertElement.unit, \n        highLimitAlertElement.defaultValue, \n        highLimitAlertElement.highLimit, \n        highLimitAlertElement.hysteresis, \n        highLimitAlertElement.severity,\n        highLimitAlertElement.sampleTime,\n        highLimitAlertElement.timeOffDelay,\n        highLimitAlertElement.timeOnDelay,\n        highLimitAlertElement.variableName,\n        highLimitAlertElement.lastValueTick])\n    }\n  })\n  return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n    <CollapsibleTable\n      columns={cols}\n      rows={rows}\n      collapsedRows={rowToBeCollapsed}\n      name='HighLimitAlertTable'\n    />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(HighLimitAlertTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport {CollapsibleTable} from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function LowLimitAlertTable({ lowLimitAlertArray, tableView, allDevices, selectedDevice }) {\n  const { t } = useTranslation();\n\n  let rows = []\n  let cols = []\n  let collapsedRows = []\n  let collapsedCols = []\n  let rowToBeCollapsed = []\n\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    //push collapsed cols\n    collapsedCols = [t('DevicesSelectionPage.Properties.textPL'), t('DevicesSelectionPage.Properties.textEN')]\n\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.lowLimit'),\n    t('DevicesSelectionPage.Properties.hysteresis'),\n    t('DevicesSelectionPage.Properties.severity'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.timeOffDelay'),\n    t('DevicesSelectionPage.Properties.timeOnDelay'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  lowLimitAlertArray.forEach((lowLimitAlertElement, i) => {\n    collapsedRows = []\n    if (tableView === 'simple') {\n      rows.push([lowLimitAlertElement.name, lowLimitAlertElement.value, lowLimitAlertElement.unit, lowLimitAlertElement.lastValueTick])\n    }\n    else {\n      //push Texts property contents into collapsed table\n      collapsedRows.push([lowLimitAlertElement.texts.pl, lowLimitAlertElement.texts.en])\n\n      rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n      rows.push([lowLimitAlertElement.name, \n        lowLimitAlertElement.type, \n        lowLimitAlertElement.value, \n        lowLimitAlertElement.unit, \n        lowLimitAlertElement.defaultValue, \n        lowLimitAlertElement.lowLimit, \n        lowLimitAlertElement.hysteresis, \n        lowLimitAlertElement.severity,\n        lowLimitAlertElement.sampleTime,\n        lowLimitAlertElement.timeOffDelay,\n        lowLimitAlertElement.timeOnDelay,\n        lowLimitAlertElement.variableName,\n        lowLimitAlertElement.lastValueTick])\n    }\n  })\n  return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n    <CollapsibleTable\n      columns={cols}\n      rows={rows}\n      collapsedRows={rowToBeCollapsed}\n      name='LowLimitAlertTable'\n    />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(LowLimitAlertTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport {CollapsibleTable} from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function BandwidthLimitAlertTable({ bandwidthLimitAlertArray, tableView }) {\n  const { t } = useTranslation();\n\n  let rows = []\n  let cols = []\n  let collapsedRows = []\n  let collapsedCols = []\n  let rowToBeCollapsed = []\n\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    //push collapsed cols\n    collapsedCols = [t('DevicesSelectionPage.Properties.limitType'), t('DevicesSelectionPage.Properties.textPL'), t('DevicesSelectionPage.Properties.textEN')]\n\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.highLimit'),\n    t('DevicesSelectionPage.Properties.lowLimit'),\n    t('DevicesSelectionPage.Properties.hysteresis'),\n    t('DevicesSelectionPage.Properties.severity'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.timeOffDelay'),\n    t('DevicesSelectionPage.Properties.timeOnDelay'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  bandwidthLimitAlertArray.forEach((bandwidthLimitAlertElement, i) => {\n    collapsedRows = []\n    if (tableView === 'simple') {\n      rows.push([bandwidthLimitAlertElement.name, bandwidthLimitAlertElement.value, bandwidthLimitAlertElement.unit, bandwidthLimitAlertElement.lastValueTick])\n    }\n    else {\n      //push highLimit and lowLimimt properties into collapsed table\n      collapsedRows.push([t('DevicesSelectionPage.Properties.highLimit'), bandwidthLimitAlertElement.texts.highLimit.pl, bandwidthLimitAlertElement.texts.highLimit.en])\n      collapsedRows.push([t('DevicesSelectionPage.Properties.lowLimit'), bandwidthLimitAlertElement.texts.lowLimit.pl, bandwidthLimitAlertElement.texts.lowLimit.en])\n\n      rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n      rows.push([bandwidthLimitAlertElement.name, \n        bandwidthLimitAlertElement.type, \n        bandwidthLimitAlertElement.value, \n        bandwidthLimitAlertElement.unit, \n        bandwidthLimitAlertElement.defaultValue, \n        bandwidthLimitAlertElement.highLimit, \n        bandwidthLimitAlertElement.lowLimit,\n        bandwidthLimitAlertElement.hysteresis, \n        bandwidthLimitAlertElement.severity,\n        bandwidthLimitAlertElement.sampleTime,\n        bandwidthLimitAlertElement.timeOffDelay,\n        bandwidthLimitAlertElement.timeOnDelay,\n        bandwidthLimitAlertElement.variableName,\n        bandwidthLimitAlertElement.lastValueTick])\n    }\n  })\n  return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n    <CollapsibleTable\n      columns={cols}\n      rows={rows}\n      collapsedRows={rowToBeCollapsed}\n      name='BandwidthLimitAlertTable'\n    />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(BandwidthLimitAlertTable)","import React from 'react';\nimport { UniversalTable } from '../UniversalTable.component';\nimport {CollapsibleTable} from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n\nexport function ExactValuesAlertTable({ exactValuesAlertArray, tableView }) {\n  const { t } = useTranslation();\n\n  let rows = []\n  let cols = []\n  let collapsedRows = []\n  let collapsedCols = []\n  let rowToBeCollapsed = []\n\n  if (tableView === 'simple') {\n    cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  else {\n    //push collapsed cols\n    collapsedCols = [t('DevicesSelectionPage.Properties.alertValue'), t('DevicesSelectionPage.Properties.textPL'), t('DevicesSelectionPage.Properties.textEN')]\n\n    cols = [t('DevicesSelectionPage.Properties.name'),\n    t('DevicesSelectionPage.Properties.type'),\n    t('DevicesSelectionPage.Properties.value'),\n    t('DevicesSelectionPage.Properties.unit'),\n    t('DevicesSelectionPage.Properties.defaultValue'),\n    t('DevicesSelectionPage.Properties.severity'),\n    t('DevicesSelectionPage.Properties.sampleTime'),\n    t('DevicesSelectionPage.Properties.timeOffDelay'),\n    t('DevicesSelectionPage.Properties.timeOnDelay'),\n    t('DevicesSelectionPage.Properties.alertValues'),\n    t('DevicesSelectionPage.Properties.variableName'),\n    t('DevicesSelectionPage.Properties.lastValueTick')]\n  }\n  exactValuesAlertArray.forEach((exactValuesAlertElement, i) => {\n    //alertValues array toString\n    exactValuesAlertElement = {\n      ...exactValuesAlertElement,\n      alertValues: `[${exactValuesAlertElement.alertValues}]`\n    }\n    collapsedRows = []\n    if (tableView === 'simple') {\n      rows.push([exactValuesAlertElement.name, exactValuesAlertElement.value, exactValuesAlertElement.unit, exactValuesAlertElement.lastValueTick])\n    }\n    else {\n      //push alert values into collapsed table\n      for (const [key, obj] of Object.entries(exactValuesAlertElement.texts)) {\n        collapsedRows.push([key, obj.pl, obj.en])\n      }\n\n      rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n      rows.push([exactValuesAlertElement.name,\n      exactValuesAlertElement.type,\n      exactValuesAlertElement.value,\n      exactValuesAlertElement.unit,\n      exactValuesAlertElement.defaultValue,\n      exactValuesAlertElement.severity,\n      exactValuesAlertElement.sampleTime,\n      exactValuesAlertElement.timeOffDelay,\n      exactValuesAlertElement.timeOnDelay,\n      exactValuesAlertElement.alertValues,\n      exactValuesAlertElement.variableName,\n      exactValuesAlertElement.lastValueTick])\n    }\n  })\n  return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n    <CollapsibleTable\n      columns={cols}\n      rows={rows}\n      collapsedRows={rowToBeCollapsed}\n      name='ExactValuesAlertTable'\n    />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(ExactValuesAlertTable)","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport HighLimitAlertTable from './HighLimitAlertTable.component';\nimport LowLimitAlertTable from './LowLimitAlertTable.component';\nimport BandwidthLimitAlertTable from './BandwidthLimitAlertTable.component';\nimport ExactValuesAlertTable from './ExactValuesAlertTable.component';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  alertActive: {\n    color: 'red'\n  }\n}));\n\nfunction EdgeComputingTabContent({ alertElementsObject, selectedDevice, allDevices }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  const alertValueConverter = (alertValue) => {\n    switch (typeof alertValue) {\n      case 'number':\n        return parseFloat(alertValue).toFixed(3)\n      case 'undefined':\n        return ''\n      default:\n        return `${alertValue}`\n    }\n  }\n\n  const alertElements = Object.values(alertElementsObject).map(alert => {\n    return {\n      ...alert,\n      variableName: device.variables[alert.variableID] !== undefined ? device.variables[alert.variableID].name : '',\n      value: alert.value === null ?\n        t('DevicesSelectionPage.Properties.inactive')\n        :\n        <span className={classes.alertActive}>{t('DevicesSelectionPage.Properties.active')} ({alertValueConverter(device.variables[alert.variableID]!==undefined? device.variables[alert.variableID].value : '')})</span>,\n      defaultValue: alert.defaultValue === null ? t('DevicesSelectionPage.Properties.inactive') : t('DevicesSelectionPage.Properties.active'),\n      lastValueTick: alert.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(alert.lastValueTick) * 1000))\n    }\n  })\n  const highLimitAlerts = alertElements.filter(alert => alert.type === 'HighLimitAlert')\n  const lowLimitAlerts = alertElements.filter(alert => alert.type === 'LowLimitAlert')\n  const bandWidthLimitAlerts = alertElements.filter(alert => alert.type === 'BandwidthLimitAlert')\n  const exactValuesAlerts = alertElements.filter(alert => alert.type === 'ExactValuesAlert')\n\n  return (\n    <React.Fragment>\n      {highLimitAlerts.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.HighLimitAlert')}</Typography>\n          <HighLimitAlertTable highLimitAlertArray={highLimitAlerts} />\n        </React.Fragment>\n        : null}\n      {lowLimitAlerts.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.LowLimitAlert')}</Typography>\n          <LowLimitAlertTable lowLimitAlertArray={lowLimitAlerts} />\n        </React.Fragment>\n        : null}\n      {bandWidthLimitAlerts.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.BandwidthLimitAlert')}</Typography>\n          <BandwidthLimitAlertTable bandwidthLimitAlertArray={bandWidthLimitAlerts} />\n        </React.Fragment>\n        : null}\n      {exactValuesAlerts.length > 0 ?\n        <React.Fragment>\n          <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.ExactValuesAlert')}</Typography>\n          <ExactValuesAlertTable exactValuesAlertArray={exactValuesAlerts} />\n        </React.Fragment>\n        : null}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(EdgeComputingTabContent)","//activate/deactivate device\nconst API_URL = \"/api/activate/\";\n\nclass ActivateService {\n  async activateDevice(activate, device) {\n    const response = await fetch(`${API_URL}/${device}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n      body: JSON.stringify({ isActive: activate })\n    })\n    if(response.status === 200) {\n      const deviceData = await response.json()\n      return {\n        status: response.status,\n        data: deviceData\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n}\n\nexport default new ActivateService();","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport ActivateService from '../../services/activate.service';\nimport { refreshDeviceParams } from '../../actions/DevicesSelectionPage.action';\n\nconst useStyles = makeStyles((theme) => ({\n  onboarded: {\n    color: 'green'\n  },\n  offboarded: {\n    color: 'red'\n  },\n  active: {\n    color: '#2fcc2f'\n  }\n}));\n\nfunction StandardBottomToolbar({ selectedDevice, allDevices, refreshDeviceParams }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const activateDevice = (activate, device) => {\n    ActivateService.activateDevice(activate, device).then(res => {\n      if (res.status === 200) {\n        refreshDeviceParams(res.data)\n      }\n    })\n  }\n\n  const isActive = () => {\n    if (selectedDevice.selectedDeviceID !== '' && allDevices[selectedDevice.selectedDeviceID] !== undefined) {\n      return allDevices[selectedDevice.selectedDeviceID].isActive\n    }\n    else {\n      return null\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"h5\">{t('DevicesSelectionPage.Status')}: {isActive() ? <span className={classes.active}>{t('DevicesSelectionPage.StatusConnected')}</span> : <span className={classes.offboarded}>{t('DevicesSelectionPage.StatusDisconnected')}</span>}</Typography>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Button disabled={isActive()} fullWidth variant=\"contained\" color=\"primary\" onClick={() => activateDevice(true, selectedDevice.selectedDeviceID)}>{t('DevicesSelectionPage.Connect')}</Button>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Button disabled={!isActive()} fullWidth variant=\"contained\" color=\"secondary\" onClick={() => activateDevice(false, selectedDevice.selectedDeviceID)}>{t('DevicesSelectionPage.Disconnect')}</Button>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices\n  }\n}\n\nconst mapDispatchToProps = {\n  refreshDeviceParams\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StandardBottomToolbar)","export const mbVariableConverter = (variable) => {\n  switch(variable.type) {\n    case 'MBByteArray':\n      return `[${variable.value}]`\n    case 'MBSwappedFloat':\n      return parseFloat(variable.value).toFixed(3)\n    default:\n      //integers\n      return variable.value\n  }\n}","import React from 'react';\nimport UniversalTabs from '../UniversalTabs.component';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeviceDetailsTitle from './DeviceDetailsTitle.component';\nimport Typography from '@material-ui/core/Typography';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\nimport { sortRowsBy } from '../../utilities/sortRows.utility';\nimport DeviceConnectionVariableTable from './DeviceConnectionVariableTable.component';\nimport EdgeComputingTabContent from './EdgeComputingTabContent.component';\nimport AlertsTabContent from './AlertsTabContent.component';\nimport StandardBottomToolbar from './StandardBottomToolbar.component';\nimport { mbVariableConverter } from '../../utilities/mbVariableConverter.utility';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  controlButtons: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction MBDeviceDisplay({ selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  //table columns ordering functions //////////////////////////////////////\n  //info tab is 1 table only so this renders whole INFO TAB\n  const renderInfoTabContent = () => {\n    if (tableView === 'simple') {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.isConnected`), `${device.isConnected}`]\n        ]\n      }\n    }\n    else {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.type`), `${device.type}`],\n          [t(`DevicesSelectionPage.Properties.ipAddress`), `${device.ipAddress}`],\n          [t(`DevicesSelectionPage.Properties.portNumber`), `${device.portNumber}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.isConnected`), `${device.isConnected}`],\n          [t(`DevicesSelectionPage.Properties.timeout`), `${device.timeout}`],\n        ]\n      }\n    }\n  }\n  //modbus variables table inside VARIABLES TAB\n  const renderModbusVariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.offset'),\n      t('DevicesSelectionPage.Properties.length'),\n      t('DevicesSelectionPage.Properties.read/write'),\n      t('DevicesSelectionPage.Properties.group'),\n      t('DevicesSelectionPage.Properties.function'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.unitID'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //modbus variables' specific properties, needed to sort out here\n      if (variable.read !== undefined && variable.write !== undefined && variable.readAsSingle !== undefined && variable.writeAsSingle !== undefined) {\n        variable = {\n          ...variable,\n          value: mbVariableConverter(variable),\n          readWrite: variable.read ? 'Read' : 'Write',\n          readWriteAsSingle: variable.read ? 'readAsSingle' : 'writeAsSingle',\n          readWriteFCode: variable.read ? 'readFCode' : 'writeFCode'\n        }\n      }\n\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.offset, variable.length, variable.readWrite, `${!variable[variable.readWriteAsSingle]}`, variable[variable.readWriteFCode], variable.sampleTime, variable.unitID, variable.lastValueTick])\n      }\n    })\n    const sortedRows = sortRowsBy(rows, cols, t('DevicesSelectionPage.Properties.name'), 'MB', t('DevicesSelectionPage.Properties.unitID'), t('DevicesSelectionPage.Properties.function'), t('DevicesSelectionPage.Properties.offset'))\n\n    return <UniversalTable columns={cols} rows={sortedRows} className={classes.bottomMargin} />\n  }\n\n  /////////////////////////////////////////////////////////////////////\n\n  //rendering whole VARIABLES TAB\n  const renderVariablesTabContent = () => {\n    //group modbus variables in one table and DeviceConnectionVariable in other table \n    //toString booleans, lastValueTick to date, arrays to string, in order to avoid further processing duplicates in separate functions\n    const variables = Object.values(device.variables).map(variable => {\n      return {\n        ...variable,\n        defaultValue: variable.type === 'MBByteArray' ? `[${variable.defaultValue}]` : `${variable.defaultValue}`,\n        lastValueTick: variable.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(variable.lastValueTick) * 1000)),\n      }\n    })\n\n    const modbusVariables = variables.filter(variable => variable.type !== 'DeviceConnectionVariable')\n    const deviceConnectionVariables = variables.filter(variable => variable.type === 'DeviceConnectionVariable')\n\n    return (\n      <React.Fragment>\n        {deviceConnectionVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.DeviceConnectionVariable')}</Typography>\n            <DeviceConnectionVariableTable deviceConnectionVariablesArray={deviceConnectionVariables} />\n          </React.Fragment>\n          : null}\n        {modbusVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.MBVariablesGroup')}</Typography>\n            {renderModbusVariablesTable(modbusVariables)}\n          </React.Fragment>\n          : null}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <DeviceDetailsTitle />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.controlButtons}>\n          <StandardBottomToolbar />\n        </Grid>\n        <Grid item xs={12}>\n          <UniversalTabs\n            name=\"MBDevice\"\n            tabs={[\n              {\n                label: t('DevicesSelectionPage.Tabs.info'),\n                content: <UniversalTable {...renderInfoTabContent()} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.variables'),\n                content: renderVariablesTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.calcElements'),\n                content: <EdgeComputingTabContent calcElementsObject={device.calcElements} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.alerts'),\n                content: <AlertsTabContent alertElementsObject={device.alerts} />\n              }\n            ]}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(MBDeviceDisplay)","import React from 'react';\nimport UniversalTabs from '../UniversalTabs.component';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeviceDetailsTitle from './DeviceDetailsTitle.component';\nimport Typography from '@material-ui/core/Typography';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\nimport { sortRowsBy } from '../../utilities/sortRows.utility';\nimport DeviceConnectionVariableTable from './DeviceConnectionVariableTable.component';\nimport EdgeComputingTabContent from './EdgeComputingTabContent.component';\nimport AlertsTabContent from './AlertsTabContent.component';\nimport StandardBottomToolbar from './StandardBottomToolbar.component';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  controlButtons: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction S7DeviceDisplay({ selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  //table columns ordering functions //////////////////////////////////////\n  //info tab is 1 table only so this renders whole INFO TAB\n  const renderInfoTabContent = () => {\n    if (tableView === 'simple') {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.isConnected`), `${device.isConnected}`]\n        ]\n      }\n    }\n    else {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.type`), `${device.type}`],\n          [t(`DevicesSelectionPage.Properties.ipAddress`), `${device.ipAddress}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.isConnected`), `${device.isConnected}`],\n          [t(`DevicesSelectionPage.Properties.rack`), `${device.rack}`],\n          [t(`DevicesSelectionPage.Properties.slot`), `${device.slot}`],\n          [t(`DevicesSelectionPage.Properties.timeout`), `${device.timeout}`],\n        ]\n      }\n    }\n  }\n  //S7 variables table inside VARIABLES TAB\n  const renderS7VariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.dbNumber'),\n      t('DevicesSelectionPage.Properties.offset'),\n      t('DevicesSelectionPage.Properties.length'),\n      t('DevicesSelectionPage.Properties.memoryType'),\n      t('DevicesSelectionPage.Properties.read/write'),\n      t('DevicesSelectionPage.Properties.group'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //S7 variables' specific properties, needed to sort out here\n      if (variable.read !== undefined && variable.write !== undefined && variable.readAsSingle !== undefined && variable.writeAsSingle !== undefined) {\n        variable = {\n          ...variable,\n          value: S7VariablesConverter(variable),\n          readWrite: variable.read ? 'Read' : 'Write',\n          readWriteAsSingle: variable.read ? 'readAsSingle' : 'writeAsSingle'\n        }\n      }\n\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.dbNumber, variable.offset, variable.length, variable.memoryType, variable.readWrite, `${!variable[variable.readWriteAsSingle]}`, variable.sampleTime, variable.lastValueTick])\n      }\n    })\n    const sortedRows = sortRowsBy(rows, cols, t('DevicesSelectionPage.Properties.name'), 'S7', t('DevicesSelectionPage.Properties.unitID'), t('DevicesSelectionPage.Properties.function'), t('DevicesSelectionPage.Properties.offset'))\n\n    return <UniversalTable columns={cols} rows={sortedRows} />\n  }\n\n  /////////////////////////////////////////////////////////////////////\n\n  const S7VariablesConverter = (variable) => {\n    switch(variable.type) {\n      case 'S7ByteArray':\n        return `[${variable.value}]`\n      case 'S7DTL':\n        return formatDateTime(new Date(parseFloat(variable.value)))\n      case 'S7Real':\n        return parseFloat(variable.value).toFixed(3)\n      default:\n        //Integers\n        return variable.value\n    }\n  }\n\n  //rendering whole VARIABLES TAB\n  const renderVariablesTabContent = () => {\n    //group S7 variables in one table and DeviceConnectionVariable in other table \n    //toString booleans, lastValueTick to date, arrays to string, in order to avoid further processing duplicates in separate functions\n    const variables = Object.values(device.variables).map(variable => {\n      return {\n        ...variable,\n        defaultValue: variable.type === 'S7ByteArray' ? `[${variable.defaultValue}]` : `${variable.defaultValue}`,\n        lastValueTick: variable.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(variable.lastValueTick) * 1000))\n      }\n    })\n\n    const s7Variables = variables.filter(variable => variable.type !== 'DeviceConnectionVariable')\n    const deviceConnectionVariables = variables.filter(variable => variable.type === 'DeviceConnectionVariable')\n\n    return (\n      <React.Fragment>\n        {deviceConnectionVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.DeviceConnectionVariable')}</Typography>\n            <DeviceConnectionVariableTable deviceConnectionVariablesArray={deviceConnectionVariables} />\n          </React.Fragment>\n          : null}\n        {s7Variables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.S7VariablesGroup')}</Typography>\n            {renderS7VariablesTable(s7Variables)}\n          </React.Fragment>\n          : null}\n      </React.Fragment>\n    )\n  }\n\n  //Main render function\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <DeviceDetailsTitle />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.controlButtons}>\n          <StandardBottomToolbar />\n        </Grid>\n        <Grid item xs={12}>\n          <UniversalTabs\n            name=\"S7Device\"\n            tabs={[\n              {\n                label: t('DevicesSelectionPage.Tabs.info'),\n                content: <UniversalTable {...renderInfoTabContent()} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.variables'),\n                content: renderVariablesTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.calcElements'),\n                content: <EdgeComputingTabContent calcElementsObject={device.calcElements} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.alerts'),\n                content: <AlertsTabContent alertElementsObject={device.alerts} />\n              }\n            ]} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(S7DeviceDisplay)","import React from 'react';\nimport UniversalTabs from '../UniversalTabs.component';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeviceDetailsTitle from './DeviceDetailsTitle.component';\nimport Typography from '@material-ui/core/Typography';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\nimport EdgeComputingTabContent from './EdgeComputingTabContent.component';\nimport AlertsTabContent from './AlertsTabContent.component';\nimport StandardBottomToolbar from './StandardBottomToolbar.component';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  controlButtons: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction InternalDeviceDisplay({ selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  //table columns ordering functions //////////////////////////////////////\n  //info tab is 1 table only so this renders whole INFO TAB\n  const renderInfoTabContent = () => {\n    if (tableView === 'simple') {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`]\n        ]\n      }\n    }\n    else {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.type`), `${device.type}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`]\n        ]\n      }\n    }\n  }\n  //AssociatedVariable variables table inside VARIABLES TAB\n  const renderAssociatedVariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.associatedDeviceIDName'),\n      t('DevicesSelectionPage.Properties.associatedElementIDName'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //associate associatedDeviceID with corresponding device name and associatedElementID with its property name\n      variable = {\n        ...variable,\n        associatedDeviceIDName: allDevices[variable.associatedDeviceID] !== undefined ? allDevices[variable.associatedDeviceID].name : '',\n        associatedElementIDName: allDevices[variable.associatedDeviceID] !== undefined && allDevices[variable.associatedDeviceID].variables[variable.associatedElementID] !== undefined ? allDevices[variable.associatedDeviceID].variables[variable.associatedElementID].name : ''\n      }\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.sampleTime, variable.associatedDeviceIDName, variable.associatedElementIDName, variable.lastValueTick])\n      }\n    })\n\n    return <UniversalTable columns={cols} rows={rows} className={classes.bottomMargin} />\n  }\n\n  const renderHardwareUsageVariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //override toFixed(3) to toFixed(2) for HW usage\n      variable = {\n        ...variable,\n        value: parseFloat(variable.value).toFixed(2),\n      }\n\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.sampleTime, variable.lastValueTick])\n      }\n    })\n\n    return <UniversalTable columns={cols} rows={rows} className={classes.bottomMargin} />\n  }\n  /////////////////////////////////////////////////////////////////////\n\n  //rendering whole VARIABLES TAB\n  const renderVariablesTabContent = () => {\n    //group AssociatedVariable variables in one table and rest in other table \n    //lastValueTick in order to avoid further processing duplicates in separate functions\n    const variables = Object.values(device.variables).map(variable => {\n      return {\n        ...variable,\n        value: !isNaN(variable.value) ? parseFloat(variable.value).toFixed(3) : `${variable.value}`,\n        lastValueTick: variable.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(variable.lastValueTick) * 1000))\n      }\n    })\n\n    const associatedVariables = variables.filter(variable => variable.type === 'AssociatedVariable')\n    const hardwareUsageVariables = variables.filter(variable => variable.type !== 'AssociatedVariable')\n\n    return (\n      <React.Fragment>\n        {associatedVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.AssociatedVariable')}</Typography>\n            {renderAssociatedVariablesTable(associatedVariables)}\n          </React.Fragment>\n          : null}\n        {hardwareUsageVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.hardwareUsage')}</Typography>\n            {renderHardwareUsageVariablesTable(hardwareUsageVariables)}\n          </React.Fragment>\n          : null}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <DeviceDetailsTitle />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.controlButtons}>\n          <StandardBottomToolbar />\n        </Grid>\n        <Grid item xs={12}>\n          <UniversalTabs\n            name=\"InternalDevice\"\n            tabs={[\n              {\n                label: t('DevicesSelectionPage.Tabs.info'),\n                content: <UniversalTable {...renderInfoTabContent()} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.variables'),\n                content: renderVariablesTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.calcElements'),\n                content: <EdgeComputingTabContent calcElementsObject={device.calcElements} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.alerts'),\n                content: <AlertsTabContent alertElementsObject={device.alerts} />\n              }\n            ]} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(InternalDeviceDisplay)","import React from 'react';\nimport UniversalTabs from '../UniversalTabs.component';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeviceDetailsTitle from './DeviceDetailsTitle.component';\nimport Typography from '@material-ui/core/Typography';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\nimport { sortRowsBy } from '../../utilities/sortRows.utility';\nimport DeviceConnectionVariableTable from './DeviceConnectionVariableTable.component';\nimport EdgeComputingTabContent from './EdgeComputingTabContent.component';\nimport AlertsTabContent from './AlertsTabContent.component';\nimport StandardBottomToolbar from './StandardBottomToolbar.component';\nimport { mbVariableConverter } from '../../utilities/mbVariableConverter.utility';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  controlButtons: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction MBGatewayDeviceDisplay({ selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  //table columns ordering functions //////////////////////////////////////\n  //info tab is 1 table only so this renders whole INFO TAB\n  const renderInfoTabContent = () => {\n    if (tableView === 'simple') {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.isConnected`), `${device.isConnected}`]\n        ]\n      }\n    }\n    else {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.type`), `${device.type}`],\n          [t(`DevicesSelectionPage.Properties.ipAddress`), `${device.ipAddress}`],\n          [t(`DevicesSelectionPage.Properties.portNumber`), `${device.portNumber}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.isConnected`), `${device.isConnected}`],\n          [t(`DevicesSelectionPage.Properties.timeout`), `${device.timeout}`],\n        ]\n      }\n    }\n  }\n  //modbus variables table inside VARIABLES TAB\n  const renderModbusVariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.offset'),\n      t('DevicesSelectionPage.Properties.length'),\n      t('DevicesSelectionPage.Properties.read/write'),\n      t('DevicesSelectionPage.Properties.group'),\n      t('DevicesSelectionPage.Properties.function'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.unitID'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //modbus variables' specific properties, needed to sort out here\n      if (variable.read !== undefined && variable.write !== undefined && variable.readAsSingle !== undefined && variable.writeAsSingle !== undefined) {\n        variable = {\n          ...variable,\n          value: mbVariableConverter(variable),\n          readWrite: variable.read ? 'Read' : 'Write',\n          readWriteAsSingle: variable.read ? 'readAsSingle' : 'writeAsSingle',\n          readWriteFCode: variable.read ? 'readFCode' : 'writeFCode'\n        }\n      }\n\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.offset, variable.length, variable.readWrite, `${!variable[variable.readWriteAsSingle]}`, variable[variable.readWriteFCode], variable.sampleTime, variable.unitID, variable.lastValueTick])\n      }\n    })\n    const sortedRows = sortRowsBy(rows, cols, t('DevicesSelectionPage.Properties.name'), 'MB', t('DevicesSelectionPage.Properties.unitID'), t('DevicesSelectionPage.Properties.function'), t('DevicesSelectionPage.Properties.offset'))\n\n    return <UniversalTable columns={cols} rows={sortedRows} className={classes.bottomMargin} />\n  }\n\n  /////////////////////////////////////////////////////////////////////\n\n  //rendering whole VARIABLES TAB\n  const renderVariablesTabContent = () => {\n    //group modbus variables in one table and DeviceConnectionVariable in other table \n    //toString booleans, lastValueTick to date, arrays to string, in order to avoid further processing duplicates in separate functions\n    const variables = Object.values(device.variables).map(variable => {\n      return {\n        ...variable,\n        defaultValue: variable.type === 'MBByteArray' ? `[${variable.defaultValue}]` : `${variable.defaultValue}`,\n        lastValueTick: variable.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(variable.lastValueTick) * 1000)),\n      }\n    })\n\n    const modbusVariables = variables.filter(variable => variable.type !== 'DeviceConnectionVariable')\n    const deviceConnectionVariables = variables.filter(variable => variable.type === 'DeviceConnectionVariable')\n\n    return (\n      <React.Fragment>\n        {deviceConnectionVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.DeviceConnectionVariable')}</Typography>\n            <DeviceConnectionVariableTable deviceConnectionVariablesArray={deviceConnectionVariables} />\n          </React.Fragment>\n          : null}\n        {modbusVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.MBVariablesGroup')}</Typography>\n            {renderModbusVariablesTable(modbusVariables)}\n          </React.Fragment>\n          : null}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <DeviceDetailsTitle />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.controlButtons}>\n          <StandardBottomToolbar />\n        </Grid>\n        <Grid item xs={12}>\n          <UniversalTabs\n            name=\"MBGatewayDevice\"\n            tabs={[\n              {\n                label: t('DevicesSelectionPage.Tabs.info'),\n                content: <UniversalTable {...renderInfoTabContent()} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.variables'),\n                content: renderVariablesTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.calcElements'),\n                content: <EdgeComputingTabContent calcElementsObject={device.calcElements} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.alerts'),\n                content: <AlertsTabContent alertElementsObject={device.alerts} />\n              }\n            ]} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(MBGatewayDeviceDisplay)","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport ActivateService from '../../services/activate.service';\nimport { refreshDeviceParams } from '../../actions/DevicesSelectionPage.action';\n\nconst useStyles = makeStyles((theme) => ({\n  onboarded: {\n    color: 'green'\n  },\n  offboarded: {\n    color: 'red'\n  },\n  active: {\n    color: '#2fcc2f'\n  }\n}));\n\nfunction MSAgentBottomToolbar({ selectedDevice, allDevices, refreshDeviceParams }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const activateDevice = (activate, device) => {\n    ActivateService.activateDevice(activate, device).then(res => {\n      if (res.status === 200) {\n        refreshDeviceParams(res.data)\n      }\n    })\n  }\n\n  const isActive = () => {\n    if (selectedDevice.selectedDeviceID !== '' && allDevices[selectedDevice.selectedDeviceID] !== undefined) {\n      return allDevices[selectedDevice.selectedDeviceID].isActive\n    }\n    else {\n      return null\n    }\n  }\n\n  const isBoarded = () => {\n    return allDevices[selectedDevice.selectedDeviceID].boarded\n  }\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"h5\">\n          {t('DevicesSelectionPage.Status')}: {isActive() ? <span className={classes.active}>{t('DevicesSelectionPage.StatusConnected')}</span> : <span className={classes.offboarded}>{t('DevicesSelectionPage.StatusDisconnected')}</span>} {isBoarded() ? <span className={classes.onboarded}>({t('DevicesSelectionPage.StatusOnboarded')})</span> : <span className={classes.offboarded}>({t('DevicesSelectionPage.StatusOffboarded')})</span>}\n        </Typography>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Button disabled={isActive()} fullWidth variant=\"contained\" color=\"primary\" onClick={() => activateDevice(true, selectedDevice.selectedDeviceID)}>{t('DevicesSelectionPage.Connect')}</Button>\n      </Grid>\n      <Grid item xs={6} sm={3}>\n        <Button disabled={!isActive()} fullWidth variant=\"contained\" color=\"secondary\" onClick={() => activateDevice(false, selectedDevice.selectedDeviceID)}>{t('DevicesSelectionPage.Disconnect')}</Button>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices\n  }\n}\n\nconst mapDispatchToProps = {\n  refreshDeviceParams\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MSAgentBottomToolbar)","import React from 'react';\nimport UniversalTabs from '../UniversalTabs.component';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { CollapsibleTable } from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\nimport DeviceDetailsTitle from './DeviceDetailsTitle.component';\nimport EdgeComputingTabContent from './EdgeComputingTabContent.component';\nimport AlertsTabContent from './AlertsTabContent.component';\nimport MSAgentBottomToolbar from './MSAgentBottomToolbar.component';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  controlButtons: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction MSAgentDeviceDisplay({ selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  //this tab is 1 table only so this renders whole INFO TAB\n  const renderInfoTabContent = () => {\n    if (tableView === 'simple') {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.boarded`), `${device.boarded}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`]\n        ]\n      }\n    }\n    else {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.type`), `${device.type}`],\n          [t(`DevicesSelectionPage.Properties.boarded`), `${device.boarded}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.dataStorageSize`), `${device.dataStorageSize}`],\n          [t(`DevicesSelectionPage.Properties.eventStorageSize`), `${device.eventStorageSize}`],\n          [t(`DevicesSelectionPage.Properties.numberOfDataFilesToSend`), `${device.numberOfDataFilesToSend}`],\n          [t(`DevicesSelectionPage.Properties.numberOfEventFilesToSend`), `${device.numberOfEventFilesToSend}`],\n          [t(`DevicesSelectionPage.Properties.numberOfSendDataRetries`), `${device.numberOfSendDataRetries}`],\n          [t(`DevicesSelectionPage.Properties.numberOfSendEventRetries`), `${device.numberOfSendEventRetries}`],\n          [t(`DevicesSelectionPage.Properties.sendDataFileInterval`), `${device.sendDataFileInterval}`],\n          [t(`DevicesSelectionPage.Properties.sendEventFileInterval`), `${device.sendEventFileInterval}`]\n        ]\n      }\n    }\n  }\n\n  //AssociatedVariable variables table inside VARIABLES TAB\n  const renderAssociatedVariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.associatedDeviceIDName'),\n      t('DevicesSelectionPage.Properties.associatedElementIDName'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //associate associatedDeviceID with corresponding device name and associatedElementID with its property name\n      variable = {\n        ...variable,\n        associatedDeviceIDName: allDevices[variable.associatedDeviceID] !== undefined ? allDevices[variable.associatedDeviceID].name : '',\n        associatedElementIDName: allDevices[variable.associatedDeviceID] !== undefined && allDevices[variable.associatedDeviceID].variables[variable.associatedElementID] !== undefined ? allDevices[variable.associatedDeviceID].variables[variable.associatedElementID].name : ''\n      }\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.sampleTime, variable.associatedDeviceIDName, variable.associatedElementIDName, variable.lastValueTick])\n      }\n    })\n\n    return <UniversalTable columns={cols} rows={rows} className={classes.bottomMargin} />\n  }\n\n  //rendering whole VARIABLES TAB\n  const renderVariablesTabContent = () => {\n    //group AssociatedVariable variables in one table and rest in other table \n    //lastValueTick in order to avoid further processing duplicates in separate functions\n    const variables = Object.values(device.variables).map(variable => {\n      return {\n        ...variable,\n        value: !isNaN(variable.value) ? parseFloat(variable.value).toFixed(3) : `${variable.value}`,\n        lastValueTick: variable.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(variable.lastValueTick) * 1000))\n      }\n    })\n\n    const associatedVariables = variables.filter(variable => variable.type === 'AssociatedVariable')\n\n    return (\n      <React.Fragment>\n        {associatedVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.AssociatedVariable')}</Typography>\n            {renderAssociatedVariablesTable(associatedVariables)}\n          </React.Fragment>\n          : null}\n      </React.Fragment>\n    )\n  }\n\n  //render DATA SENT TAB CONTENT\n  //this tab is 1 table only so this renders whole DATA SENT TAB\n  const renderDataSentTabContent = () => {\n    let rows = []\n    let cols = []\n    let collapsedRows = []\n    let collapsedCols = []\n    let rowToBeCollapsed = []\n\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.deviceName'), t('DevicesSelectionPage.Properties.elementName'), t('DevicesSelectionPage.Properties.sendingInterval')]\n    }\n    else {\n      //push collapsed cols\n      collapsedCols = [t('DevicesSelectionPage.Properties.conversionType'), t('DevicesSelectionPage.Properties.precision')]\n\n      cols = [t('DevicesSelectionPage.Properties.deviceName'),\n      t('DevicesSelectionPage.Properties.elementName'),\n      t('DevicesSelectionPage.Properties.qualityCodeEnabled'),\n      t('DevicesSelectionPage.Properties.sendingInterval'),\n      t('DevicesSelectionPage.Properties.datapointId')\n      ]\n    }\n    Object.values(device.dataToSendConfig).forEach((dataConfig, i) => {\n      collapsedRows = []\n      //associate deviceId with corresponding device name and elementId with its variable's name\n      dataConfig = {\n        ...dataConfig,\n        qualityCodeEnabled: `${dataConfig.qualityCodeEnabled}`,\n        associatedDeviceIDName: allDevices[dataConfig.deviceId] !== undefined ? allDevices[dataConfig.deviceId].name : '',\n        associatedElementIDName: allDevices[dataConfig.deviceId] !== undefined && allDevices[dataConfig.deviceId].variables[dataConfig.elementId] !== undefined ? allDevices[dataConfig.deviceId].variables[dataConfig.elementId].name : ''\n      }\n      if (tableView === 'simple') {\n        rows.push([dataConfig.associatedDeviceIDName, dataConfig.associatedElementIDName, dataConfig.sendingInterval])\n      }\n      else {\n        //push Texts property contents into collapsed table\n        collapsedRows.push([dataConfig.dataConverter.conversionType, dataConfig.dataConverter.precision])\n        rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n\n        rows.push([dataConfig.associatedDeviceIDName, dataConfig.associatedElementIDName, dataConfig.qualityCodeEnabled, dataConfig.sendingInterval, dataConfig.datapointId])\n      }\n    })\n\n    return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n      <CollapsibleTable\n        columns={cols}\n        rows={rows}\n        collapsedRows={rowToBeCollapsed}\n        name='MSAgentDataSent'\n      />\n  }\n\n  //render EVENTS SENT TAB CONTENT\n  //this tab is 1 table only so this renders whole EVENTS SENT TAB\n  const renderEventsSentTabContent = () => {\n    let rows = []\n    let cols = []\n\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.deviceName'), t('DevicesSelectionPage.Properties.elementName'), t('DevicesSelectionPage.Properties.sendingInterval')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.deviceName'),\n      t('DevicesSelectionPage.Properties.elementName'),\n      t('DevicesSelectionPage.Properties.sendingInterval'),\n      t('DevicesSelectionPage.Properties.source'),\n      t('DevicesSelectionPage.Properties.severity'),\n      t('DevicesSelectionPage.Properties.entityId'),\n      t('DevicesSelectionPage.Properties.correlationId'),\n      t('DevicesSelectionPage.Properties.code'),\n      t('DevicesSelectionPage.Properties.acknowledged')\n      ]\n    }\n    Object.values(device.eventsToSendConfig).forEach((eventConfig, i) => {\n      //associate deviceId with corresponding device name and elementId with its variable's name\n      eventConfig = {\n        ...eventConfig,\n        associatedDeviceIDName: allDevices[eventConfig.deviceId] !== undefined ? allDevices[eventConfig.deviceId].name : '',\n        associatedElementIDName: allDevices[eventConfig.deviceId] !== undefined && allDevices[eventConfig.deviceId].alerts[eventConfig.elementId] !== undefined ? allDevices[eventConfig.deviceId].alerts[eventConfig.elementId].name : '',\n        //make sure the following exist, if not set them empty string\n        source: eventConfig.source !== undefined ? eventConfig.source : '',\n        code: eventConfig.code !== undefined ? eventConfig.code : '',\n        acknowledged: eventConfig.acknowledged !== undefined ? `${eventConfig.acknowledged}` : '',\n        correlationId: eventConfig.correlationId !== undefined ? eventConfig.correlationId : ''\n\n      }\n      if (tableView === 'simple') {\n        rows.push([eventConfig.associatedDeviceIDName, eventConfig.associatedElementIDName, eventConfig.sendingInterval])\n      }\n      else {\n        rows.push([eventConfig.associatedDeviceIDName, eventConfig.associatedElementIDName, eventConfig.sendingInterval, eventConfig.source, eventConfig.severity, eventConfig.entityId, eventConfig.correlationId, eventConfig.code, eventConfig.acknowledged])\n      }\n    })\n\n    return <UniversalTable columns={cols} rows={rows} />\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <DeviceDetailsTitle />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.controlButtons}>\n          <MSAgentBottomToolbar />\n        </Grid>\n        <Grid item xs={12}>\n          <UniversalTabs\n            name=\"MSAgentDevice\"\n            tabs={[\n              {\n                label: t('DevicesSelectionPage.Tabs.info'),\n                content: <UniversalTable {...renderInfoTabContent()} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.variables'),\n                content: renderVariablesTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.calcElements'),\n                content: <EdgeComputingTabContent calcElementsObject={device.calcElements} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.alerts'),\n                content: <AlertsTabContent alertElementsObject={device.alerts} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.dataToSendConfig'),\n                content: renderDataSentTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.eventsToSendConfig'),\n                content: renderEventsSentTabContent()\n              }\n            ]} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(MSAgentDeviceDisplay)","import React from 'react';\nimport UniversalTabs from '../UniversalTabs.component';\nimport { UniversalTable } from '../UniversalTable.component';\nimport { CollapsibleTable } from '../CollapsibleTable.component';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { formatDateTime } from '../../utilities/formatDateTime.utility';\nimport DeviceDetailsTitle from './DeviceDetailsTitle.component';\nimport EdgeComputingTabContent from './EdgeComputingTabContent.component';\nimport AlertsTabContent from './AlertsTabContent.component';\nimport MSAgentBottomToolbar from './MSAgentBottomToolbar.component';\n\nconst useStyles = makeStyles((theme) => ({\n  topMargin: {\n    marginTop: theme.spacing(2)\n  },\n  controlButtons: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction MSMQTTDeviceDisplay({ selectedDevice, allDevices, tableView }) {\n  const { t } = useTranslation();\n  const classes = useStyles();\n  const device = allDevices[selectedDevice.selectedDeviceID]\n\n  //this tab is 1 table only so this renders whole INFO TAB\n  const renderInfoTabContent = () => {\n    if (tableView === 'simple') {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.boarded`), `${device.boarded}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`]\n        ]\n      }\n    }\n    else {\n      return {\n        columns: [t('DevicesSelectionPage.Properties.genericParameterTableHeader'), t('DevicesSelectionPage.Properties.genericValueTableHeader')],\n        rows: [\n          [t(`DevicesSelectionPage.Properties.name`), `${device.name}`],\n          [t(`DevicesSelectionPage.Properties.type`), `${device.type}`],\n          [t(`DevicesSelectionPage.Properties.boarded`), `${device.boarded}`],\n          [t(`DevicesSelectionPage.Properties.isActive`), `${device.isActive}`],\n          [t(`DevicesSelectionPage.Properties.mqttName`), `${device.mqttName}`],\n          [t(`DevicesSelectionPage.Properties.clientId`), `${device.clientId}`],\n          [t(`DevicesSelectionPage.Properties.checkStateInterval`), `${device.checkStateInterval}`],\n          [t(`DevicesSelectionPage.Properties.model`), `${device.model}`],\n          [t(`DevicesSelectionPage.Properties.revision`), `${device.revision}`],\n          [t(`DevicesSelectionPage.Properties.tenantName`), `${device.tenantName}`],\n          [t(`DevicesSelectionPage.Properties.serialNumber`), `${device.serialNumber}`],\n          [t(`DevicesSelectionPage.Properties.mqttMessagesLimit`), `${device.mqttMessagesLimit}`],\n          [t(`DevicesSelectionPage.Properties.dataStorageSize`), `${device.dataStorageSize}`],\n          [t(`DevicesSelectionPage.Properties.eventStorageSize`), `${device.eventStorageSize}`],\n          [t(`DevicesSelectionPage.Properties.numberOfDataFilesToSend`), `${device.numberOfDataFilesToSend}`],\n          [t(`DevicesSelectionPage.Properties.numberOfEventFilesToSend`), `${device.numberOfEventFilesToSend}`],\n          [t(`DevicesSelectionPage.Properties.sendDataFileInterval`), `${device.sendDataFileInterval}`],\n          [t(`DevicesSelectionPage.Properties.sendEventFileInterval`), `${device.sendEventFileInterval}`]\n        ]\n      }\n    }\n  }\n\n  //AssociatedVariable variables table inside VARIABLES TAB\n  const renderAssociatedVariablesTable = (variables) => {\n    let rows = []\n    let cols = []\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.name'), t('DevicesSelectionPage.Properties.value'), t('DevicesSelectionPage.Properties.unit'), t('DevicesSelectionPage.Properties.lastValueTick')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.name'),\n      t('DevicesSelectionPage.Properties.type'),\n      t('DevicesSelectionPage.Properties.value'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.defaultValue'),\n      t('DevicesSelectionPage.Properties.sampleTime'),\n      t('DevicesSelectionPage.Properties.associatedDeviceIDName'),\n      t('DevicesSelectionPage.Properties.associatedElementIDName'),\n      t('DevicesSelectionPage.Properties.lastValueTick'),\n      ]\n    }\n    variables.forEach(variable => {\n      //associate associatedDeviceID with corresponding device name and associatedElementID with its property name\n      variable = {\n        ...variable,\n        associatedDeviceIDName: allDevices[variable.associatedDeviceID] !== undefined ? allDevices[variable.associatedDeviceID].name : '',\n        associatedElementIDName: allDevices[variable.associatedDeviceID] !== undefined && allDevices[variable.associatedDeviceID].variables[variable.associatedElementID] !== undefined ? allDevices[variable.associatedDeviceID].variables[variable.associatedElementID].name : ''\n      }\n      if (tableView === 'simple') {\n        rows.push([variable.name, variable.value, variable.unit, variable.lastValueTick])\n      }\n      else {\n        rows.push([variable.name, variable.type, variable.value, variable.unit, variable.defaultValue, variable.sampleTime, variable.associatedDeviceIDName, variable.associatedElementIDName, variable.lastValueTick])\n      }\n    })\n\n    return <UniversalTable columns={cols} rows={rows} className={classes.bottomMargin} />\n  }\n\n  //rendering whole VARIABLES TAB\n  const renderVariablesTabContent = () => {\n    //group AssociatedVariable variables in one table and rest in other table \n    //lastValueTick in order to avoid further processing duplicates in separate functions\n    const variables = Object.values(device.variables).map(variable => {\n      return {\n        ...variable,\n        value: !isNaN(variable.value) ? parseFloat(variable.value).toFixed(3) : `${variable.value}`,\n        lastValueTick: variable.lastValueTick === 0 ? '' : formatDateTime(new Date(parseFloat(variable.lastValueTick) * 1000))\n      }\n    })\n\n    const associatedVariables = variables.filter(variable => variable.type === 'AssociatedVariable')\n\n    return (\n      <React.Fragment>\n        {associatedVariables.length > 0 ?\n          <React.Fragment>\n            <Typography variant=\"h6\" className={classes.topMargin}>{t('DevicesSelectionPage.Properties.AssociatedVariable')}</Typography>\n            {renderAssociatedVariablesTable(associatedVariables)}\n          </React.Fragment>\n          : null}\n      </React.Fragment>\n    )\n  }\n\n  //render DATA SENT TAB CONTENT\n  //this tab is 1 table only so this renders whole DATA SENT TAB\n  const renderDataSentTabContent = () => {\n    let rows = []\n    let cols = []\n    let collapsedRows = []\n    let collapsedCols = []\n    let rowToBeCollapsed = []\n\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.deviceName'), t('DevicesSelectionPage.Properties.elementName'), t('DevicesSelectionPage.Properties.sendingInterval')]\n    }\n    else {\n      //push collapsed cols\n      collapsedCols = [t('DevicesSelectionPage.Properties.conversionType'), t('DevicesSelectionPage.Properties.precision')]\n\n      cols = [t('DevicesSelectionPage.Properties.deviceName'),\n      t('DevicesSelectionPage.Properties.elementName'),\n      t('DevicesSelectionPage.Properties.variableName'),\n      t('DevicesSelectionPage.Properties.unit'),\n      t('DevicesSelectionPage.Properties.groupName'),\n      t('DevicesSelectionPage.Properties.sendingInterval'),\n      ]\n    }\n    Object.values(device.dataToSendConfig).forEach((dataConfig, i) => {\n      collapsedRows = []\n      //associate deviceId with corresponding device name and elementId with its variable's name\n      dataConfig = {\n        ...dataConfig,\n        associatedDeviceIDName: allDevices[dataConfig.deviceId] !== undefined ? allDevices[dataConfig.deviceId].name : '',\n        associatedElementIDName: allDevices[dataConfig.deviceId] !== undefined && allDevices[dataConfig.deviceId].variables[dataConfig.elementId] !== undefined ? allDevices[dataConfig.deviceId].variables[dataConfig.elementId].name : ''\n      }\n      if (tableView === 'simple') {\n        rows.push([dataConfig.associatedDeviceIDName, dataConfig.associatedElementIDName, dataConfig.sendingInterval])\n      }\n      else {\n        //push dataConverter's properties contents into collapsed table\n        collapsedRows.push([dataConfig.dataConverter.conversionType, dataConfig.dataConverter.precision])\n        rowToBeCollapsed.push({ rowIndex: i, content: <UniversalTable small noElevation columns={collapsedCols} rows={collapsedRows} /> })\n\n        rows.push([dataConfig.associatedDeviceIDName, dataConfig.associatedElementIDName, dataConfig.variableName, dataConfig.variableUnit, dataConfig.groupName, dataConfig.sendingInterval])\n      }\n    })\n\n    return tableView === 'simple' ? <UniversalTable columns={cols} rows={rows} /> :\n      <CollapsibleTable\n        columns={cols}\n        rows={rows}\n        collapsedRows={rowToBeCollapsed}\n        name='MSAgentDataSent'\n      />\n  }\n\n  //render EVENTS SENT TAB CONTENT\n  //this tab is 1 table only so this renders whole EVENTS SENT TAB\n  const renderEventsSentTabContent = () => {\n    let rows = []\n    let cols = []\n\n    if (tableView === 'simple') {\n      cols = [t('DevicesSelectionPage.Properties.deviceName'), t('DevicesSelectionPage.Properties.elementName'), t('DevicesSelectionPage.Properties.sendingInterval')]\n    }\n    else {\n      cols = [t('DevicesSelectionPage.Properties.deviceName'),\n      t('DevicesSelectionPage.Properties.elementName'),\n      t('DevicesSelectionPage.Properties.sendingInterval'),\n      t('DevicesSelectionPage.Properties.severity'),\n      t('DevicesSelectionPage.Properties.eventName'),\n      t('DevicesSelectionPage.Properties.eventType')\n      ]\n    }\n    Object.values(device.eventsToSendConfig).forEach((eventConfig, i) => {\n      //associate deviceId with corresponding device name and elementId with its variable's name\n      eventConfig = {\n        ...eventConfig,\n        associatedDeviceIDName: allDevices[eventConfig.deviceId] !== undefined ? allDevices[eventConfig.deviceId].name : '',\n        associatedElementIDName: allDevices[eventConfig.deviceId] !== undefined && allDevices[eventConfig.deviceId].alerts[eventConfig.elementId] !== undefined ? allDevices[eventConfig.deviceId].alerts[eventConfig.elementId].name : '',\n      }\n      if (tableView === 'simple') {\n        rows.push([eventConfig.associatedDeviceIDName, eventConfig.associatedElementIDName, eventConfig.sendingInterval])\n      }\n      else {\n        rows.push([eventConfig.associatedDeviceIDName, eventConfig.associatedElementIDName, eventConfig.sendingInterval, eventConfig.severity, eventConfig.eventName, eventConfig.eventType])\n      }\n    })\n\n    return <UniversalTable columns={cols} rows={rows} />\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <DeviceDetailsTitle />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.controlButtons}>\n          <MSAgentBottomToolbar />\n        </Grid>\n        <Grid item xs={12}>\n          <UniversalTabs\n            name=\"MSAgentDevice\"\n            tabs={[\n              {\n                label: t('DevicesSelectionPage.Tabs.info'),\n                content: <UniversalTable {...renderInfoTabContent()} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.variables'),\n                content: renderVariablesTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.calcElements'),\n                content: <EdgeComputingTabContent calcElementsObject={device.calcElements} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.alerts'),\n                content: <AlertsTabContent alertElementsObject={device.alerts} />\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.dataToSendConfig'),\n                content: renderDataSentTabContent()\n              },\n              {\n                label: t('DevicesSelectionPage.Tabs.eventsToSendConfig'),\n                content: renderEventsSentTabContent()\n              }\n            ]} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nexport default connect(mapStateToProps)(MSMQTTDeviceDisplay)","import React, { useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport DevicesList from './DevicesList.component';\nimport { connect } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { setAllDevices, refreshDeviceParams } from '../actions/DevicesSelectionPage.action';\nimport DeviceService from '../services/device.service';\nimport worker from 'workerize-loader!../workers/devices.worker'; //eslint-disable-line import/no-webpack-loader-syntax\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport MBDeviceDisplay from './DevicesSelectionPageComponents/MBDeviceDisplay.component';\nimport S7DeviceDisplay from './DevicesSelectionPageComponents/S7DeviceDisplay.component';\nimport InternalDeviceDisplay from './DevicesSelectionPageComponents/InternalDeviceDisplay.component';\nimport MBGatewayDeviceDisplay from './DevicesSelectionPageComponents/MBGatewayDeviceDisplay.component';\nimport MSAgentDeviceDisplay from './DevicesSelectionPageComponents/MSAgentDeviceDisplay.component';\nimport MSMQTTDeviceDisplay from './DevicesSelectionPageComponents/MSMQTTDeviceDisplay.component';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 'calc(100% - 70px)'\n  },\n  title: {\n    marginBottom: theme.spacing(3)\n  },\n  alignTop: {\n    verticalAlign: 'top'\n  },\n  devicesTitleInline: {\n    marginBottom: theme.spacing(3),\n    display: 'inline-block'\n  },\n  marginTopTable: {\n    marginTop: theme.spacing(4)\n  },\n  noDevicesContainer: {\n    width: '100%',\n    textAlign: 'center'\n  },\n  sticky: {\n    [`${theme.breakpoints.up('md')}`]: {\n      position: 'sticky',\n      top: theme.spacing(10)\n    },\n  }\n}));\n\nlet instance;\n\nfunction DevicesSelectionPage(props) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { setAllDevices, allDevices, selectedDevice, authenticated, refreshDeviceParams } = props;\n\n  const fetchDevices = useCallback(() => {\n    DeviceService.getDevices().then(res => {\n      if (res.status === 200) {\n        setAllDevices(res.data)\n      }\n    })\n  }, [setAllDevices]);\n\n  //initial fetch all devices\n  useEffect(() => {\n    fetchDevices()\n  }, [setAllDevices, fetchDevices])\n\n  //setup web worker for fetching periodically\n  useEffect(() => {\n    const refreshDeviceData = (message) => {\n      const { data } = message;\n      if (data !== undefined && data.type !== 'RPC' && data.id !== undefined) {\n        refreshDeviceParams(data)\n      }\n    }\n\n    instance = worker()\n    instance.addEventListener(\"message\", message => refreshDeviceData(message));\n    return () => {\n      instance.postMessage({ token: null, text: 'stop' })\n      instance.removeEventListener(\"message\", message => refreshDeviceData(message))\n      instance.terminate()\n    }\n  }, [refreshDeviceParams])\n\n  //check if authenticated, if not - stop fetching\n  useEffect(() => {\n    if (instance !== null) {\n      if (authenticated === false) {\n        instance.postMessage({ token: null, text: 'stop' })\n      }\n      else {\n        instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start', device: selectedDevice.selectedDeviceID });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authenticated, selectedDevice])\n\n  const displaySelectedDevice = () => {\n    switch (selectedDevice.selectedDeviceType) {\n      case 'MBDevice':\n        return <MBDeviceDisplay />\n      case 'S7Device':\n        return <S7DeviceDisplay />\n      case 'InternalDevice':\n        return <InternalDeviceDisplay />\n      case 'MBGatewayDevice':\n        return <MBGatewayDeviceDisplay />\n      case 'MSAgentDevice':\n        return <MSAgentDeviceDisplay />\n      case 'MSMQTTAgentDevice':\n        return <MSMQTTDeviceDisplay />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} justify=\"flex-start\" alignItems=\"flex-start\" alignContent=\"flex-start\" className={classes.root} >\n        <Grid item xs={12} sm={12} md={4} lg={3} xl={2} className={classes.sticky}>\n          <Typography variant=\"h4\" className={classes.devicesTitleInline}>{t('DevicesSelectionPage.DevicesTitle')}</Typography>\n          <Zoom in={true} style={{ transitionDelay: '500ms' }}>\n            <Tooltip title={t('DevicesSelectionPage.RefreshAllDevices')} placement=\"bottom\">\n              <IconButton aria-label=\"refresh\" className={classes.alignTop} onClick={() => fetchDevices()} >\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </Zoom>\n          <DevicesList />\n        </Grid>\n\n        {Object.keys(allDevices).length > 0 ?\n          <Grid container item xs={12} sm={12} md={8} lg={9} xl={10} spacing={0}>\n            <Grid item xs={12} >\n              {displaySelectedDevice()}\n            </Grid>\n          </Grid>\n          :\n          <div className={classes.noDevicesContainer}>\n            <Typography variant=\"h4\">{t('DevicesSelectionPage.NoDevicesHeader')}</Typography>\n          </div>\n        }\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedDevice: state.DevicesListReducer,\n    allDevices: state.DevicesSelectionPageReducer.devices,\n    authenticated: state.AuthenticationReducer.authed,\n    tableView: state.DevicesSelectionPageReducer.tableView\n  }\n}\n\nconst mapDispatchToProps = {\n  setAllDevices,\n  refreshDeviceParams,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DevicesSelectionPage)","export const SET_ACCOUNT_FORM_CURRENT_PASSWORD = 'SET_ACCOUNT_FORM_CURRENT_PASSWORD';\nexport const SET_ACCOUNT_FORM_NEW_PASSWORD = 'SET_ACCOUNT_FORM_NEW_PASSWORD';\nexport const SET_ACCOUNT_FORM_REPEATED_NEW_PASSWORD = 'SET_ACCOUNT_FORM_REPEATED_NEW_PASSWORD';\n\nexport const setAccountFormCurrentPassword = (password) => ({ type: SET_ACCOUNT_FORM_CURRENT_PASSWORD, currentPassword: password })\nexport const setAccountFormNewPassword = (password) => ({ type: SET_ACCOUNT_FORM_NEW_PASSWORD, newPassword: password })\nexport const setAccountFormRepeatedNewPassword = (password) => ({ type: SET_ACCOUNT_FORM_REPEATED_NEW_PASSWORD, repeatedNewPassword: password })","const API_URL = '/api/user';\n\nclass UserService {\n  async getMyAccountDetails() {\n    const response = await fetch(`${API_URL}/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n    })\n    if (response.status === 200) {\n      const userData = await response.json()\n      return {\n        status: response.status,\n        data: userData\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n\n  async getAllAccounts() {\n    const response = await fetch(`${API_URL}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n    })\n    if (response.status === 200) {\n      const userData = await response.json()\n      return {\n        status: response.status,\n        data: userData\n      };\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n\n  async deleteAccount(id) {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n    })\n    return { status: response.status }\n  }\n\n  async editAccount(id, name, permissions, newPassword = false) {\n    let body = {\n      name: name,\n      permissions: permissions\n    };\n    let bodyWithPasswords;\n    if (newPassword) {\n      bodyWithPasswords = {\n        ...body,\n        password: newPassword,\n      }\n    }\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n      body: JSON.stringify(newPassword ? bodyWithPasswords : body)\n    })\n    return { status: response.status }\n  }\n\n  async editMyPassword(name, permissions, oldPassword, newPassword) {\n    const response = await fetch(`${API_URL}/me`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n      body: JSON.stringify({ name: name, permissions: permissions, oldPassword: oldPassword, password: newPassword })\n    })\n    return { status: response.status }\n  }\n\n  async register(username, password, permissions) {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      },\n      body: JSON.stringify({ name: username, permissions: permissions, password: password })\n    })\n    return { status: response.status }\n  }\n}\n\nexport default new UserService();","import React, { useState, useEffect, useCallback } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport { connect } from 'react-redux';\nimport { setAccountFormCurrentPassword, setAccountFormNewPassword, setAccountFormRepeatedNewPassword } from '../actions/AccountPage.action';\nimport { useTranslation } from 'react-i18next';\nimport UserService from '../services/user.service';\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\nimport Grow from '@material-ui/core/Grow';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n  loginButton: {\n    marginTop: theme.spacing(3)\n  },\n  form: {\n    '& > *': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}))\n\nfunction AccountPage({ currentPassword, newPassword, setAccountFormCurrentPassword, setAccountFormNewPassword, setSnackbarText, setSnackbarShown, repeatedNewPassword, setAccountFormRepeatedNewPassword }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [accountDetails, setAccountDetails] = useState({})\n\n  const getMyAccountDetails = useCallback(() => {\n    UserService.getMyAccountDetails().then(res => {\n      if (res.status === 200) {\n        setAccountDetails(res.data)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\n        setSnackbarShown(true)\n      }\n    })\n  }, [setSnackbarShown, setSnackbarText, t])\n\n  useEffect(() => {\n    getMyAccountDetails()\n  }, [getMyAccountDetails])\n\n  useEffect(()=>{\n    //reset textfields on route exit\n    return () => {\n      setAccountFormCurrentPassword('')\n      setAccountFormNewPassword('')\n      setAccountFormRepeatedNewPassword('')\n    }\n  },[setAccountFormCurrentPassword, setAccountFormNewPassword, setAccountFormRepeatedNewPassword])\n\n  const verify = (textfield) => {\n    const lengthErrorText = t('AccountPage.PasswordHelperError8characters');\n    const noMatchErrorText = t('AccountPage.PasswordHelperErrorNewPasswordsMatch');\n\n    if (textfield === 'newPassword') {\n      if (newPassword.length > 0 && newPassword.length < 8) {\n        return {\n          error: true,\n          text: lengthErrorText\n        }\n      }\n\n    }\n    if (textfield === 'repeatNewPassword') {\n      if (repeatedNewPassword.length > 0 && repeatedNewPassword.length < 8) {\n        return {\n          error: true,\n          text: lengthErrorText\n        }\n      }\n      \n    }\n    if (newPassword !== repeatedNewPassword && newPassword.length >= 8 && repeatedNewPassword.length >= 8) {\n      return {\n        error: true,\n        text: noMatchErrorText\n      }\n    }\n    return {\n      error: false,\n      text: ''\n    }\n  }\n\n  const changePassword = () => {\n    UserService.editMyPassword(accountDetails.name, accountDetails.permissions, currentPassword, newPassword).then(res => {\n      if (res.status === 200) {\n        //reset fields after submit\n        setAccountFormCurrentPassword('')\n        setAccountFormNewPassword('')\n        setSnackbarText(t('Snackbar.SuccessfulPasswordChange'), 'success')\n        setSnackbarShown(true)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnsuccessfulPasswordChange'), 'error')\n        setSnackbarShown(true)\n      }\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        alignContent=\"center\"\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">{t('AccountPage.Title')}</Typography>\n        </Grid>\n        <Typography variant=\"body1\">{t('AccountPage.Permissions')}</Typography>\n        <Grid container\n          justify=\"center\"\n          alignItems=\"flex-start\"\n          alignContent=\"center\"\n          item xs={12}>\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\n            {accountDetails.permissions >= 1 ? <Grow in={true} style={{ transformOrigin: '0 0 0' }} timeout={500}><Chip avatar={<Avatar>U</Avatar>} label=\"User\" /></Grow> : null}\n            {accountDetails.permissions >= 3 ? <Grow in={true} style={{ transformOrigin: '0 0 0' }} timeout={1000}><Chip color=\"primary\" avatar={<Avatar>A</Avatar>} label=\"Admin\" /></Grow> : null}\n            {accountDetails.permissions === 7 ? <Grow in={true} style={{ transformOrigin: '0 0 0' }} timeout={1500}><Chip color=\"secondary\" avatar={<Avatar>S</Avatar>} label=\"SuperAdmin\" /></Grow> : null}\n          </Grid>\n        </Grid>\n        <Grid container\n          justify=\"center\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n          item xs={12}>\n          <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              {accountDetails.name ? <TextField fullWidth disabled label={t('AccountPage.NameTextField')} autoComplete=\"username\" defaultValue={accountDetails.name} /> : null}\n              <TextField\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={currentPassword}\n                onChange={(e) => setAccountFormCurrentPassword(e.target.value)}\n                fullWidth\n                label={t('AccountPage.CurrentPasswordTextField')}\n              />\n              <TextField\n                type=\"password\"\n                autoComplete=\"new-password\"\n                value={newPassword}\n                onChange={(e) => setAccountFormNewPassword(e.target.value)}\n                fullWidth\n                label={t('AccountPage.NewPasswordTextField')}\n                helperText={verify('newPassword').text}\n                error={verify('newPassword').error} />\n              <TextField\n                type=\"password\"\n                autoComplete=\"repeat-new-password\"\n                value={repeatedNewPassword}\n                onChange={(e) => setAccountFormRepeatedNewPassword(e.target.value)}\n                fullWidth\n                label={t('AccountPage.RepeatNewPasswordTextField')}\n                helperText={verify('repeatNewPassword').text}\n                error={verify('repeatNewPassword').error}\n              />\n            </form>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\n          <Button onClick={() => changePassword()}\n            className={classes.loginButton} fullWidth color=\"primary\" variant=\"contained\" disabled={currentPassword.length === 0 \n            || newPassword.length === 0 \n            || repeatedNewPassword.length === 0\n            || verify('newPassword').error \n            || verify('currentPassword').error\n            || verify('repeatNewPassword').error}>\n              {t('AccountPage.ChangePasswordButton')}\n              </Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentPassword: state.AccountPageReducer.currentPassword,\n    newPassword: state.AccountPageReducer.newPassword,\n    repeatedNewPassword: state.AccountPageReducer.repeatedNewPassword\n  }\n}\n\nconst mapDispatchToProps = {\n  setAccountFormCurrentPassword,\n  setAccountFormNewPassword,\n  setSnackbarText,\n  setSnackbarShown,\n  setAccountFormRepeatedNewPassword\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPage);","export const SET_USER_ACCOUNTS_LIST = 'SET_USER_ACCOUNTS_LIST';\n\nexport const setUserAccountsList = (list) => ({ type: SET_USER_ACCOUNTS_LIST, list: list})","export const SET_CREATE_ACCOUNT_DIALOG_OPEN = 'SET_CREATE_ACCOUNT_DIALOG_OPEN';\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD';\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR';\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD';\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR';\nexport const SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT = 'SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT';\nexport const SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD';\nexport const SET_CREATE_ACCOUNT_DIALOG_EDIT_ID = 'SET_CREATE_ACCOUNT_DIALOG_EDIT_ID';\n\nexport const setCreateAccountDialogOpen = (open, dialogType) => ({ type: SET_CREATE_ACCOUNT_DIALOG_OPEN, open: open, dialogType: dialogType }) //dialogType === create or edit\nexport const setCreateAccountDialogNameTextfield = (name) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD, name: name })\nexport const setCreateAccountDialogPasswordTextfield = (password) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD, password: password })\nexport const setCreateAccountDialogPermissionsSelect = (permissions) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT, permissions: permissions })\nexport const setCreateAccountDialogNameTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR, error: error })\nexport const setCreateAccountDialogPasswordTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR, error: error })\nexport const setCreateAccountDialogNewpasswordTextfield = (newpassword) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD, newpassword: newpassword })\nexport const setCreateAccountDialogEditId = (id) => ({ type: SET_CREATE_ACCOUNT_DIALOG_EDIT_ID, id: id })","export const SET_CONFIRM_DELETE_USER_DIALOG_OPEN = 'SET_CONFIRM_DELETE_USER_DIALOG_OPEN';\nexport const SET_CONFIRM_DELETE_USER_DIALOG_USERNAME = 'SET_CONFIRM_DELETE_USER_DIALOG_USERNAME';\n\nexport const setConfirmDeleteUserDialogOpen = (open) => ({ type: SET_CONFIRM_DELETE_USER_DIALOG_OPEN, open: open })\nexport const setConfirmDeleteUserDialogUsername = (username, id) => ({type: SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, username: username, id: id })","const API_URL = \"/api/auth/\";\n\nclass AuthService {\n  async login(username, password) {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name: username, password: password })\n    })\n\n    if (response.status === 200) {\n      const userData = await response.json()\n      if (response.headers.get('x-auth-token')) {\n        localStorage.setItem(\"user\", JSON.stringify({ ...userData, accessToken: response.headers.get('x-auth-token') }))\n      }\n      return userData;\n    }\n    throw new Error(response.status)\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();","import React, { useEffect, useCallback } from 'react';\nimport { UniversalTable } from './UniversalTable.component';\nimport { connect } from 'react-redux';\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\nimport UserService from '../services/user.service';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { setCreateAccountDialogOpen, setCreateAccountDialogEditId, setCreateAccountDialogNameTextfield, setCreateAccountDialogPermissionsSelect } from '../actions/CreateAccountDialog.action';\nimport { useTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\nimport AuthService from '../services/auth.service';\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  icons: {\n    padding: theme.spacing(1)\n  },\n}));\n\nfunction UserAccountsPage({ setUserAccountsList,\n  setCreateAccountDialogOpen,\n  accountsList,\n  setConfirmDeleteUserDialogOpen,\n  setConfirmDeleteUserDialogUsername,\n  setCreateAccountDialogEditId,\n  setCreateAccountDialogPermissionsSelect,\n  setCreateAccountDialogNameTextfield,\n  setSnackbarText,\n  setSnackbarShown }) {\n\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  const getAllAccounts = useCallback(() => {\n    UserService.getAllAccounts().then(res => {\n      if (res.status === 200) {\n        setUserAccountsList(res.data)\n      }\n      else if (res.status === 403) {\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\n        setSnackbarShown(true)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\n        setSnackbarShown(true)\n      }\n    })\n  }, [setUserAccountsList, setSnackbarShown, setSnackbarText, t])\n\n  useEffect(() => {\n    getAllAccounts()\n  }, [getAllAccounts])\n\n  const deleteAcc = (id, username) => {\n    setConfirmDeleteUserDialogUsername(username, id)\n    setConfirmDeleteUserDialogOpen(true)\n  }\n\n  const editAcc = (id, name, permissions) => {\n    setCreateAccountDialogEditId(id)\n    setCreateAccountDialogNameTextfield(name)\n    setCreateAccountDialogPermissionsSelect(permissions)\n    setCreateAccountDialogOpen(true, 'edit')\n  }\n\n  const checkPermissions = (permissions) => {\n    const currentUser = AuthService.getCurrentUser().permissions;\n    if (currentUser === 7) {\n      return true;\n    }\n    if ((permissions === 3 || permissions === 7) && currentUser === 3) {\n      return false\n    }\n    if (permissions === 1 && currentUser >= 3) {\n      return true\n    }\n    return true\n  }\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">{t('AccountMenu.UserAccounts')}</Typography>\n        </Grid>\n        {accountsList.length > 0 ?\n          <Grid item xs={12}>\n            <UniversalTable\n              columns={[t('UserAccountsPage.NameColumn'), t('UserAccountsPage.PermissionsColumn'), t('UserAccountsPage.ActionColumn')]}\n              rows={accountsList.map(acc => [acc.name, acc.permissions === 1 ? 'User' : acc.permissions === 3 ? 'Admin' : 'SuperAdmin', checkPermissions(acc.permissions) ?\n                <div>\n                  <Tooltip title={t('UserAccountsPage.TooltipEdit')} placement=\"top\">\n                    <IconButton onClick={() => editAcc(acc._id, acc.name, acc.permissions)} className={classes.icons} aria-label=\"edit\">\n                      <EditIcon />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title={t('UserAccountsPage.TooltipDelete')} placement=\"top\">\n                    <IconButton onClick={() => deleteAcc(acc._id, acc.name)} className={classes.icons} aria-label=\"delete\">\n                      <DeleteIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n                :\n                null])}\n            />\n          </Grid> :\n          null\n        }\n        <Grid item xs={6} sm={4} md={3} lg={2}>\n          <Button\n            onClick={() => setCreateAccountDialogOpen(true, 'create')}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n          >\n            {t('UserAccountsPage.CreateUser')}\n          </Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accountsList: state.UserAccountsPageReducer.accountsList,\n  }\n}\n\nconst mapDispatchToProps = {\n  setUserAccountsList,\n  setCreateAccountDialogOpen,\n  setConfirmDeleteUserDialogOpen,\n  setConfirmDeleteUserDialogUsername,\n  setCreateAccountDialogEditId,\n  setCreateAccountDialogNameTextfield,\n  setCreateAccountDialogPermissionsSelect,\n  setSnackbarText,\n  setSnackbarShown\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccountsPage);","import AuthService from \"../services/auth.service\";\n\nexport const isAuthenticated = () => {\n  const user = AuthService.getCurrentUser();\n  if (user === null || user._id === undefined || user.name === undefined || user.permissions === undefined || user.accessToken === undefined) {\n    return false\n  }\n  return true\n}\n\nexport const isAdmin = () => {\n  const user = AuthService.getCurrentUser();\n  if(user!==null && user.permissions>=3) {\n    return true\n  }\n  return false\n}","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\n\nexport const setAuthenticated = (authed) => ({ type: SET_AUTHENTICATED, authenticated: authed})","import { isAdmin } from '../services/isAuthenticated.service';\nimport React from \"react\";\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { setAuthenticated } from '../actions/Authentication.action';\nimport { connect } from 'react-redux';\n\n\nfunction AdminRoute({ children, authenticated, setAuthenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAdmin() ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated: state.AuthenticationReducer.authed\n  }\n}\n\nconst mapDispatchToProps = {\n  setAuthenticated\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminRoute);","export const SET_LOGS = 'SET_LOGS';\n\nexport const setLogs = (logs) => ({ type: SET_LOGS, logs })","const API_URL = \"/api/log/\";\n\nclass LogsService {\n  async getLogs() {\n    const response = await fetch(`${API_URL}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    })\n    if (response.status === 200) {\n      const logs = await response.text()\n      return {\n        status: response.status,\n        data: logs\n      }\n    }\n    else {\n      return { status: response.status }\n    }\n  }\n}\n\nexport default new LogsService();","import React, { useEffect, useCallback, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { setLogs } from '../actions/Logs.action';\nimport LogsService from '../services/logs.service';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { setBackdropOpen, setBackdropClosed } from '../actions/Backdrop.action';\nimport Grow from '@material-ui/core/Grow';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginBottom: theme.spacing(3)\n  },\n  devicesTitleInline: {\n    display: 'inline-block'\n  },\n  alignTop: {\n    verticalAlign: 'top'\n  },\n  linkInAlert: {\n    color: 'white',\n    textDecoration: 'underline',\n    cursor: 'pointer'\n  }\n}));\n\nfunction Logs({ logs, setLogs, setBackdropOpen, setBackdropClosed }) {\n  const [downloadButtonDisabled, setdownloadButtonDisabled] = useState(false)\n  const { t } = useTranslation()\n  const classes = useStyles();\n  const initialLogsNumber = 250;\n\n  const downloadLogsFile = (filename, text) => {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  const getLogs = useCallback((getAll = false) => {\n    setBackdropOpen()\n    setdownloadButtonDisabled(true)\n    LogsService.getLogs().then(res => {\n      setBackdropClosed()\n      setdownloadButtonDisabled(false)\n      if (res.status === 200) {\n        if (getAll) {\n          downloadLogsFile('SidiroIOT-logs.log', res.data)\n        }\n        else {\n          const parsedContent = parseLogs(res.data);\n          const joinedString = parsedContent.filter((item, i) => i >= parsedContent.length - initialLogsNumber).join(\"\\r\\n\");\n          setLogs(joinedString)\n          const textarea = document.getElementById('logs-multiline');\n          textarea.scrollTop = textarea.scrollHeight;\n        }\n      }\n    })\n  }, [setLogs, setBackdropOpen, setBackdropClosed])\n\n  useEffect(() => {\n    getLogs()\n    //clear memory on route exit\n    return () => {\n      setLogs(null)\n    }\n  }, [getLogs, setLogs])\n\n  /**\n * @description Method for converting log file content to array of strings to display\n * @param {String} logFileContent content of log file\n */\n  const parseLogs = (logFileContent) => {\n    //Defining array to return\n    let logsToReturn = [];\n    if (!logFileContent) return logsToReturn;\n\n    //Splitting log file content into lines\n    let splitedLogs = logFileContent.split(/\\r\\n|\\r|\\n/);\n\n    //For each line - if line is not empty and defined - try parse it to JSON\n    //If parsing fails or JSON of log is invalid - append log line itself to logsToReturnArray\n    //If parsing is successful and JSON is valid - format the log line and append to logsToReturn array\n    for (let logLine of splitedLogs) {\n      if (logLine !== undefined && logLine !== null && logLine !== \"\") {\n        try {\n          //Throws if JSON is not valid\n          let jsonLine = JSON.parse(logLine);\n          let timestamp = jsonLine.timestamp;\n          let level = jsonLine.level;\n          let message = jsonLine.message;\n\n          //Checking if JSON is valid after parsing\n          if (\n            timestamp !== undefined &&\n            level !== undefined &&\n            message !== undefined\n          ) {\n            logsToReturn.push(`${timestamp} [${level}]: ${message}`);\n          } else {\n            logsToReturn.push(logLine);\n          }\n        } catch (err) {\n          logsToReturn.push(logLine);\n        }\n      }\n    }\n\n    return logsToReturn;\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" className={classes.devicesTitleInline}>{t('LogsPage.Title')}</Typography>\n          <Zoom in={true} style={{ transitionDelay: '500ms' }}>\n            <Tooltip title={t('LogsPage.RefreshLastLogs')} placement=\"bottom\">\n              <IconButton aria-label=\"refresh\" className={classes.alignTop} onClick={() => getLogs()} >\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </Zoom>\n        </Grid>\n        {logs !== null ?\n          <React.Fragment>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">{t('LogsPage.ShowingLogsSubtitle1')} {initialLogsNumber} {t('LogsPage.ShowingLogsSubtitle2')}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                disabled\n                fullWidth\n                id=\"logs-multiline\"\n                label={t('LogsPage.DeviceLogsLabel')}\n                multiline\n                rowsMax={24}\n                value={logs}\n              />\n            </Grid>\n            <Grow in={true} style={{ transformOrigin: '0 0 0' }} timeout={500}>\n              <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\n                <Button\n                disabled={downloadButtonDisabled}\n                  onClick={() => getLogs(true)}\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<GetAppIcon />}\n                >\n                  {t('LogsPage.DownloadAllLogs')}\n                </Button>\n              </Grid>\n            </Grow>\n          </React.Fragment>\n          : null\n        }\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    logs: state.LogsReducer.logs\n  }\n}\n\nconst mapDispatchToProps = {\n  setLogs,\n  setBackdropOpen,\n  setBackdropClosed\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Settings from '../components/Settings.component';\nimport DevicesSelectionPage from '../components/DevicesSelectionPage.component';\nimport AccountPage from '../components/AccountPage.component';\nimport UserAccountsPage from '../components/UserAccountsPage.component';\nimport AdminRoute from '../routes/ProtectedAdmin.routes';\nimport Logs from '../components/Logs.component';\n\nexport default function DrawerRoutes() {\n  return (\n    <Switch>\n      <AdminRoute path=\"/settings\"><Settings /></AdminRoute>\n      <AdminRoute path=\"/logs\"><Logs /></AdminRoute>\n      <Route path=\"/myaccount\" render={() => <AccountPage />} />\n      <AdminRoute path=\"/useraccounts\"><UserAccountsPage /></AdminRoute>\n      <Route path=\"/\" render={() => <DevicesSelectionPage />} />\n    </Switch>\n  )\n}\n","export const SET_LANGUAGE_DIALOG_OPEN = 'SET_LANGUAGE_DIALOG_OPEN';\n\nexport const setLanguageDialogOpen = (open) => ({ type: SET_LANGUAGE_DIALOG_OPEN, open: open })","export const SET_LOGIN_FORM_USERNAME = 'SET_LOGIN_FORM_USERNAME';\nexport const SET_LOGIN_FORM_PASSWORD = 'SET_LOGIN_FORM_PASSWORD';\nexport const SET_LOGIN_FORM_USERNAME_ERROR = 'SET_LOGIN_FORM_USERNAME_ERROR';\nexport const SET_LOGIN_FORM_PASSWORD_ERROR = 'SET_LOGIN_FORM_PASSWORD_ERROR';\n\nexport const setLoginFormUsername = (username) => ({ type: SET_LOGIN_FORM_USERNAME, username: username })\nexport const setLoginFormPassword = (password) => ({ type: SET_LOGIN_FORM_PASSWORD, password: password })\nexport const setLoginFormUsernameError = (error) => ({ type: SET_LOGIN_FORM_USERNAME_ERROR, error: error })\nexport const setLoginFormPasswordError = (error) => ({ type: SET_LOGIN_FORM_PASSWORD_ERROR, error: error })","export default __webpack_public_path__ + \"static/media/sie-logo-petrol-rgb.d3a18e49.svg\";","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport Fab from '@material-ui/core/Fab';\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport Zoom from '@material-ui/core/Zoom';\nimport { connect } from 'react-redux';\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AuthService from \"../services/auth.service\";\nimport { useHistory } from \"react-router-dom\";\nimport { setLoginFormUsernameError, setLoginFormPasswordError, setLoginFormUsername, setLoginFormPassword } from '../actions/LoginPage.action';\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fade from '@material-ui/core/Fade';\nimport SiemensLogoPetrol from '../assets/sie-logo-petrol-rgb.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  contentDesktop: {\n    //flexGrow: 1,\n    padding: theme.spacing(1),\n    height: '100vh',\n    width: '100%'\n  },\n  contentMobile: {\n    padding: theme.spacing(1),\n    height: '100%',\n    width: '100%'\n  },\n  loginButton: {\n    marginTop: theme.spacing(3)\n  },\n  form: {\n    '& > *': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  fab: {\n    position: 'absolute',\n    top: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  siemensLogo: {\n    paddingRight: '15px',\n    maxHeight: '19px'\n  },\n  topBar: {\n    [`${theme.breakpoints.up('xs')}`]: {\n      maxWidth: '1170px',\n      marginLeft: '15px'\n    },\n    marginTop: '15px',\n    marginBottom: '15px',\n    height: '100px'\n  },\n  loginContainer: {\n    height: `calc(100% - 150px)`\n  }\n}));\n\nfunction LoginPage(props) {\n  const classes = useStyles();\n  const { t } = useTranslation()\n  const theme = useTheme();\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: landscape)`)\n  let history = useHistory();\n\n  const tryLogin = () => {\n    AuthService.login(props.login, props.password).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      props.setLoginFormUsernameError(true)\n      props.setLoginFormPasswordError(true)\n      props.setLoginFormPassword(\"\")\n      props.setSnackbarText(t('Snackbar.LoginFailed'), 'error')\n      props.setSnackbarShown(true)\n    })\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter' && props.login.length >= 1 && props.password.length >= 1) {\n      tryLogin()\n    }\n  }\n\n  const buttonLogin = () => {\n    tryLogin()\n  }\n\n  const controlFormFields = (field, value) => {\n    props.setLoginFormUsernameError(false)\n    props.setLoginFormPasswordError(false)\n    if (field === 'username') {\n      props.setLoginFormUsername(value)\n    }\n    else {\n      props.setLoginFormPassword(value)\n    }\n  }\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  return (\n    <React.Fragment>\n      <Zoom\n        in={true}\n        timeout={transitionDuration}\n        style={{\n          transitionDelay: `500ms`,\n        }}\n        unmountOnExit\n      >\n        <Tooltip title={t('LoginPage.Language')} placement=\"bottom\">\n          <Fab aria-label=\"choose langauge\" className={classes.fab} color=\"primary\" onClick={() => props.setLanguageDialogOpen(true)}>\n            <LanguageIcon />\n          </Fab>\n        </Tooltip>\n      </Zoom>\n\n      <Fade in={true}>\n        <Grid className={matches ? classes.contentMobile : classes.contentDesktop}\n          container\n          spacing={0}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          alignContent=\"flex-start\">\n          <Grid item xs={12} className={classes.topBar}>\n            <img src={SiemensLogoPetrol} alt=\"Siemens Logo\" className={classes.siemensLogo} />\n          </Grid>\n          <Grid container item xs={12} spacing={0}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          alignContent=\"center\"\n          className={classes.loginContainer}>\n            <Grid item xs={12} >\n              <Typography align=\"center\" variant=\"h2\" gutterBottom>SidiroIOT</Typography>\n            </Grid>\n            <Grid item xs={12} >\n              <Typography align=\"center\" variant=\"h4\" gutterBottom>{t('LoginPage.LoginTitle')}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={8} md={6} lg={4} xl={3}>\n              <form noValidate autoComplete=\"off\" className={classes.form}>\n                <TextField\n                  error={props.loginError}\n                  value={props.login}\n                  onChange={(e) => controlFormFields('username', e.target.value)}\n                  id=\"login\" label={t('LoginPage.FormLoginTextField')} fullWidth variant=\"standard\" autoComplete=\"username\" onKeyDown={handleKeyDown} />\n                <TextField\n                  error={props.passwordError}\n                  value={props.password}\n                  onChange={(e) => controlFormFields('password', e.target.value)}\n                  id=\"password\" type=\"password\" label={t('LoginPage.FormPasswordTextField')} fullWidth variant=\"standard\" autoComplete=\"password\" onKeyDown={handleKeyDown} />\n              </form>\n              <Button onClick={() => buttonLogin()} className={classes.loginButton} color=\"primary\" variant=\"contained\" fullWidth disabled={props.login.length < 1 || props.password.length < 1}>{t('LoginPage.LoginButton')}</Button>\n            </Grid>\n          </Grid>\n\n        </Grid>\n      </Fade>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    login: state.LoginPageReducer.username,\n    loginError: state.LoginPageReducer.usernameError,\n    password: state.LoginPageReducer.password,\n    passwordError: state.LoginPageReducer.passwordError\n  }\n}\n\nconst mapDispatchToProps = {\n  setLanguageDialogOpen,\n  setLoginFormPassword,\n  setLoginFormUsername,\n  setLoginFormUsernameError,\n  setLoginFormPasswordError,\n  setSnackbarText,\n  setSnackbarShown\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","export const SET_HARDWARE_USAGE = 'SET_HARDWARE_USAGE';\n\nexport const setHardwareUsage = (cpuUsage, cpuTemperature, ramUsage, diskUsage) => ({ type: SET_HARDWARE_USAGE, cpuUsage: cpuUsage, cpuTemperature: cpuTemperature, ramUsage: ramUsage, diskUsage: diskUsage })","import { isAuthenticated } from '../services/isAuthenticated.service';\nimport React from \"react\";\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { setAuthenticated } from '../actions/Authentication.action';\nimport { connect } from 'react-redux';\n\n\nfunction PrivateRoute({ children, authenticated, setAuthenticated, ...rest }) {\n  React.useEffect(() => {\n    if (isAuthenticated()) {\n      setAuthenticated(true)\n    }\n  }, [authenticated, setAuthenticated])\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated() ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated: state.AuthenticationReducer.authed\n  }\n}\n\nconst mapDispatchToProps = {\n  setAuthenticated\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function CircularProgressWithLabel(props) {\n  const percentColors = [\n    { pct: 0.0, color: { r: 0x00, g: 0xff, b: 0 } },\n    { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0 } },\n    { pct: 1.0, color: { r: 0xff, g: 0x00, b: 0 } }];\n\n  const getColorForPercentage = (pct) => {\n    for (var i = 1; i < percentColors.length - 1; i++) {\n      if (pct < percentColors[i].pct) {\n        break;\n      }\n    }\n    var lower = percentColors[i - 1];\n    var upper = percentColors[i];\n    var range = upper.pct - lower.pct;\n    var rangePct = (pct - lower.pct) / range;\n    var pctLower = 1 - rangePct;\n    var pctUpper = rangePct;\n    var color = {\n      r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n      g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n      b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\n    };\n    return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\n    // or output as hex if preferred\n  };\n\n  // const useStyles = makeStyles((theme) => ({\n  //   usageGaugesGroup: {\n  //     marginRight: '20px',\n  //     marginLeft: '5px'\n  //   },\n  //   usageColor: {\n  //     position: 'absolute',\n  //     left: 0,\n  //     animationDuration: '1500ms',\n  //   },\n  //   bottom: {\n  //     color: '#eeeeee1c',\n  //   },\n  // }));\n  // const classes = useStyles();\n\n  return (\n    <div style={{ position: 'relative', display: 'inline-flex', marginRight: '20px', marginLeft: '5px' }}>\n      <CircularProgress\n        variant=\"determinate\"\n        style={{color:'#eeeeee1c'}}\n        size={40}\n        thickness={4}\n        {...props}\n        value={100}\n      />\n      <CircularProgress \n      variant=\"static\" {...props} \n      style={{position: 'absolute', animationDuration: '1500ms', color: getColorForPercentage(props.value / 100)}} />\n      <div style={{position: 'absolute', display: 'flex', top: '0px', left: '0px', bottom: '0px', right: '0px', alignItems:\"center\", justifyContent:\"center\"}}>\n      \n        <Typography variant=\"caption\" component=\"div\" color=\"initial\">{`${Math.round(props.value,)}${props.unit}`}</Typography>\n      </div>\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport { Link, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport DrawerRoutes from '../routes/DrawerRoutes.routes';\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrochip, faMemory, faThermometerHalf, faHdd } from '@fortawesome/free-solid-svg-icons'\nimport Badge from '@material-ui/core/Badge';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LoginPage from './LoginPage.component';\nimport { setHardwareUsage } from '../actions/HardwareUsage.action';\nimport worker from 'workerize-loader!../workers/hwinfo.worker'; //eslint-disable-line import/no-webpack-loader-syntax\nimport PrivateRoute from '../routes/ProtectedUser.routes';\nimport AuthService from \"../services/auth.service\";\nimport { setAuthenticated } from '../actions/Authentication.action';\nimport { setCreateAccountDialogOpen } from '../actions/CreateAccountDialog.action';\nimport { isAdmin } from '../services/isAuthenticated.service';\nimport CircularProgressWithLabel from './CircularProgress.component';\nimport { setLoginFormUsername, setLoginFormPassword } from '../actions/LoginPage.action';\nimport SiemensLogoPetrol from '../assets/sie-logo-petrol-rgb.svg';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    height: '100%'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\n      display: 'none'\n    },\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\n      display: 'flex'\n    },\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    width: `calc(100% - 57px)`,\n    padding: theme.spacing(3),\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\n      paddingBottom: theme.spacing(10),\n      paddingTop: theme.spacing(1),\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n  },\n  bottomNavi: {\n    position: 'fixed',\n    marginTop: '50px',\n    bottom: 0,\n    width: '100%',\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\n      display: 'flex'\n    },\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\n      display: 'none'\n    },\n    [`${theme.breakpoints.up('md')}`]: {\n      display: 'none'\n    },\n    textAlign: 'center',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hardwareUsage: {\n    width: '50px',\n    height: '40px',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    //height: '40px',\n    flexGrow: 1\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  loginButton: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    }\n  },\n  siemensLogo: {\n    paddingRight: '15px',\n    maxHeight: '19px'\n  },\n}));\n\nlet instance;\n\nfunction MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const { t } = useTranslation();\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: portrait)`)\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [bottomNaviValue, setBottomNaviValue] = React.useState(0);\n  const { setHardwareUsage, authenticated, setAuthenticated } = props;\n  let history = useHistory();\n  let location = useLocation();\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  useEffect(() => {\n    const setHardwareStats = (message) => {\n      const { data } = message;\n      if (data.cpuUsage !== undefined) {\n        setHardwareUsage(message.data.cpuUsage, message.data.cpuTemperature, message.data.ramUsage, message.data.diskUsage)\n      }\n    }\n    if (instance === undefined) {\n      instance = worker()\n    }\n    instance.addEventListener(\"message\", message => setHardwareStats(message))\n    return () => {\n      instance.postMessage({ token: null, text: 'stop' })\n      instance.removeEventListener(\"message\", message => setHardwareStats(message))\n      instance.terminate()\n    }\n  }, [setHardwareUsage])\n\n  useEffect(() => {\n    setBottomNaviValue(location.pathname)\n  }, [location]);\n\n  useEffect(() => {\n    if (authenticated === false) {\n      instance.postMessage({ token: null, text: 'stop' })\n    }\n    else {\n      instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start' });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authenticated])\n\n  const signout = () => {\n    setAuthenticated(false)\n    AuthService.logout()\n    handleMenuClose()\n    props.setLoginFormUsername(\"\")\n    props.setLoginFormPassword(\"\")\n    history.push('/login')\n  }\n\n  useEffect(() => {\n    if (matches) {\n      //small viewport\n      setOpen(false)\n      setAnchorEl(null)\n    }\n  }, [matches])\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    handleMobileMenuClose();\n    setAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem component={Link}\n        to=\"/myaccount\"\n        onClick={handleMenuClose}>{t('AccountMenu.MyAccount')}</MenuItem>\n      <MenuItem onClick={() => signout()}>{t('AccountMenu.Logout')}</MenuItem>\n      {isAdmin() ?\n        <div>\n          <Divider />\n          <MenuItem component={Link}\n            onClick={handleMenuClose}\n            to=\"/useraccounts\">{t('AccountMenu.UserAccounts')}</MenuItem>\n        </div>\n        : null\n      }\n    </Menu >\n  );\n\n  const toFixed = (num) => {\n    if (num !== null) {\n      return num.toFixed()\n    }\n    else {\n      return null\n    }\n  }\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.cpuUsage)}%`} color=\"primary\" >\n          <IconButton aria-label=\"cpu usage\" color=\"inherit\" className={classes.hardwareUsage} >\n            <FontAwesomeIcon icon={faMicrochip} />\n          </IconButton>\n        </Badge>\n        <p>CPU</p>\n      </MenuItem>\n      <MenuItem>\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.cpuTemperature)}°C`} color=\"primary\">\n          <IconButton aria-label=\"cpu temperature\" color=\"inherit\" className={classes.hardwareUsage}>\n            <FontAwesomeIcon icon={faThermometerHalf} />\n          </IconButton>\n        </Badge>\n        <p>TEMP</p>\n      </MenuItem>\n      <MenuItem>\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.ramUsage)}%`} color=\"primary\" >\n          <IconButton aria-label=\"memory usage\" color=\"inherit\" className={classes.hardwareUsage}>\n            <FontAwesomeIcon icon={faMemory} />\n          </IconButton>\n        </Badge>\n        <p>MEM</p>\n      </MenuItem>\n      <MenuItem>\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.diskUsage)}%`} color=\"primary\">\n          <IconButton aria-label=\"space usage\" color=\"inherit\" className={classes.hardwareUsage}>\n            <FontAwesomeIcon icon={faHdd} />\n          </IconButton>\n        </Badge>\n        <p>DISK</p>\n      </MenuItem>\n      <Divider />\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>{t('AccountMenu.Profile')}</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Switch>\n        <Route path=\"/login\" render={() => <LoginPage />} />\n        <PrivateRoute path=\"/\">\n          <React.Fragment>\n            <CssBaseline />\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n              })}\n            >\n              <Toolbar>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  edge=\"start\"\n                  className={clsx(classes.menuButton, {\n                    [classes.hide]: open,\n                    [classes.hide]: matches\n                  })}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap className={classes.title}>\n                  SidiroIOT\n                </Typography>\n\n                <div className={classes.sectionDesktop}>\n                  <Typography variant=\"body1\">CPU</Typography>\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuUsage} unit=\"%\" />\n                  <Typography variant=\"body1\">TEMP</Typography>\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuTemperature} unit=\"°C\" />\n                  <Typography variant=\"body1\">MEM</Typography>\n                  <CircularProgressWithLabel value={props.hardwareUsage.ramUsage} unit=\"%\" />\n                  <Typography variant=\"body1\">DISK</Typography>\n                  <CircularProgressWithLabel value={props.hardwareUsage.diskUsage} unit=\"%\" />\n                </div>\n                <IconButton\n                  className={classes.loginButton}\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  aria-controls={menuId}\n                  aria-haspopup=\"true\"\n                  onClick={handleProfileMenuOpen}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <div className={classes.sectionMobile}>\n                  <IconButton\n                    aria-label=\"show more\"\n                    aria-controls={mobileMenuId}\n                    aria-haspopup=\"true\"\n                    onClick={handleMobileMenuOpen}\n                    color=\"inherit\"\n                  >\n                    <MoreIcon />\n                  </IconButton>\n                </div>\n              </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n            <Drawer\n              variant=\"permanent\"\n              className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n              })}\n              classes={{\n                paper: clsx({\n                  [classes.drawerOpen]: open,\n                  [classes.drawerClose]: !open,\n                }),\n              }}\n            >\n              <div className={classes.toolbar}>\n                <img src={SiemensLogoPetrol} alt=\"Siemens Logo\" className={classes.siemensLogo} />\n                <IconButton onClick={handleDrawerClose}>\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n                <ListItem button component={Link} to=\"/\" selected={location.pathname === \"/\" ? true : false} >\n                  <ListItemIcon>\n                    <AccountTreeIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={t('Drawer.Devices')} />\n                </ListItem>\n                {isAdmin() ?\n                  <React.Fragment>\n                    <ListItem button component={Link} to=\"/settings\" selected={location.pathname === \"/settings\" ? true : false} >\n                      <ListItemIcon>\n                        <SettingsIcon />\n                      </ListItemIcon>\n                      <ListItemText primary={t('Drawer.Settings')} />\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/logs\" selected={location.pathname === \"/logs\" ? true : false} >\n                      <ListItemIcon>\n                        <EventNoteIcon />\n                      </ListItemIcon>\n                      <ListItemText primary={t('Drawer.Logs')} />\n                    </ListItem>\n                  </React.Fragment>\n                  : null}\n\n                <Divider />\n                <ListItem button onClick={() => props.setLanguageDialogOpen(true)}>\n                  <ListItemIcon>\n                    <LanguageIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={t('Drawer.Language')} />\n                </ListItem>\n              </List>\n            </Drawer>\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <DrawerRoutes />\n            </main>\n            <BottomNavigation\n              showLabels={false}\n              className={classes.bottomNavi}\n              value={bottomNaviValue}\n            >\n              <BottomNavigationAction value=\"/\" label={t('Drawer.Devices')} icon={<AccountTreeIcon />} component={Link} to=\"/\" />\n              {isAdmin() ? <BottomNavigationAction value=\"/settings\" label={t('Drawer.Settings')} icon={<SettingsIcon />} component={Link} to=\"/settings\" /> : null}\n              {isAdmin() ? <BottomNavigationAction value=\"/logs\" label={t('Drawer.Logs')} icon={<EventNoteIcon />} component={Link} to=\"/logs\" /> : null}\n              <BottomNavigationAction label={t('Drawer.Language')} icon={<LanguageIcon />} onClick={() => props.setLanguageDialogOpen(true)} />\n            </BottomNavigation>\n          </React.Fragment>\n        </PrivateRoute>\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    hardwareUsage: state.HardwareUsageReducer,\n    authenticated: state.AuthenticationReducer.authed\n  }\n}\n\nconst mapDispatchToProps = {\n  setLanguageDialogOpen,\n  setHardwareUsage,\n  setAuthenticated,\n  setCreateAccountDialogOpen,\n  setLoginFormUsername,\n  setLoginFormPassword\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniDrawer);","import { SET_LANGUAGE_DIALOG_OPEN } from '../actions/LanguageDialog.action';\n\nconst initialState = {\n    open: false,\n}\n\nexport const LanguageDialogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_LANGUAGE_DIALOG_OPEN:\n            return {\n                ...state,\n                open: action.open\n            }\n        default:\n            return state\n    }\n}","import { SET_UNIVERSAL_TABS_NAME_INDEX } from '../actions/UniversalTabs.action';\n\nconst initialState = {\n    //tabs instances added dynamically\n}\n\nexport const UniversalTabsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_UNIVERSAL_TABS_NAME_INDEX:\n            return {\n                ...state,\n                [action.name]: action.index\n            }\n        default:\n            return state\n    }\n}","import { SELECT_DEVICE } from '../actions/DevicesList.action';\n\nconst initialState = {\n    selectedDeviceID: '',\n    selectedDeviceType: '',\n}\n\nexport const DevicesListReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SELECT_DEVICE:\n            return {\n                ...state,\n                selectedDeviceID: action.deviceID,\n                selectedDeviceType: action.deviceType\n            }\n        default:\n            return state\n    }\n}","import { SET_LOGIN_FORM_USERNAME, SET_LOGIN_FORM_PASSWORD, SET_LOGIN_FORM_USERNAME_ERROR, SET_LOGIN_FORM_PASSWORD_ERROR } from '../actions/LoginPage.action';\n\nconst initialState = {\n  username: '',\n  usernameError: false,\n  password: '',\n  passwordError: false\n}\n\nexport const LoginPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGIN_FORM_USERNAME:\n      return {\n        ...state,\n        username: action.username,\n      }\n    case SET_LOGIN_FORM_PASSWORD:\n      return {\n        ...state,\n        password: action.password\n      }\n    case SET_LOGIN_FORM_USERNAME_ERROR:\n      return {\n        ...state,\n        usernameError: action.error\n      }\n    case SET_LOGIN_FORM_PASSWORD_ERROR:\n      return {\n        ...state,\n        passwordError: action.error\n      }\n    default:\n      return state\n  }\n}","import { SET_ACCOUNT_FORM_CURRENT_PASSWORD, SET_ACCOUNT_FORM_NEW_PASSWORD, SET_ACCOUNT_FORM_REPEATED_NEW_PASSWORD } from '../actions/AccountPage.action';\n\nconst initialState = {\n  currentPassword: '',\n  newPassword: '',\n  repeatedNewPassword: ''\n\n}\n\nexport const AccountPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACCOUNT_FORM_CURRENT_PASSWORD:\n      return {\n        ...state,\n        currentPassword: action.currentPassword,\n      }\n    case SET_ACCOUNT_FORM_NEW_PASSWORD:\n      return {\n        ...state,\n        newPassword: action.newPassword\n      }\n    case SET_ACCOUNT_FORM_REPEATED_NEW_PASSWORD:\n      return {\n        ...state,\n        repeatedNewPassword: action.repeatedNewPassword\n      }\n    default:\n      return state\n  }\n}","import { SET_HARDWARE_USAGE } from '../actions/HardwareUsage.action';\n\nconst initialState = {\n  cpuUsage: 0,\n  cpuTemperature: 0,\n  ramUsage: 0,\n  diskUsage: 0\n}\n\nexport const HardwareUsageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_HARDWARE_USAGE:\n      return {\n        ...state,\n        cpuUsage: action.cpuUsage,\n        cpuTemperature: action.cpuTemperature,\n        ramUsage: action.ramUsage,\n        diskUsage: action.diskUsage\n      }\n    default:\n      return state\n  }\n}","import { SET_AUTHENTICATED } from '../actions/Authentication.action';\n\nconst initialState = {\n  authed: false,\n}\n\nexport const AuthenticationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authed: action.authenticated,\n      }\n    default:\n      return state\n  }\n}","import {\n  SET_CREATE_ACCOUNT_DIALOG_OPEN,\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD,\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD,\n  SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT,\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR,\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR,\n  SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD,\n  SET_CREATE_ACCOUNT_DIALOG_EDIT_ID\n} from '../actions/CreateAccountDialog.action';\n\nconst initialState = {\n  open: false,\n  type: 'create',\n  //form values\n  name: '',\n  nameError: false,\n  password: '',\n  passwordError: false,\n  newPassword: '',\n  editAccountId: '',\n  permissions: 1\n}\n\nexport const CreateAccountDialog = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CREATE_ACCOUNT_DIALOG_OPEN:\n      return {\n        ...state,\n        open: action.open,\n        type: action.dialogType ? action.dialogType : state.type\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD:\n      return {\n        ...state,\n        name: action.name\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD:\n      return {\n        ...state,\n        password: action.password\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT:\n      return {\n        ...state,\n        permissions: action.permissions\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR:\n      return {\n        ...state,\n        nameError: action.error\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR:\n      return {\n        ...state,\n        passwordError: action.error\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD:\n      return {\n        ...state,\n        newPassword: action.newpassword\n      }\n    case SET_CREATE_ACCOUNT_DIALOG_EDIT_ID:\n      return {\n        ...state,\n        editAccountId: action.id\n      }\n    default:\n      return state\n  }\n}","import { SET_USER_ACCOUNTS_LIST } from '../actions/UserAccountsPage.action';\n\nconst initialState = {\n  accountsList: []\n}\n\nexport const UserAccountsPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_ACCOUNTS_LIST:\n      return {\n        ...state,\n        accountsList: action.list,\n      }\n    default:\n      return state\n  }\n}","import { SET_SNACKBAR_TEXT, SET_SNACKBAR_SHOWN } from '../actions/Snackbar.action';\n\nconst initialState = {\n  text: '',\n  severity: '',\n  shown: false\n}\n\nexport const SnackbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SNACKBAR_TEXT:\n      return {\n        ...state,\n        text: action.text,\n        severity: action.severity\n      }\n    case SET_SNACKBAR_SHOWN:\n      return {\n        ...state,\n        shown: action.shown\n      }\n    default:\n      return state\n  }\n}","import { SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, SET_CONFIRM_DELETE_USER_DIALOG_OPEN } from '../actions/ConfirmDeleteUserDialog.action';\n\nconst initialState = {\n  open: false,\n  username: '',\n  id: ''\n}\n\nexport const ConfirmDeleteUserDialogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CONFIRM_DELETE_USER_DIALOG_OPEN:\n      return {\n        ...state,\n        open: action.open,\n      }\n    case SET_CONFIRM_DELETE_USER_DIALOG_USERNAME:\n      return {\n        ...state,\n        username: action.username,\n        id: action.id\n      }\n    default:\n      return state\n  }\n}","import { SET_ALL_DEVICES, REFRESH_DEVICE_PARAMS, TOGGLE_TABLE_VIEW } from '../actions/DevicesSelectionPage.action';\n\nconst initialState = {\n  devices: {},\n  tableView: 'simple'\n}\n\nexport const DevicesSelectionPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALL_DEVICES:\n      return {\n        ...state,\n        devices: action.devices\n      }\n    case REFRESH_DEVICE_PARAMS:\n      return {\n        ...state,\n        devices: {\n          ...state.devices,\n          [action.params.id]: action.params\n        }\n      }\n    case TOGGLE_TABLE_VIEW:\n      return {\n        ...state,\n        tableView: state.tableView === 'simple' ? 'advanced' : 'simple'\n      }\n    default:\n      return state\n  }\n}","import { SET_CONFIG_FILE, SET_IP_CONFIGURATION } from '../actions/Settings.action';\n\nconst initialState = {\n  file: null,\n  ipconfig: {}\n}\n\nexport const SettingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CONFIG_FILE:\n      return {\n        ...state,\n        file: action.file\n      }\n    case SET_IP_CONFIGURATION:\n      return {\n        ...state,\n        ipconfig: action.ipconfig\n      }\n    default:\n      return state\n  }\n}","import { SET_BACKDROP_OPEN, SET_BACKDROP_CLOSED } from '../actions/Backdrop.action';\n\nconst initialState = {\n  open: false,\n}\n\nexport const BackdropReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_BACKDROP_OPEN:\n      return {\n        ...state,\n        open: true\n      }\n    case SET_BACKDROP_CLOSED:\n      return {\n        ...state,\n        open: false\n      }\n    default:\n      return state\n  }\n}","import {\n    SET_IP_CONFIG_DIALOG_OPEN,\n    SET_IP_CONFIG_DIALOG_IP_ADDRESS,\n    SET_IP_CONFIG_DIALOG_SUBNET_MASK,\n    SET_IP_CONFIG_DIALOG_GATEWAY,\n    SET_IP_CONFIG_DIALOG_DHCP,\n    SET_IP_CONFIG_DIALOG_DNS_PRIMARY,\n    SET_IP_CONFIG_DIALOG_DNS_SECONDARY\n} from '../actions/IPconfigDialog.action';\n\nconst initialState = {\n    //interface being edited name\n    name: '',\n    open: false,\n    ipAddress: '',\n    subnetMask: '',\n    gateway: '',\n    dhcp: false,\n    dnsPrimary: '',\n    dnsSecondary: ''\n}\n\nexport const IPConfigReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_IP_CONFIG_DIALOG_OPEN:\n            return {\n                ...state,\n                open: action.open,\n                name: action.interfaceName ? action.interfaceName : ''\n            }\n        case SET_IP_CONFIG_DIALOG_IP_ADDRESS:\n            return {\n                ...state,\n                ipAddress: action.ipAddress !==undefined ? action.ipAddress : ''\n            }\n        case SET_IP_CONFIG_DIALOG_SUBNET_MASK:\n            return {\n                ...state,\n                subnetMask: action.subnetMask !==undefined ? action.subnetMask : ''\n            }\n        case SET_IP_CONFIG_DIALOG_GATEWAY:\n            return {\n                ...state,\n                gateway: action.gateway !==undefined ? action.gateway : ''\n            }\n        case SET_IP_CONFIG_DIALOG_DHCP:\n            return {\n                ...state,\n                dhcp: action.dhcp\n            }\n        case SET_IP_CONFIG_DIALOG_DNS_PRIMARY:\n            return {\n                ...state,\n                dnsPrimary: action.dnsPrimary !==undefined ? action.dnsPrimary : ''\n            }\n        case SET_IP_CONFIG_DIALOG_DNS_SECONDARY:\n            return {\n                ...state,\n                dnsSecondary: action.dnsSecondary !==undefined ? action.dnsSecondary : ''\n            }\n        default:\n            return state\n    }\n}","import { SET_LOGS } from '../actions/Logs.action';\n\nconst initialState = {\n  logs: null,\n}\n\nexport const LogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGS:\n      return {\n        ...state,\n        logs: action.logs\n      }\n    default:\n      return state\n  }\n}","import { SET_COLLAPSIBLE_TABLE_INSTANCE } from '../actions/CollapsibleTable.action';\n\nconst initialState = {\n    //table instances added dynamically in order to remember open/close collapsed state\n    \n}\n\nexport const CollapsibleTableReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_COLLAPSIBLE_TABLE_INSTANCE:\n            return {\n                ...state,\n                [action.instanceName]: action.collapsedState\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport { LanguageDialogReducer } from './LanguageDialog.reducer';\nimport { UniversalTabsReducer } from './UniversalTabs.reducer';\nimport { DevicesListReducer } from './DevicesList.reducer';\nimport { LoginPageReducer } from './LoginPage.reducer';\nimport { AccountPageReducer } from './AccountPage.reducer';\nimport { HardwareUsageReducer } from './HardwareUsage.reducer';\nimport { AuthenticationReducer } from './Authentication.reducer';\nimport { CreateAccountDialog } from './CreateAccountDialog.reducer';\nimport { UserAccountsPageReducer } from './UserAccountsPage.reducer';\nimport { SnackbarReducer } from './Snackbar.reducer';\nimport { ConfirmDeleteUserDialogReducer } from './ConfirmDeleteUserDialog.reducer';\nimport { DevicesSelectionPageReducer } from './DevicesSelectionPage.reducer';\nimport { SettingsReducer } from './Settings.reducer';\nimport { BackdropReducer } from './Backdrop.reducer';\nimport { IPConfigReducer } from './IPConfig.reducer';\nimport { LogsReducer } from './Logs.reducer';\nimport { CollapsibleTableReducer } from './CollapsibleTable.reducer';\n\nexport default combineReducers({\n  LanguageDialogReducer,\n  UniversalTabsReducer,\n  DevicesListReducer,\n  LoginPageReducer,\n  AccountPageReducer,\n  HardwareUsageReducer,\n  AuthenticationReducer,\n  CreateAccountDialog,\n  UserAccountsPageReducer,\n  SnackbarReducer,\n  ConfirmDeleteUserDialogReducer,\n  DevicesSelectionPageReducer,\n  SettingsReducer,\n  BackdropReducer,\n  IPConfigReducer,\n  LogsReducer,\n  CollapsibleTableReducer\n})","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { resources } from './translations';\n  \nconst options = {\n    // order and from where user language should be detected\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n  \n    // keys or params to lookup language from\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    lookupFromPathIndex: 0,\n    lookupFromSubdomainIndex: 0,\n  \n    // cache user language on\n    caches: ['localStorage', 'cookie'],\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n  \n    // optional htmlTag with lang attribute, the default is:\n    htmlTag: document.documentElement,\n  \n    // only detect languages that are in the whitelist\n    checkWhitelist: true,\n  \n    // fallback to a similar whitelist language\n    // Example 1: Browser language is 'es'\n    // if 'es' is not found in whitelist, first fallback to any whitelist language that starts with 'es-', then fallback to fallbackLng ('es' -> 'es-*' -> fallbackLng)\n    // Example 2: Browser language is 'es-MX'\n    // if 'es-MX' is not found in whitelist, first fallback to 'es', then fallback to 'es-*', then fallback to fallbackLng ('es-MX' -> 'es' -> 'es-*' -> fallbackLng)\n    checkForSimilarInWhitelist: false,\n  \n    // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\n    cookieOptions: {path:'/'}\n  }\n\ni18n\n    .use(LanguageDetector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        detection: options,\n        fallbackLng: \"en\",\n\n        keySeparator: \".\", // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n;","export const resources = {\n  en: {\n    translation: {\n      \"Drawer\": {\n        \"Devices\": \"Devices\",\n        \"Settings\": \"Settings\",\n        \"Language\": \"Language\",\n        \"Logs\": \"Logs\"\n      },\n      \"LanguageSelection\": {\n        \"Label\": \"Choose application language\",\n        \"PolishLanguage\": \"Polish\",\n        \"EnglishLanguage\": \"English\"\n      },\n      \"DevicesSelectionPage\": {\n        \"DevicesTitle\": \"Devices list\",\n        \"StatusConnected\": \"Active\",\n        \"StatusDisconnected\": \"Inactive\",\n        \"Status\": \"Status\",\n        \"Connect\": \"Activate\",\n        \"Disconnect\": \"Deactivate\",\n        \"StatusOnboarded\": \"Onboarded\",\n        \"StatusOffboarded\": \"Offboarded\",\n        \"RefreshAllDevices\": \"Refresh all devices\",\n        \"NoDevicesHeader\": \"No devices\",\n        \"TableSwitchAdvancedView\": \"Advanced view\",\n        \"Tabs\": {\n          \"calcElements\": \"Edge computing\",\n          \"variables\": \"Variables\",\n          \"alerts\": \"Alerts\",\n          \"info\": \"Info\",\n          \"dataToSendConfig\": \"Data sent\",\n          \"eventsToSendConfig\": \"Events sent\"\n        },\n        \"Properties\": {\n          \"id\": \"ID\",\n          \"name\": \"Name\",\n          \"type\": \"Type\",\n          \"ipAddress\": \"IP Address\",\n          \"portNumber\": \"Port number\",\n          \"timeout\": \"Timeout [s]\",\n          \"isActive\": \"Active\",\n          \"isConnected\": \"Connection state\",\n          \"deviceId\": \"Device ID\",\n          \"unit\": \"Unit\",\n          \"sampleTime\": \"Sample time\",\n          \"defaultValue\": \"Default value\",\n          \"offset\": \"Offset\",\n          \"length\": \"Length\",\n          \"read\": \"Read\",\n          \"write\": \"Write\",\n          \"readFCode\": \"Function\",\n          \"writeFCode\": \"Function\",\n          \"unitID\": \"RTU ID\",\n          \"value\": \"Value\",\n          \"variableName\": \"Variable name\",\n          \"factor\": \"Factor\",\n          \"calculationInterval\": \"Calc. interval [s]\",\n          \"highLimit\": \"High limit\",\n          \"texts\": \"Texts\",\n          \"severity\": \"Severity\",\n          \"hysteresis\": \"Hysteresis\",\n          \"timeOnDelay\": \"Time on delay [s]\",\n          \"timeOffDelay\": \"Time off delay [s]\",\n          \"areaType\": \"Area type\",\n          \"dbNumber\": \"DB number\",\n          \"lowLimit\": \"Low limit\",\n          \"slot\": \"Slot\",\n          \"rack\": \"Rack\",\n          \"overflow\": \"Overflow\",\n          \"variableNames\": \"Variable names\",\n          \"alertValues\": \"Alert values\",\n          \"sendingInterval\": \"Sending interval [s]\",\n          \"boarded\": \"Boarded\",\n          \"lastValueTick\": \"Timestamp\",\n          \"elementName\": \"Element name\",\n          \"qualityCodeEnabled\": \"QC enabled\",\n          \"datapointId\": \"Datapoint\",\n          \"entityId\": \"Entity ID\",\n          \"source\": \"Source\",\n          \"sendDataFileInterval\": \"Send data file interval [s]\",\n          \"sendEventFileInterval\": \"Send event file interval [s]\",\n          \"dataStorageSize\": \"Data storage size\",\n          \"eventStorageSize\": \"Event storage size\",\n          \"numberOfDataFilesToSend\": \"Number of data files to send\",\n          \"numberOfEventFilesToSend\": \"Number of event files to send\",\n          \"numberOfSendDataRetries\": \"Number of send data retries\",\n          \"numberOfSendEventRetries\": \"Number of send event retries\",\n          \"memoryType\": \"Memory type\",\n          \"bitNumber\": \"Bit number\",\n          \"byteNumber\": \"Byte number\",\n          \"expression\": \"Expression\",\n          \"parameters\": \"Parameters\",\n          \"FactorCalculator\": \"Factor calculator\",\n          \"AverageCalculator\": \"Average calculator\",\n          \"IncreaseCalculator\": \"Increase calculator\",\n          \"SumCalculator\": \"Sum calculator\",\n          \"ValueFromByteArrayCalculator\": \"Value from Byte array calculator\",\n          \"ExpressionCalculator\": \"Expression calculator\",\n          \"BandwidthLimitAlert\": \"High/low limit alert\",\n          \"ExactValuesAlert\": \"Exact values alert\",\n          \"HighLimitAlert\": \"High limit alert\",\n          \"LowLimitAlert\": \"Low limit alert\",\n          \"CPULoadVariable\": \"CPU Load\",\n          \"DeviceConnectionVariable\": \"Device Connection State\",\n          \"CPUTemperatureVariable\": \"CPU Temperature\",\n          \"DiskUsageVariable\": \"Disk Usage\",\n          \"RAMUsageVariable\": \"Ram Usage\",\n          \"AssociatedVariable\": \"Associated Variable\",\n          \"MBVariablesGroup\": \"Modbus\",\n          \"group\": \"Group\",\n          \"read/write\": \"Read / Write\",\n          \"S7VariablesGroup\": \"S7 Variables\",\n          \"function\": \"Function\",\n          \"genericParameterTableHeader\": \"Parameter\",\n          \"genericValueTableHeader\": \"Value\",\n          \"conversionType\": \"Conversion type\",\n          \"precision\": \"Precision\",\n          \"textEN\": \"Text EN\",\n          \"textPL\": \"Text PL\",\n          \"inactive\": \"Inactive\",\n          \"active\": \"Active\",\n          \"correlationId\": \"Correlation ID\",\n          \"code\": \"Code\",\n          \"acknowledged\": \"Acknowledged\",\n          \"parameter\": \"Parameter\",\n          \"hardwareUsage\": \"Hardware Usage\",\n          \"associatedDeviceIDName\": \"Device name\",\n          \"associatedElementIDName\": \"Variable name\",\n          \"limitType\": \"Limit type\",\n          \"alertValue\": \"Alert value\",\n          \"deviceName\": \"Device name\",\n          \"eventName\": \"Event name\",\n          \"eventType\": \"Event type\",\n          \"groupName\": \"Group name\",\n          \"mqttName\": \"MQTT name\",\n          \"clientId\": \"Client ID\",\n          \"checkStateInterval\": \"Check state interval\",\n          \"model\": \"Model\",\n          \"revision\": \"Revision\",\n          \"tenantName\": \"Tenant name\",\n          \"serialNumber\": \"Serial number\",\n          \"mqttMessagesLimit\": \"MQTT messages limit\"\n        }\n      },\n      \"SettingsPage\": {\n        \"Title\": \"Settings\",\n        \"LoadButton\": \"Download settings file\",\n        \"DropzoneText\": \"Drag & drop or click to upload a file\",\n        \"UploadFile\": \"Load project file\",\n        \"FileName\": \"Name\",\n        \"FileSize\": \"Size\",\n        \"IPConfigTitle\": \"IP configuration\",\n        \"NetworkInterfaces\": \"Network interfaces\",\n        \"Edit\": \"Edit\",\n        \"IPAddress\": \"IP Address\",\n        \"SubnetMask\": \"Subnet mask\",\n        \"Gateway\": \"Gateway\",\n        \"DHCPTrue\": \"Yes\",\n        \"DHCPFalse\": \"No\"\n      },\n      \"LoginPage\": {\n        \"LoginTitle\": \"Please log in\",\n        \"LoginButton\": \"Login\",\n        \"FormLoginTextField\": \"Login\",\n        \"FormPasswordTextField\": \"Password\",\n        \"InvalidLoginPassword\": \"Invalid login/password combination\",\n        \"FormLoginTextFieldHelperText\": \"At least 3 characters\",\n        \"FormPasswordTextFieldHelperText\": \"At least 8 characters\",\n        \"Language\": \"Language\"\n      },\n      \"AccountMenu\": {\n        \"MyAccount\": \"My Account\",\n        \"Logout\": \"Sign out\",\n        \"Profile\": \"Profile\",\n        \"UserAccounts\": \"User accounts\"\n      },\n      \"AccountPage\": {\n        \"Title\": \"Account settings\",\n        \"NameTextField\": \"Name\",\n        \"CurrentPasswordTextField\": \"Current password\",\n        \"NewPasswordTextField\": \"New password\",\n        \"RepeatNewPasswordTextField\": \"Repeat new password\",\n        \"ChangePasswordButton\": \"Change password\",\n        \"PasswordHelperError8characters\": \"Password must consist of at least 8 characters\",\n        \"PasswordHelperErrorNewPasswordsMatch\": \"Passwords doesn't match\",\n        \"Permissions\": \"Permissions\"\n      },\n      \"CreateAccountDialog\": {\n        \"TitleCreate\": \"Create new account\",\n        \"TitleEdit\": \"Edit account\",\n        \"Cancel\": \"Cancel\",\n        \"Create\": \"Create\",\n        \"Update\": \"Update\",\n        \"NameTextField\": \"Name\",\n        \"PasswordTextField\": \"Password\",\n        \"NewPasswordTextField\": \"New password\",\n        \"PermissionsSelect\": \"Permissions\",\n        \"HelperTextName\": \"At least 3 characters\",\n        \"HelperTextPassword\": \"At least 8 characters\",\n        \"AccountBeingEditedSubtitle\": \"You are editing the following account: \"\n      },\n      \"UserAccountsPage\": {\n        \"CreateUser\": \"Create user\",\n        \"NameColumn\": \"Name\",\n        \"PermissionsColumn\": \"Permissions\",\n        \"ActionColumn\": \"Actions\",\n        \"TooltipDelete\": \"Delete\",\n        \"TooltipEdit\": \"Edit\"\n      },\n      \"Snackbar\": {\n        \"SuccessfulUserCreation\": \"User created successfully\",\n        \"SuccessfulUserDeletion\": \"User deleted successfully\",\n        \"SuccessfulUserEdit\": \"User edited successfully\",\n        \"SuccessfulPasswordChange\": \"Password changed successfully\",\n        \"UnsuccessfulPasswordChange\": \"Current password is invalid\",\n        \"UnsuccessfulUserEdit\": \"User editing failed\",\n        \"SuccessfulFileUpload\": \"Project file loaded successfully!\",\n        \"UnsuccessfulFileUpload403\": \"Only admin type accounts have permission to send configuration file\",\n        \"UnsuccessfulFileUpload400\": \"Invalid file contents\",\n        \"UnknownError\": \"Unknown error occured. Try again.\",\n        \"Generic403\": \"Access forbidden\",\n        \"LoginFailed\": \"Login/password combination is invalid\",\n        \"SuccessfulIPConfig\": \"IP Configuration changed successfully\",\n        \"UnsuccessfulIPConfig\": \"Entered data is invalid. Try again.\"\n      },\n      \"ConfirmDeleteUserDialog\": {\n        \"Title\": \"Please confirm deletion. The process is irreversible.\",\n        \"AccountToBeDeleted\": \"The following account is going to be deleted: \",\n        \"Confirm\": \"Confirm\",\n        \"Cancel\": \"Cancel\"\n      },\n      \"IPConfigDialog\": {\n        \"DNSPrimary\": \"Primary DNS\",\n        \"DNSSecondary\": \"Secondary DNS\",\n        \"DisconnectionWarningDhcpFalse\": \"Since you're connected to this IP address, you may lose connection with device and application after changing these settings. We'll try to forward you to new one automatically.\",\n        \"DisconnectionWarningDhcpTrue\": \"Since you're connected to this IP address, you may lose connection with device and application after changing these settings. Your router will allocate IP address automatically, which will then be necessary to enter in browser's address bar.\",\n        \"CurrentHostnameText\": \"Current device/application IP address\",\n        \"ConfirmButton\": \"Confirm\",\n        \"CancelButton\": \"Cancel\",\n        \"ChangeConfiguration\": \"Change configuration\"\n      },\n      \"LogsPage\": {\n        \"Title\": \"Logs\",\n        \"DeviceLogsLabel\": \"Device logs\",\n        \"ShowingLogsSubtitle1\": \"Showing last\",\n        \"ShowingLogsSubtitle2\": \"logs\",\n        \"RefreshLastLogs\": \"Refresh last logs\",\n        \"DownloadAllLogs\": \"Download all logs\"\n      }\n    }\n  },\n  pl: {\n    translation: {\n      \"Drawer\": {\n        \"Devices\": \"Urządzenia\",\n        \"Settings\": \"Ustawienia\",\n        \"Language\": \"Język\",\n        \"Logs\": \"Logi\"\n      },\n      \"LanguageSelection\": {\n        \"Label\": \"Wybierz język aplikacji\",\n        \"PolishLanguage\": \"Polski\",\n        \"EnglishLanguage\": \"Angielski\"\n      },\n      \"DevicesSelectionPage\": {\n        \"DevicesTitle\": \"Lista urządzeń\",\n        \"StatusConnected\": \"Aktywny\",\n        \"StatusDisconnected\": \"Nieaktywny\",\n        \"Status\": \"Status\",\n        \"Connect\": \"Aktywuj\",\n        \"Disconnect\": \"Deaktywuj\",\n        \"StatusOnboarded\": \"Onboarded\",\n        \"StatusOffboarded\": \"Offboarded\",\n        \"RefreshAllDevices\": \"Odśwież wszystkie urządzenia\",\n        \"NoDevicesHeader\": \"Brak urządzeń\",\n        \"TableSwitchAdvancedView\": \"Widok zaawansowany\",\n        \"Tabs\": {\n          \"calcElements\": \"Przetwarzane dane\",\n          \"variables\": \"Zmienne\",\n          \"alerts\": \"Alarmy\",\n          \"info\": \"Informacje\",\n          \"dataToSendConfig\": \"Wysyłane dane\",\n          \"eventsToSendConfig\": \"Wysyłane zdarzenia\"\n        },\n        \"Properties\": {\n          \"id\": \"ID\",\n          \"name\": \"Nazwa\",\n          \"type\": \"Typ\",\n          \"ipAddress\": \"Adres IP\",\n          \"portNumber\": \"Numer portu\",\n          \"timeout\": \"Time-out [s]\",\n          \"isActive\": \"Aktywny\",\n          \"isConnected\": \"Stan połączenia\",\n          \"deviceId\": \"ID urządzenia\",\n          \"unit\": \"Jednostka\",\n          \"sampleTime\": \"Czas próbkow. [s]\",\n          \"defaultValue\": \"Wartość początkowa\",\n          \"offset\": \"Offset\",\n          \"length\": \"Długość\",\n          \"read\": \"Odczyt\",\n          \"write\": \"Zapis\",\n          \"readFCode\": \"Numer funkcji\",\n          \"writeFCode\": \"Numer funkcji\",\n          \"unitID\": \"RTU ID\",\n          \"value\": \"Wartość\",\n          \"variableName\": \"Nazwa zmiennej\",\n          \"factor\": \"Mnożnik\",\n          \"calculationInterval\": \"Interwał przelicz. [s]\",\n          \"highLimit\": \"Limit górny\",\n          \"texts\": \"Tekst\",\n          \"severity\": \"Priorytet\",\n          \"hysteresis\": \"Histereza\",\n          \"timeOnDelay\": \"Opóźnienie zał. [s]\",\n          \"timeOffDelay\": \"Opóźnienie wył. [s]\",\n          \"areaType\": \"Obszar pamięci\",\n          \"dbNumber\": \"Numer DB\",\n          \"lowLimit\": \"Limit dolny\",\n          \"slot\": \"Slot\",\n          \"rack\": \"Rack\",\n          \"overflow\": \"Przepełnienie\",\n          \"variableNames\": \"Nazwy zmiennych\",\n          \"alertValues\": \"Wartości alarmów\",\n          \"sendingInterval\": \"Interwał wysyłania [s]\",\n          \"boarded\": \"Boarded\",\n          \"lastValueTick\": \"Data ost. wartości\",\n          \"elementName\": \"Nazwa elementu\",\n          \"qualityCodeEnabled\": \"Aktywny QC\",\n          \"datapointId\": \"Datapoint\",\n          \"entityId\": \"Entity ID\",\n          \"source\": \"Source\",\n          \"sendDataFileInterval\": \"Interwał wysyłania danych [s]\",\n          \"sendEventFileInterval\": \"Interwał wysyłania zdarzeń [s]\",\n          \"dataStorageSize\": \"Wielkość bufora plików\",\n          \"eventStorageSize\": \"Wielkość bufora zdarzeń\",\n          \"numberOfDataFilesToSend\": \"Liczba wysyłanych plików danych\",\n          \"numberOfEventFilesToSend\": \"Liczba wysyłanych zdarzeń\",\n          \"numberOfSendDataRetries\": \"Liczba prób wysyłania danych\",\n          \"numberOfSendEventRetries\": \"Liczba prób wysyłania zdarzeń\",\n          \"memoryType\": \"Obszar pamięci\",\n          \"bitNumber\": \"Numer bitu\",\n          \"byteNumber\": \"Numer bajtu\",\n          \"expression\": \"Wyrażenie\",\n          \"parameters\": \"Parametry\",\n          \"FactorCalculator\": \"Mnożnik zmiennej\",\n          \"AverageCalculator\": \"Uśrednianie\",\n          \"IncreaseCalculator\": \"Licznik przyrostu\",\n          \"SumCalculator\": \"Sumowanie\",\n          \"ValueFromByteArrayCalculator\": \"Wartości z tablicy bajtów\",\n          \"ExpressionCalculator\": \"Licznik wyrażeń\",\n          \"BandwidthLimitAlert\": \"Alarm górny/dolny\",\n          \"ExactValuesAlert\": \"Alarm dokładnych wartości\",\n          \"HighLimitAlert\": \"Alarm wysoki\",\n          \"LowLimitAlert\": \"Alarm niski\",\n          \"CPULoadVariable\": \"Obciążenie CPU\",\n          \"DeviceConnectionVariable\": \"Stan połączenia urządzenia\",\n          \"CPUTemperatureVariable\": \"Temperatura CPU\",\n          \"DiskUsageVariable\": \"Zajętość dysku\",\n          \"RAMUsageVariable\": \"Użycie pamięci\",\n          \"AssociatedVariable\": \"Zmienna powiązana\",\n          \"MBVariablesGroup\": \"Zmienne Modbus\",\n          \"group\": \"Grupuj\",\n          \"read/write\": \"Odczyt/Zapis\",\n          \"S7VariablesGroup\": \"Zmienne S7\",\n          \"function\": \"Funkcja\",\n          \"genericParameterTableHeader\": \"Parametr\",\n          \"genericValueTableHeader\": \"Wartość\",\n          \"conversionType\": \"Rodzaj konwersji\",\n          \"precision\": \"Precyzja\",\n          \"textEN\": \"Tekst EN\",\n          \"textPL\": \"Tekst PL\",\n          \"inactive\": \"Nieaktywny\",\n          \"active\": \"Aktywny\",\n          \"correlationId\": \"Correlation ID\",\n          \"code\": \"Code\",\n          \"acknowledged\": \"Acknowledged\",\n          \"parameter\": \"Parametr\",\n          \"hardwareUsage\": \"Użycie sprzętu\",\n          \"associatedDeviceIDName\": \"Nazwa urządzenia\",\n          \"associatedElementIDName\": \"Nazwa zmiennej\",\n          \"limitType\": \"Rodzaj limitu\",\n          \"alertValue\": \"Wartości alarmu\",\n          \"deviceName\": \"Nazwa urządzenia\",\n          \"eventName\": \"Nazwa zdarzenia\",\n          \"eventType\": \"Typ zdarzenia\",\n          \"groupName\": \"Nazwa grupy\",\n          \"mqttName\": \"Nazwa MQTT\",\n          \"clientId\": \"ID klienta\",\n          \"checkStateInterval\": \"Interwał sprawdzania stanu\",\n          \"model\": \"Model\",\n          \"revision\": \"Rewizja\",\n          \"tenantName\": \"Nazwa tenanta\",\n          \"serialNumber\": \"Numer seryjny\",\n          \"mqttMessagesLimit\": \"Limit wiadomości MQTT\"\n        }\n      },\n      \"SettingsPage\": {\n        \"Title\": \"Ustawienia\",\n        \"LoadButton\": \"Pobierz plik ustawień\",\n        \"DropzoneText\": \"Przeciągnij i upuść tutaj lub kliknij, aby wczytać plik\",\n        \"UploadFile\": \"Załaduj plik projektu\",\n        \"FileName\": \"Nazwa\",\n        \"FileSize\": \"Rozmiar\",\n        \"IPConfigTitle\": \"Konfiguracja IP\",\n        \"NetworkInterfaces\": \"Interfejsy sieciowe\",\n        \"Edit\": \"Edytuj\",\n        \"IPAddress\": \"Adres IP\",\n        \"SubnetMask\": \"Maska podsieci\",\n        \"Gateway\": \"Brama domyślna\",\n        \"DHCPTrue\": \"Tak\",\n        \"DHCPFalse\": \"Nie\"\n      },\n      \"LoginPage\": {\n        \"LoginTitle\": \"Zaloguj się\",\n        \"LoginButton\": \"Zaloguj\",\n        \"FormLoginTextField\": \"Login\",\n        \"FormPasswordTextField\": \"Hasło\",\n        \"InvalidLoginPassword\": \"Nieprawidłowa nazwa lub hasło\",\n        \"FormLoginTextFieldHelperText\": \"Co najmniej 3 znaki\",\n        \"FormPasswordTextFieldHelperText\": \"Co najmniej 8 znaków\",\n        \"Language\": \"Język\"\n      },\n      \"AccountMenu\": {\n        \"MyAccount\": \"Moje konto\",\n        \"Logout\": \"Wyloguj\",\n        \"Profile\": \"Profil\",\n        \"UserAccounts\": \"Konta użytkowników\"\n      },\n      \"AccountPage\": {\n        \"Title\": \"Ustawienia konta\",\n        \"NameTextField\": \"Nazwa\",\n        \"CurrentPasswordTextField\": \"Aktualne hasło\",\n        \"NewPasswordTextField\": \"Nowe hasło\",\n        \"RepeatNewPasswordTextField\": \"Potwórz nowe hasło\",\n        \"ChangePasswordButton\": \"Zmień hasło\",\n        \"PasswordHelperError8characters\": \"Hasło musi się składać z co najmniej 8 znaków\",\n        \"PasswordHelperErrorNewPasswordsMatch\": \"Podane hasła nie są takie same\",\n        \"Permissions\": \"Uprawnienia\"\n      },\n      \"CreateAccountDialog\": {\n        \"TitleCreate\": \"Utwórz nowe konto\",\n        \"TitleEdit\": \"Edytuj konto\",\n        \"Cancel\": \"Anuluj\",\n        \"Create\": \"Utwórz\",\n        \"Update\": \"Aktualizuj\",\n        \"NameTextField\": \"Nazwa\",\n        \"PasswordTextField\": \"Hasło\",\n        \"NewPasswordTextField\": \"Nowe hasło\",\n        \"PermissionsSelect\": \"Uprawnienia\",\n        \"HelperTextName\": \"Co najmniej 3 znaki\",\n        \"HelperTextPassword\": \"Co najmniej 8 znaków\",\n        \"AccountBeingEditedSubtitle\": \"Edytujesz następujące konto: \"\n      },\n      \"UserAccountsPage\": {\n        \"CreateUser\": \"Utwórz użytkownika\",\n        \"NameColumn\": \"Nazwa\",\n        \"PermissionsColumn\": \"Uprawnienia\",\n        \"ActionColumn\": \"Akcje\",\n        \"TooltipDelete\": \"Usuń\",\n        \"TooltipEdit\": \"Edytuj\"\n      },\n      \"Snackbar\": {\n        \"SuccessfulUserCreation\": \"Użytkownik pomyślnie utworzony\",\n        \"SuccessfulUserDeletion\": \"Użytkownik pomyślnie usunięty\",\n        \"SuccessfulUserEdit\": \"Edytowano pomyślnie\",\n        \"SuccessfulPasswordChange\": \"Zmieniono hasło pomyślnie\",\n        \"UnsuccessfulPasswordChange\": \"Aktualne hasło jest nieprawidłowe\",\n        \"UnsuccessfulUserEdit\": \"Nie powiodła się edycja użytkownika\",\n        \"SuccessfulFileUpload\": \"Plik projektu wczytany pomyślnie!\",\n        \"UnsuccessfulFileUpload403\": \"Tylko konta admina mają uprawnienia do wysyłania pliku konfiguracyjnego\",\n        \"UnsuccessfulFileUpload400\": \"Nieprawidłowa zawartość pliku\",\n        \"UnknownError\": \"Wystąpił nieznany błąd. Spróbuj ponownie.\",\n        \"Generic403\": \"Brak uprawnień\",\n        \"LoginFailed\": \"Podany login i/lub hasło są nieprawidłowe\",\n        \"SuccessfulIPConfig\": \"Konfiguracja IP przebiegła pomyślnie\",\n        \"UnsuccessfulIPConfig\": \"Wprowadzone dane są nieprawidłowe. Spróbuj ponownie.\"\n      },\n      \"ConfirmDeleteUserDialog\": {\n        \"Title\": \"Proszę potwierdzić usunięcie. Ten proces jest nieodwracalny.\",\n        \"AccountToBeDeleted\": \"Zostanie usunięte następujące konto: \",\n        \"Confirm\": \"Potwierdź\",\n        \"Cancel\": \"Anuluj\"\n      },\n      \"IPConfigDialog\": {\n        \"DNSPrimary\": \"Podstawowy DNS\",\n        \"DNSSecondary\": \"Alternatywny DNS\",\n        \"DisconnectionWarningDhcpFalse\": \"Ponieważ jesteś aktualnie połączony z tym adresem IP, po zmianie tych ustawień możesz stracić połączenie z urządzeniem. Spróbujemy Cię automatycznie przekierować na nowy adres IP.\",\n        \"DisconnectionWarningDhcpTrue\": \"Ponieważ jesteś aktualnie połączony z tym adresem IP, po zmianie tych ustawień możesz stracić połączenie z urządzeniem. Twój router automatycznie przydzieli nowy adres, który należy wprowadzić w pasek adresu przeglądarki by wznowić połączenie.\",\n        \"CurrentHostnameText\": \"Aktualny adres IP urządzenia/aplikacji\",\n        \"ConfirmButton\": \"Potwierdź\",\n        \"CancelButton\": \"Anuluj\",\n        \"ChangeConfiguration\": \"Zmień konfigurację\"\n      },\n      \"LogsPage\": {\n        \"Title\": \"Logi\",\n        \"DeviceLogsLabel\": \"Logi urządzenia\",\n        \"ShowingLogsSubtitle1\": \"Wyświetlanych jest\",\n        \"ShowingLogsSubtitle2\": \"ostatnich logów\",\n        \"RefreshLastLogs\": \"Odśwież ostatnie logi\",\n        \"DownloadAllLogs\": \"Pobierz wszystkie logi\"\n      }\n    }\n  }\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { blue } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  title: {\n    textAlign: 'center'\n  }\n});\n\n function LanguageDialog(props) {\n  const classes = useStyles();\n  const { t, i18n } = useTranslation();\n  const chooseLanguage = (language) => {\n    props.setLanguageDialogOpen(false)\n    i18n.changeLanguage(language)\n  }\n\n  return (\n    <Dialog onClose={()=>props.setLanguageDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={props.open} fullWidth={true} maxWidth=\"sm\">\n      <DialogTitle className={classes.title} id=\"simple-dialog-title\">{t('LanguageSelection.Label')}</DialogTitle>\n      <List>\n        <ListItem button onClick={()=>chooseLanguage('pl')}>\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n              PL\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={t('LanguageSelection.PolishLanguage')} />\n        </ListItem>\n        <ListItem button onClick={()=>chooseLanguage('en')}>\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n              EN\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={t('LanguageSelection.EnglishLanguage')} />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    open: state.LanguageDialogReducer.open\n  }\n}\n\nconst mapDispatchToProps = {\n  setLanguageDialogOpen,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageDialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { connect } from 'react-redux';\nimport {\n  setCreateAccountDialogOpen,\n  setCreateAccountDialogNameTextfield,\n  setCreateAccountDialogPasswordTextfield,\n  setCreateAccountDialogPermissionsSelect,\n  setCreateAccountDialogNameTextfieldError,\n  setCreateAccountDialogPasswordTextfieldError,\n  setCreateAccountDialogNewpasswordTextfield\n} from '../actions/CreateAccountDialog.action';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useTranslation } from 'react-i18next';\nimport UserService from '../services/user.service';\nimport AuthService from '../services/auth.service';\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    width: '100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  form: {\n    '& > *': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nfunction CreateAccountDialog({ open,\n  type,\n  name,\n  nameError,\n  password,\n  passwordError,\n  permissions,\n  editAccountId,\n  setCreateAccountDialogOpen,\n  setCreateAccountDialogNameTextfield,\n  setCreateAccountDialogPasswordTextfield,\n  setCreateAccountDialogPermissionsSelect,\n  setCreateAccountDialogNameTextfieldError,\n  setCreateAccountDialogPasswordTextfieldError,\n  setSnackbarShown,\n  setSnackbarText,\n  setUserAccountsList }) {\n\n  const classes = useStyles();\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  const handleChange = (event) => {\n    const val = event.target.value;\n    const name = event.target.name;\n    setCreateAccountDialogPasswordTextfieldError(false)\n    setCreateAccountDialogNameTextfieldError(false)\n\n    if (name === 'name') {\n      setCreateAccountDialogNameTextfield(val)\n    }\n    else if (name === 'password') {\n      setCreateAccountDialogPasswordTextfield(val)\n    }\n    else if (name === 'newpassword') {\n      setCreateAccountDialogNewpasswordTextfield(val)\n    }\n    else {\n      setCreateAccountDialogPermissionsSelect(val)\n    }\n  }\n\n  const disableButton = () => {\n    if (type === 'edit') {\n      if (password.length > 0 && password.length < 8) {\n        return true\n      }\n    }\n    else {\n      if (password.length < 8 || name.length < 3) {\n        return true\n      }\n    }\n    return false\n  }\n\n  const register = () => {\n    UserService.register(name, password, permissions).then(res => {\n      if (res.status === 200) {\n        setSnackbarText(t('Snackbar.SuccessfulUserCreation'), 'success')\n        setSnackbarShown(true)\n        setCreateAccountDialogPasswordTextfield('')\n        setCreateAccountDialogNameTextfield('')\n        setCreateAccountDialogOpen(false)\n        UserService.getAllAccounts().then(res => {\n          setUserAccountsList(res.data)\n        })\n      }\n      else if (res.status === 403) {\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\n        setSnackbarShown(true)\n        setCreateAccountDialogPasswordTextfield('')\n        setCreateAccountDialogNameTextfield('')\n        setCreateAccountDialogOpen(false)\n      }\n      else {\n        setCreateAccountDialogNameTextfieldError(true)\n        setCreateAccountDialogPasswordTextfieldError(true)\n      }\n    })\n  }\n\n  const edit = () => {\n    UserService.editAccount(editAccountId, name, permissions, password === '' ? false : password).then(res => {\n      if (res.status === 200) {\n        setSnackbarText(t('Snackbar.SuccessfulUserEdit'), 'success')\n        setCreateAccountDialogPasswordTextfield('')\n        setCreateAccountDialogNameTextfield('')\n        setSnackbarShown(true)\n        setCreateAccountDialogOpen(false)\n        UserService.getAllAccounts().then(res => {\n          setUserAccountsList(res.data)\n        })\n        //if edited account is currently logged in\n        if (res._id === AuthService.getCurrentUser()._id) {\n          AuthService.logout()\n          history.push('/login')\n        }\n      }\n      else if (res.status === 403) {\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\n        setSnackbarShown(true)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\n        setSnackbarShown(true)\n      }\n    })\n  }\n\n  const cancel = () => {\n    setCreateAccountDialogOpen(false)\n    setCreateAccountDialogPasswordTextfield('')\n    setCreateAccountDialogNameTextfield('')\n  }\n\n  return (\n    <Dialog open={open} onClose={() => setCreateAccountDialogOpen(false)} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">{type === 'create' ? t('CreateAccountDialog.TitleCreate') : t('CreateAccountDialog.TitleEdit')}</DialogTitle>\n      <DialogContent>\n        {type === 'edit' ?\n          <DialogContentText>\n            {t('CreateAccountDialog.AccountBeingEditedSubtitle')}<strong>{name}</strong>\n          </DialogContentText>\n          : null}\n        <form className={classes.form}>\n          {AuthService.getCurrentUser() !== null ?\n            <div>\n              <TextField\n                disabled={type === 'edit' ? true : false}\n                error={nameError}\n                helperText={nameError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormLoginTextFieldHelperText')}\n                onChange={handleChange}\n                name=\"name\"\n                value={name}\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label={t('CreateAccountDialog.NameTextField')}\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                error={passwordError}\n                helperText={passwordError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormPasswordTextFieldHelperText')}\n                onChange={handleChange}\n                autoComplete=\"off\"\n                value={password}\n                name=\"password\"\n                margin=\"dense\"\n                id=\"password\"\n                label={t('CreateAccountDialog.PasswordTextField')}\n                type=\"password\"\n                fullWidth\n              />\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"permissions\">{t('CreateAccountDialog.PermissionsSelect')}</InputLabel>\n                <Select\n                  fullWidth\n                  labelId=\"permissions\"\n                  id=\"permissions-select\"\n                  name=\"permissions\"\n                  value={permissions}\n                  onChange={handleChange}\n                >\n                  {AuthService.getCurrentUser().permissions >= 3 ? <MenuItem value={1}>User</MenuItem> : null}\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={3}>Admin</MenuItem> : null}\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={7}>SuperAdmin</MenuItem> : null}\n                </Select>\n              </FormControl>\n            </div>\n            : null}\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => cancel()} color=\"primary\">\n          {t('CreateAccountDialog.Cancel')}\n        </Button>\n        <Button disabled={disableButton()} onClick={() => type === 'edit' ? edit() : register()} color=\"primary\">\n          {type === 'create' ? t('CreateAccountDialog.Create') : t('CreateAccountDialog.Update')}\n        </Button>\n      </DialogActions>\n    </Dialog >\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    open: state.CreateAccountDialog.open,\n    type: state.CreateAccountDialog.type,\n    name: state.CreateAccountDialog.name,\n    nameError: state.CreateAccountDialog.nameError,\n    password: state.CreateAccountDialog.password,\n    passwordError: state.CreateAccountDialog.passwordError,\n    permissions: state.CreateAccountDialog.permissions,\n    editAccountId: state.CreateAccountDialog.editAccountId\n  }\n}\n\nconst mapDispatchToProps = {\n  setCreateAccountDialogOpen,\n  setCreateAccountDialogNameTextfield,\n  setCreateAccountDialogPasswordTextfield,\n  setCreateAccountDialogPermissionsSelect,\n  setCreateAccountDialogNameTextfieldError,\n  setCreateAccountDialogPasswordTextfieldError,\n  setSnackbarText,\n  setSnackbarShown,\n  setUserAccountsList,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountDialog);","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { setSnackbarShown } from '../actions/Snackbar.action';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nfunction CustomizedSnackbars(props) {\n  \n  const classes = useStyles();\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setSnackbarShown(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={props.shown} autoHideDuration={5000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={props.severity}>\n          {props.text}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    text: state.SnackbarReducer.text,\n    shown: state.SnackbarReducer.shown,\n    severity: state.SnackbarReducer.severity\n  }\n}\n\nconst mapDispatchToProps = {\n  setSnackbarShown\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedSnackbars);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\nimport UserService from '../services/user.service';\nimport AuthService from '../services/auth.service';\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from \"react-router-dom\";\n\nfunction AlertDialog(props) {\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  const deletePerm = () => {\n    UserService.deleteAccount(props.accountIdToBeDeleted).then(res => {\n      if (res.status === 200) {\n        props.setConfirmDeleteUserDialogOpen(false);\n        props.setSnackbarText(t('Snackbar.SuccessfulUserDeletion'));\n        props.setSnackbarShown(true);\n        //if edited account is currently logged in\n        if (props.accountIdToBeDeleted === AuthService.getCurrentUser()._id) {\n          AuthService.logout()\n          history.push('/login')\n        }\n        else {\n          UserService.getAllAccounts().then(res => {\n            props.setUserAccountsList(res.data)\n          })\n        }\n      }\n      else if (res.status === 403) {\n        props.setConfirmDeleteUserDialogOpen(false);\n        props.setSnackbarText(t('Snackbar.Generic403'));\n        props.setSnackbarShown(true);\n      }\n      else {\n        props.setConfirmDeleteUserDialogOpen(false);\n        props.setSnackbarText(t('Snackbar.UnknownError'));\n        props.setSnackbarShown(true);\n      }\n    })\n  }\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.setConfirmDeleteUserDialogOpen(false)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{t('ConfirmDeleteUserDialog.Title')}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {t('ConfirmDeleteUserDialog.AccountToBeDeleted')}<strong>{props.accountNameToBeDeleted}</strong>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => deletePerm()} color=\"secondary\">\n          {t('ConfirmDeleteUserDialog.Confirm')}\n        </Button>\n        <Button onClick={() => props.setConfirmDeleteUserDialogOpen(false)} color=\"primary\" autoFocus>\n          {t('ConfirmDeleteUserDialog.Cancel')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    open: state.ConfirmDeleteUserDialogReducer.open,\n    accountNameToBeDeleted: state.ConfirmDeleteUserDialogReducer.username,\n    accountIdToBeDeleted: state.ConfirmDeleteUserDialogReducer.id\n  }\n}\n\nconst mapDispatchToProps = {\n  setConfirmDeleteUserDialogOpen,\n  setConfirmDeleteUserDialogUsername,\n  setUserAccountsList,\n  setSnackbarText,\n  setSnackbarShown\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialog);","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nfunction SimpleBackdrop({ open }) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    open: state.BackdropReducer.open,\n  }\n}\n\n\nexport default connect(mapStateToProps)(SimpleBackdrop)","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  setSnackbarText,\n  setSnackbarShown\n} from '../actions/Snackbar.action';\nimport {\n  setBackdropOpen,\n  setBackdropClosed\n} from '../actions/Backdrop.action';\nimport { connect } from 'react-redux';\nimport {\n  setIpConfigDialogOpen,\n  setIpConfigDialogIpAddress,\n  setIpConfigDialogSubnetMask,\n  setIpConfigDialogGateway,\n  setIpConfigDialogDHCP,\n  setIpConfigDialogDNSPrimary,\n  setIpConfigDialogDNSSecondary\n} from '../actions/IPconfigDialog.action';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IPConfigService from '../services/ipconfig.service';\nimport { setIPConfiguration } from '../actions/Settings.action';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    width: '100%'\n  },\n  form: {\n    '& > *': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n  },\n  visible: {\n    display: 'inline-flex'\n  },\n  invisible: {\n    display: 'none'\n  },\n  disconnectionWarning: {\n    color: 'red'\n  }\n})\n)\n\nfunction IPConfigDialog({ open,\n  ipAddress,\n  subnetMask,\n  gateway,\n  name,\n  dhcp,\n  dnsPrimary,\n  dnsSecondary,\n  ipConfig,\n  setIpConfigDialogOpen,\n  setIpConfigDialogIpAddress,\n  setIpConfigDialogSubnetMask,\n  setIpConfigDialogGateway,\n  setIpConfigDialogDHCP,\n  setIpConfigDialogDNSPrimary,\n  setIpConfigDialogDNSSecondary,\n  setBackdropOpen,\n  setBackdropClosed,\n  setSnackbarText,\n  setSnackbarShown,\n  setIPConfiguration\n}) {\n\n  useEffect(() => {\n    if (ipConfig[name] !== undefined) {\n      setIpConfigDialogIpAddress(ipConfig[name].ipAddress !== undefined ? ipConfig[name].ipAddress : '')\n      setIpConfigDialogSubnetMask(ipConfig[name].subnetMask !== undefined ? ipConfig[name].subnetMask : '')\n      setIpConfigDialogGateway(ipConfig[name].gateway !== undefined ? ipConfig[name].gateway : '')\n      setIpConfigDialogDHCP(ipConfig[name].dhcp !== undefined ? ipConfig[name].dhcp : false)\n      setIpConfigDialogDNSPrimary(ipConfig[name].dns !== undefined && ipConfig[name].dns[0] !== undefined ? ipConfig[name].dns[0] : '')\n      setIpConfigDialogDNSSecondary(ipConfig[name].dns !== undefined && ipConfig[name].dns[1] !== undefined ? ipConfig[name].dns[1] : '')\n    }\n  }, [open, setIpConfigDialogIpAddress, setIpConfigDialogSubnetMask, setIpConfigDialogGateway, setIpConfigDialogDHCP, setIpConfigDialogDNSPrimary, setIpConfigDialogDNSSecondary, ipConfig, name])\n  const classes = useStyles();\n  const { t } = useTranslation()\n\n  const handleChange = (event) => {\n    const val = event.target.value;\n    const name = event.target.name;\n\n    switch (name) {\n      case 'ip-address':\n        setIpConfigDialogIpAddress(val)\n        break;\n      case 'subnet-mask':\n        setIpConfigDialogSubnetMask(val)\n        break;\n      case 'gateway':\n        setIpConfigDialogGateway(val)\n        break;\n      case 'dhcp':\n        setIpConfigDialogDHCP(event.target.checked)\n        break;\n      case 'dns-primary':\n        setIpConfigDialogDNSPrimary(val)\n        break;\n      case 'dns-secondary':\n        setIpConfigDialogDNSSecondary(val)\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  const apiWithTimeout = (httpReq, milliseconds) => {\n    setIpConfigDialogOpen(false)\n    setBackdropOpen()\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        reject(new Error(\"Data fetch failed in \" + milliseconds + \" ms\"))\n      }, milliseconds)\n      httpReq.then(res => { resolve(res) }, err => { reject(err) })\n    })\n  };\n\n  const setIpConfig = () => {\n    let config = {\n      name: name,\n      dhcp: dhcp,\n      dns: []\n    }\n    if (dnsPrimary !== '') {\n      config = {\n        ...config,\n        dns: [...config.dns, dnsPrimary]\n      }\n    }\n    if (dnsSecondary !== '') {\n      config = {\n        ...config,\n        dns: [...config.dns, dnsSecondary]\n      }\n    }\n\n    if (dhcp === false) {\n      config = {\n        ...config,\n        ipAddress: ipAddress,\n        subnetMask: subnetMask,\n        gateway: gateway\n      }\n    }\n\n    apiWithTimeout(IPConfigService.setIpConfig(name, config), 10000).then(res => {\n      IPConfigService.getIpConfig().then(res => {\n        if (res.status === 200) {\n          setIPConfiguration(res.data)\n        }\n      })\n      setBackdropClosed()\n      if (res.status === 200) {\n        setSnackbarText(t('Snackbar.SuccessfulIPConfig'), 'success')\n        setSnackbarShown(true)\n      }\n      else if (res.status === 400) {\n        setSnackbarText(t('Snackbar.UnsuccessfulIPConfig'), 'error')\n        setSnackbarShown(true)\n      }\n      else {\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\n        setSnackbarShown(true)\n      }\n    }).catch(() => {\n      //if changing interface you're connected to\n      if (ipConfig[name].ipAddress === window.location.hostname) {\n        if (dhcp !== true) {\n          window.location.href = window.location.port !== \"\" ? `http://${ipAddress}:${window.location.port}` : `http://${ipAddress}`\n        }\n        else {\n          window.location.reload()\n        }\n      }\n      else {\n        window.location.reload()\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Dialog open={open} onClose={() => setIpConfigDialogOpen(false)} aria-labelledby=\"form-dialog-title\" >\n        <DialogTitle id=\"form-dialog-title\">{t('IPConfigDialog.ChangeConfiguration')}</DialogTitle>\n        <DialogContent>\n          {ipConfig[name] !== undefined && ipConfig[name].ipAddress !== undefined && ipConfig[name].ipAddress === window.location.hostname ?\n            <DialogContentText className={classes.disconnectionWarning}>\n              {dhcp === false ? t('IPConfigDialog.DisconnectionWarningDhcpFalse') : t('IPConfigDialog.DisconnectionWarningDhcpTrue')}\n            </DialogContentText>\n            : null}\n          <DialogContentText>\n            {`${t('IPConfigDialog.CurrentHostnameText')}: ${window.location.origin}`}\n          </DialogContentText>\n          <form className={classes.form}>\n            <div>\n              <FormGroup row>\n                <FormControlLabel\n                  control={<Checkbox checked={dhcp} onChange={handleChange} name=\"dhcp\" />}\n                  label=\"DHCP\"\n                />\n              </FormGroup>\n              <TextField\n                className={dhcp ? classes.invisible : classes.visible}\n                autoFocus\n                value={ipAddress}\n                margin=\"dense\"\n                id=\"ip-address\"\n                name=\"ip-address\"\n                label={t('SettingsPage.IPAddress')}\n                type=\"text\"\n                onChange={handleChange}\n                fullWidth\n              />\n              <TextField\n                className={dhcp ? classes.invisible : classes.visible}\n                value={subnetMask}\n                margin=\"dense\"\n                id=\"subnet-mask\"\n                name=\"subnet-mask\"\n                label={t('SettingsPage.SubnetMask')}\n                type=\"text\"\n                onChange={handleChange}\n                fullWidth\n              />\n              <TextField\n                className={dhcp ? classes.invisible : classes.visible}\n                value={gateway}\n                margin=\"dense\"\n                id=\"gateway\"\n                name=\"gateway\"\n                label={t('SettingsPage.Gateway')}\n                type=\"text\"\n                onChange={handleChange}\n                fullWidth\n              />\n              <TextField\n                className={dhcp ? classes.invisible : classes.visible}\n                value={dnsPrimary}\n                margin=\"dense\"\n                id=\"dns-primary\"\n                name=\"dns-primary\"\n                label={t('IPConfigDialog.DNSPrimary')}\n                type=\"text\"\n                onChange={handleChange}\n                fullWidth\n              />\n              <TextField\n                className={dhcp ? classes.invisible : classes.visible}\n                value={dnsSecondary}\n                margin=\"dense\"\n                id=\"dns-secondary\"\n                name=\"dns-secondary\"\n                label={t('IPConfigDialog.DNSSecondary')}\n                type=\"text\"\n                onChange={handleChange}\n                fullWidth\n              />\n\n            </div>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIpConfigDialogOpen(false)} color=\"primary\">\n            {t('IPConfigDialog.CancelButton')}\n          </Button>\n          <Button onClick={() => setIpConfig()} color=\"primary\">\n            {t('IPConfigDialog.ConfirmButton')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    open: state.IPConfigReducer.open,\n    name: state.IPConfigReducer.name,\n    ipAddress: state.IPConfigReducer.ipAddress,\n    subnetMask: state.IPConfigReducer.subnetMask,\n    gateway: state.IPConfigReducer.gateway,\n    dhcp: state.IPConfigReducer.dhcp,\n    dnsPrimary: state.IPConfigReducer.dnsPrimary,\n    dnsSecondary: state.IPConfigReducer.dnsSecondary,\n    ipConfig: state.SettingsReducer.ipconfig\n  }\n}\n\nconst mapDispatchToProps = {\n  setSnackbarText,\n  setSnackbarShown,\n  setBackdropOpen,\n  setBackdropClosed,\n  setIpConfigDialogOpen,\n  setIpConfigDialogIpAddress,\n  setIpConfigDialogSubnetMask,\n  setIpConfigDialogGateway,\n  setIpConfigDialogDHCP,\n  setIpConfigDialogDNSPrimary,\n  setIpConfigDialogDNSSecondary,\n  setIPConfiguration\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IPConfigDialog);","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  createMuiTheme,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport Drawer from './components/Drawer.component';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/Root.reducer\";\nimport './i18n';\nimport LanguageDialog from './components/LanguageSelectionDialog.component';\nimport CreateAccountDialog from './components/CreateAccountDialog.component';\nimport Snackbar from './components/Snackbar.component';\nimport ConfirmDeleteUserDialog from './components/ConfirmDeleteUserDialog.component';\nimport Backdrop from './components/Backdrop.component';\nimport IPConfigDialog from './components/IPConfigDialog.component';\n\nconst store = createStore(rootReducer);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#41aaaa',\n      main: '#009999',\n      dark: '#00646e',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Drawer />\n          </Router>\n          <CreateAccountDialog />\n          <ConfirmDeleteUserDialog />\n          <LanguageDialog />\n          <IPConfigDialog />\n          <Snackbar />\n          <Backdrop />\n        </Provider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}