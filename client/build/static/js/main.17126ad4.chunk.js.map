{"version":3,"sources":["workers/hwinfo.worker.js","services/file.service.js","actions/Snackbar.action.js","components/Dropzone.component.js","components/Settings.component.js","actions/DevicesList.action.js","components/DevicesList.component.js","actions/UniversalTabs.action.js","components/UniversalTabs.component.js","components/UniversalTable.component.js","actions/DevicesSelectionPage.action.js","components/DevicesSelectionPage.component.js","mock/index.mock.js","actions/AccountPage.action.js","services/user.service.js","components/AccountPage.component.js","actions/UserAccountsPage.action.js","actions/CreateAccountDialog.action.js","actions/ConfirmDeleteUserDialog.action.js","services/auth.service.js","components/UserAccountsPage.component.js","services/isAuthenticated.service.js","actions/Authentication.action.js","routes/ProtectedAdmin.routes.js","routes/DrawerRoutes.routes.js","actions/LanguageDialog.action.js","actions/LoginPage.action.js","components/LoginPage.component.js","actions/HardwareUsage.action.js","routes/protected.routes.js","components/CircularProgress.component.js","components/Drawer.component.js","reducers/LanguageDialog.reducer.js","reducers/UniversalTabs.reducer.js","reducers/DevicesList.reducer.js","reducers/LoginPage.reducer.js","reducers/AccountPage.reducer.js","reducers/HardwareUsage.reducer.js","reducers/Authentication.reducer.js","reducers/CreateAccountDialog.reducer.js","reducers/UserAccountsPage.reducer.js","reducers/Snackbar.reducer.js","reducers/ConfirmDeleteUserDialog.reducer.js","reducers/DevicesSelectionPage.reducer.js","reducers/Root.reducer.js","i18n.js","translations.js","components/LanguageSelectionDialog.component.js","components/CreateAccountDialog.component.js","components/Snackbar.component.js","components/ConfirmDeleteUserDialog.component.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","file","formData","FormData","append","fetch","method","headers","JSON","parse","localStorage","getItem","accessToken","body","response","status","SET_SNACKBAR_TEXT","SET_SNACKBAR_SHOWN","setSnackbarText","text","severity","type","setSnackbarShown","shown","useStyles","makeStyles","theme","dropzoneText","color","mapDispatchToProps","connect","classes","t","useTranslation","onDrop","useCallback","acceptedFiles","FileService","uploadFile","then","res","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","activeStyle","acceptStyle","rejectStyle","style","useMemo","className","Typography","variant","Settings","Fragment","Grid","container","spacing","item","xs","sm","md","lg","Button","fullWidth","SELECT_DEVICE","root","width","selectDevice","deviceIndex","deviceName","deviceType","state","selectedDevice","DevicesListReducer","props","List","component","aria-label","ListItem","button","onClick","selected","selectedDeviceIndex","ListItemIcon","ListItemText","primary","icon","faCircle","SET_UNIVERSAL_TABS_NAME_INDEX","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","flexGrow","marginBottom","defaultRoot","noElevation","boxShadow","setUniversalTabsNameIndex","tabsInstance","UniversalTabsReducer","defaultMargin","AppBar","position","Tabs","onChange","event","scrollButtons","indicatorColor","textColor","tabs","map","tab","i","Tab","label","content","useStyles1","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","IconButton","disabled","direction","Math","ceil","max","useStyles2","table","CustomPaginationActionsTable","rows","columns","noPagination","React","useState","setPage","length","setRowsPerPage","emptyRows","min","useEffect","TableContainer","Paper","Table","TableHead","TableRow","column","colIndex","TableCell","TableBody","row","rowIndex","cell","cellIndex","slice","height","colSpan","TableFooter","TablePagination","labelDisplayedRows","from","to","labelRowsPerPage","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","SET_ALL_DEVICES","title","payloadToReturn","Promise","resolve","reject","setTimeout","console","log","selectedDeviceName","selectedDeviceType","SET_ACCOUNT_FORM_CURRENT_PASSWORD","SET_ACCOUNT_FORM_NEW_PASSWORD","API_URL","json","userData","data","permissions","newPassword","bodyWithPasswords","password","stringify","oldPassword","username","textAlign","loginButton","marginTop","form","setAccountFormCurrentPassword","setAccountFormNewPassword","currentPassword","AccountPageReducer","accountDetails","setAccountDetails","getMyAccountDetails","UserService","verify","textfield","lengthErrorText","similarityErrorText","error","justify","alignContent","xl","Chip","avatar","Avatar","noValidate","autoComplete","_id","TextField","defaultValue","e","helperText","editMyPassword","SET_USER_ACCOUNTS_LIST","setUserAccountsList","list","SET_CREATE_ACCOUNT_DIALOG_OPEN","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT","SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_EDIT_ID","setCreateAccountDialogOpen","open","dialogType","setCreateAccountDialogNameTextfield","setCreateAccountDialogPermissionsSelect","SET_CONFIRM_DELETE_USER_DIALOG_OPEN","SET_CONFIRM_DELETE_USER_DIALOG_USERNAME","setConfirmDeleteUserDialogOpen","setConfirmDeleteUserDialogUsername","get","setItem","Error","removeItem","icons","setCreateAccountDialogEditId","accountsList","UserAccountsPageReducer","getAllAccounts","checkPermissions","currentUser","AuthService","getCurrentUser","acc","Tooltip","placement","startIcon","isAuthenticated","user","undefined","isAdmin","SET_AUTHENTICATED","setAuthenticated","authed","authenticated","AuthenticationReducer","rest","render","location","pathname","DrawerRoutes","path","SET_LANGUAGE_DIALOG_OPEN","setLanguageDialogOpen","SET_FORM_USERNAME","SET_FORM_PASSWORD","SET_FORM_USERNAME_ERROR","SET_FORM_PASSWORD_ERROR","contentDesktop","contentMobile","fab","top","right","setFormPassword","setFormUsername","setFormUsernameError","setFormPasswordError","login","LoginPageReducer","loginError","usernameError","passwordError","matches","useMediaQuery","breakpoints","down","history","useHistory","tryLogin","push","catch","handleKeyDown","key","controlFormFields","field","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","Zoom","in","timeout","transitionDelay","unmountOnExit","Fab","align","gutterBottom","onKeyDown","SET_HARDWARE_USAGE","CircularProgressWithLabel","percentColors","pct","r","g","b","marginRight","CircularProgress","size","thickness","animationDuration","lower","upper","range","rangePct","pctLower","pctUpper","floor","join","getColorForPercentage","left","bottom","justifyContent","round","unit","instance","drawerWidth","appBar","zIndex","drawer","create","easing","sharp","appBarShift","menuButton","hide","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","paddingBottom","paddingTop","paddingLeft","paddingRight","bottomNavi","borderTop","up","hardwareUsage","sectionDesktop","sectionMobile","setHardwareUsage","cpuUsage","cpuTemperature","ramUsage","diskUsage","HardwareUsageReducer","setOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","bottomNaviValue","setBottomNaviValue","useLocation","isMenuOpen","Boolean","isMobileMenuOpen","worker","addEventListener","message","postMessage","token","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Link","logout","Divider","mobileMenuId","renderMobileMenu","Badge","badgeContent","faMicrochip","faThermometerHalf","faMemory","faHdd","aria-controls","aria-haspopup","CssBaseline","clsx","Toolbar","edge","noWrap","Drawer","paper","BottomNavigation","showLabels","BottomNavigationAction","initialState","nameError","editAccountId","devices","combineReducers","LanguageDialogReducer","action","CreateAccountDialog","newpassword","SnackbarReducer","ConfirmDeleteUserDialogReducer","DevicesSelectionPageReducer","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","document","documentElement","checkWhitelist","checkForSimilarInWhitelist","cookieOptions","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","pl","detection","fallbackLng","keySeparator","interpolation","escapeValue","blue","chooseLanguage","language","changeLanguage","Dialog","DialogTitle","ListItemAvatar","formControl","selectEmpty","setCreateAccountDialogPasswordTextfield","setCreateAccountDialogNameTextfieldError","setCreateAccountDialogPasswordTextfieldError","handleChange","val","DialogContent","DialogContentText","autoFocus","margin","FormControl","InputLabel","Select","labelId","DialogActions","disableButton","editAccount","register","Alert","elevation","handleClose","reason","Snackbar","autoHideDuration","accountNameToBeDeleted","accountIdToBeDeleted","aria-describedby","deleteAccount","store","createStore","rootReducer","createMuiTheme","palette","light","main","dark","contrastText","secondary","App","ThemeProvider","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17126ad4.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"2a0400d209d63a8e6df9.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","const API_URL = \"/api/configFile/\";\r\n\r\nclass FileService {\r\n  async uploadFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n      body: formData\r\n    })\r\n    return { status: response.status }\r\n  }\r\n}\r\n\r\nexport default new FileService();","export const SET_SNACKBAR_TEXT = 'SET_SNACKBAR_TEXT';\r\nexport const SET_SNACKBAR_SHOWN = 'SET_SNACKBAR_SHOWN';\r\n\r\nexport const setSnackbarText = (text, severity) => ({ type: SET_SNACKBAR_TEXT, text: text, severity: severity})\r\nexport const setSnackbarShown = (shown) => ({ type: SET_SNACKBAR_SHOWN, shown: shown})","import React, { useCallback, useMemo } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FileService from '../services/file.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropzoneText: {\r\n    color: 'rgb(140 140 140)'\r\n  },\r\n}));\r\n\r\nfunction Dropzone({ setSnackbarText, setSnackbarShown }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    // Do something with the files\r\n    FileService.uploadFile(acceptedFiles[0]).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulFileUpload'), 'success')\r\n        setSnackbarShown(true)\r\n      }\r\n      else if(res.status === 403) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else if(res.status === 400) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload400'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setSnackbarShown, setSnackbarText, t])\r\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({ onDrop, accept: 'application/JSON' });\r\n\r\n  const baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '40px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: 'rgb(187 187 187)',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: 'rgb(255 255 255)',\r\n    outline: 'none',\r\n    transition: 'border .5s ease-in-out'\r\n  };\r\n\r\n  const activeStyle = {\r\n    borderColor: '#2196f3'\r\n  };\r\n\r\n  const acceptStyle = {\r\n    borderColor: '#00e676'\r\n  };\r\n\r\n  const rejectStyle = {\r\n    borderColor: '#ff1744'\r\n  };\r\n\r\n  const style = useMemo(() => ({\r\n    ...baseStyle,\r\n    ...(isDragActive ? activeStyle : {}),\r\n    ...(isDragAccept ? acceptStyle : {}),\r\n    ...(isDragReject ? rejectStyle : {})\r\n  }), [\r\n    isDragActive,\r\n    isDragReject,\r\n    isDragAccept,\r\n    baseStyle,\r\n    activeStyle,\r\n    acceptStyle,\r\n    rejectStyle\r\n  ]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({ style })} className=\"dropzone\">\r\n        <input {...getInputProps()} />\r\n        <Typography variant=\"body1\" className={classes.dropzoneText}>{t('SettingsPage.DropzoneText')}</Typography>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Dropzone);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dropzone from './Dropzone.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function Settings() {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('SettingsPage.Title')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Dropzone />\r\n        </Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}>\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">{t('SettingsPage.LoadButton')}</Button>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}>\r\n          <Button fullWidth variant=\"contained\" color=\"secondary\">{t('SettingsPage.SaveButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}","export const SELECT_DEVICE = 'SELECT_DEVICE';\r\n\r\nexport const selectDevice = (deviceIndex, deviceName, deviceType) => ({ type: SELECT_DEVICE, deviceIndex: deviceIndex, deviceName: deviceName, deviceType: deviceType })","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport { connect } from 'react-redux';\r\nimport { selectDevice } from '../actions/DevicesList.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    //backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction SimpleList(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"device selection\">\r\n        <ListItem button onClick={()=>props.selectDevice(0, 'Mindsphere', 'MindSphere')} selected={props.selectedDevice.selectedDeviceIndex === 0 ? true : false}>\r\n          <ListItemIcon>\r\n            <CloudIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"MindSphere\" />\r\n        </ListItem>\r\n        <ListItem button onClick={()=>props.selectDevice(1, 'Meter1', 'Meter')} selected={props.selectedDevice.selectedDeviceIndex === 1 ? true : false}>\r\n          <ListItemIcon>\r\n            <FontAwesomeIcon icon={faCircle} color=\"green\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Meter1\" />\r\n        </ListItem>\r\n        <ListItem button onClick={()=>props.selectDevice(2, 'Meter2', 'Meter')} selected={props.selectedDevice.selectedDeviceIndex === 2 ? true : false}>\r\n          <ListItemIcon>\r\n            <FontAwesomeIcon icon={faCircle} color=\"red\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Meter2\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDevice: state.DevicesListReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  selectDevice\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleList)","export const SET_UNIVERSAL_TABS_NAME_INDEX = 'SET_UNIVERSAL_TABS_NAME_INDEX';\r\n\r\nexport const setUniversalTabsNameIndex = (name, index) => ({ type: SET_UNIVERSAL_TABS_NAME_INDEX, name: name, index: index })","// universal tabs component with tabpanels, only horizontal\r\n//pass required prop 'tabs' to it with [{label: yourlabeltext, content: yourcontent}, ...]\r\n// prop required 'name' required for redux active tab index storage\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { setUniversalTabsNameIndex } from '../actions/UniversalTabs.action';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={1}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    //width: `calc(100% + 16px)`,\r\n    //backgroundColor: theme.palette.background.paper,\r\n    //margin: '-8px',\r\n    marginBottom: '20px'\r\n  },\r\n  defaultRoot: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  },\r\n  noElevation: {\r\n    boxShadow: 'unset'\r\n  }\r\n}));\r\n\r\nfunction ScrollableTabsButtonForce(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={props.defaultMargin ? classes.defaultRoot : classes.root}>\r\n      <AppBar position=\"static\" color=\"default\" className={classes.noElevation}>\r\n        <Tabs\r\n          value={props.tabsInstance[props.name] || 0}\r\n          onChange={(event, value)=>props.setUniversalTabsNameIndex(props.name, value)}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          aria-label=\"scrollable force tabs\"\r\n        >\r\n          {props.tabs.map((tab, i) => {\r\n            return <Tab key={`tab-${i}`} label={tab.label} {...a11yProps(i)} />\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      {props.tabs.map((tab, i) => {\r\n        return <TabPanel key={`tabpanel-${i}`} value={props.tabsInstance[props.name] || 0} index={i}>\r\n          {tab.content}\r\n        </TabPanel>\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tabsInstance: state.UniversalTabsReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUniversalTabsNameIndex,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScrollableTabsButtonForce)","//props = rows: array, columns: array, noPagination: bool\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    //minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable({ rows, columns, noPagination }) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows.length < 5 ? rows.length : 5);\r\n  const { t } = useTranslation()\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (rows.length < 5) {\r\n      setRowsPerPage(rows.length)\r\n    }\r\n    else {\r\n      setRowsPerPage(5)\r\n    }\r\n\r\n  }, [rows])\r\n\r\n  return (\r\n    <TableContainer component={Paper} >\r\n      <Table className={classes.table} aria-label=\"params table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, colIndex) => {\r\n              return <TableCell key={`column-${colIndex}`}>{column}</TableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!noPagination?\r\n          (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row, rowIndex) => (\r\n            <TableRow key={`row-${rowIndex}`}>\r\n              {row.map((cell, cellIndex) => {\r\n                return <TableCell key={`cell-${cellIndex}`}>\r\n                  {cell}\r\n                </TableCell>\r\n              })}\r\n            </TableRow>\r\n          )):\r\n          rows.map((row, rowIndex) => (\r\n            <TableRow key={`row-${rowIndex}`}>\r\n              {row.map((cell, cellIndex) => {\r\n                return <TableCell key={`cell-${cellIndex}`}>\r\n                  {cell}\r\n                </TableCell>\r\n              })}\r\n            </TableRow>\r\n          ))\r\n          }\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        {!noPagination ?\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('UniversalTable.Of')} ${count}`}\r\n                labelRowsPerPage={t('UniversalTable.RowsPerPage')}\r\n                rowsPerPageOptions={[rows.length < 5 ? rows.length : 5, 10, 25]}\r\n                colSpan={columns.length}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n      :null}\r\n\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","export const SET_ALL_DEVICES = 'SET_ALL_DEVICES';\r\n\r\nexport const setAllDevices = (devices) => ({type: SET_ALL_DEVICES, devices: devices})","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DevicesList from './DevicesList.component';\r\nimport DeviceSelectionTabs from './UniversalTabs.component';\r\nimport { connect } from 'react-redux';\r\nimport UniversalTable from './UniversalTable.component';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { mockFetch } from '../mock/index.mock';\r\nimport { setAllDevices } from '../actions/DevicesSelectionPage.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n}));\r\n\r\nfunction DevicesSelectionPage(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(()=>{\r\n    mockFetch([]).then(res=>{\r\n      console.log(res)\r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={3}>\r\n          <Typography variant=\"h4\" className={classes.title}>{t('DevicesSelectionPage.DevicesTitle')}</Typography>\r\n          <DevicesList />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} md={9} spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" className={classes.title}>{props.selectedDevice.selectedDeviceName}</Typography>\r\n            <React.Fragment>\r\n              {props.selectedDevice.selectedDeviceType === 'Meter' ?\r\n                <DeviceSelectionTabs\r\n                  name='meterTabs'\r\n                  tabs={[\r\n                    {\r\n                      label: t('DevicesSelectionPage.DatapointsTab'),\r\n                      content: <UniversalTable columns={['Parameter', 'type', 'sampleTime', 'offset', 'length', 'fCode', 'Unit', 'Value']} rows={[['Voltage', 'double', '1', '1', '1', '1', 'V', '230'], ['Voltage', 'double', '1', '1', '1', '1', 'V', '230']]} />\r\n                    },\r\n                    {\r\n                      label: t('DevicesSelectionPage.EdgecomputingTab'),\r\n                      content: <UniversalTable columns={['Parameter', 'type', 'sampleTime', 'calcInterval', 'variableName', 'factor', 'overflow', 'unit', 'value']} rows={[['Voltage', 'double', '1', '60', 'varname', 'factor1', 'overflow1', 'V', '230'], ['Voltage', 'double', '1', '60', 'varname', 'factor1', 'overflow1', 'V', '230']]} />\r\n                    },\r\n                    {\r\n                      label: t('DevicesSelectionPage.EventsTab'),\r\n                      content: <UniversalTable columns={['Parameter', 'Limit', 'Value', 'textPL', 'textEN', 'severity']} rows={[['Voltage', 'Lower limit', '180', 'Przekroczenie dolnego progu', 'Lower threshold exceeding', 'Warning'], ['Voltage', 'Lower limit', '180', 'Przekroczenie dolnego progu', 'Lower threshold exceeding', 'Warning']]} />\r\n                    }\r\n                  ]} />\r\n                :\r\n                <DeviceSelectionTabs\r\n                  name=\"mindsphereTabs\"\r\n                  tabs={[{ label: t('DevicesSelectionPage.DatapointsTab'), content: <UniversalTable columns={['Name', 'Parameter', 'ConfigId', 'DpId', 'Interval', 'Format', 'Length', 'Unit', 'Value']} rows={[['Meter1', 'Voltage', '1', '1', '1min', 'double', '32', 'V', '230'], ['Meter1', 'Voltage', '1', '1', '1min', 'double', '32', 'V', '230']]} /> },\r\n                  { label: t('DevicesSelectionPage.EventsTab'), content: <UniversalTable columns={['Name', 'Parameter', 'Limit', 'TextPL', 'TextEN', 'Severity']} rows={[['Meter1', 'Voltage', 'Upper limit', 'Przekroczenie', 'Exceeding', 'Warning']]} /> }]}\r\n                />\r\n              }\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h5\">{t('DevicesSelectionPage.Status')}: {t('DevicesSelectionPage.StatusConnected')}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button fullWidth variant=\"contained\" color=\"primary\">{t('DevicesSelectionPage.Connect')}</Button>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button fullWidth variant=\"contained\" color=\"secondary\">{t('DevicesSelectionPage.Disconnect')}</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDevice: state.DevicesListReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DevicesSelectionPage)","export const mockFetch = (payloadToReturn) => new Promise((resolve, reject) => {\r\n  setTimeout(() => {\r\n    resolve(payloadToReturn);\r\n  }, 100);\r\n});\r\n\r\nconst MBDevice = (calcElement, alert) => {\r\n  return {\r\n    MBDevice1: {\r\n      id: 'MBDevice1',\r\n      name: 'PAC3220_1',\r\n      type: 'MBDevice',\r\n      variables: [{\r\n        variable1: {\r\n          id: 'variable1',\r\n          deviceId: 'MBDevice1',\r\n          name: 'Variable 1',\r\n          type: 'MBInt16',\r\n          unit: 'V',\r\n          sampleTime: 1000,\r\n          defaultValue: 0,\r\n          offset: 1,\r\n          length: 3,\r\n          read: true,\r\n          write: true,\r\n          readFCode: 1,\r\n          writeFCode: 1,\r\n          unitID: 1,\r\n          readAsSingle: true,\r\n          writeAsSingle: true\r\n        }\r\n      }],\r\n      calcElements: [\r\n        ...calcElement\r\n      ],\r\n      alerts: [\r\n        ...alert\r\n      ],\r\n      ipAddress: '192.168.1.10',\r\n      portNumber: 3000,\r\n      timeout: 10,\r\n      isActive: true,\r\n      isConnected: true\r\n    }\r\n  }\r\n}\r\n\r\nconst S7Device = (calcElement, alert) => {\r\n  return {\r\n    S7Device1: {\r\n      id: 'S7Device1',\r\n      name: 'S7-1200',\r\n      type: 'S7Device',\r\n      variables: [{\r\n        variable1: {\r\n          id: 'variable1',\r\n          deviceId: 'S7Device1',\r\n          name: 'S7Device 1',\r\n          type: 'S7Int16',\r\n          unit: 'Unit',\r\n          sampleTime: 100,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          offset: 1,\r\n          length: 2,\r\n          read: true,\r\n          write: true,\r\n          areaType: 'I',\r\n          dbNumber: null,\r\n          readAsSingle: false,\r\n          writeAsSingle: false\r\n        }\r\n      }],\r\n      ...calcElement,\r\n      ...alert,\r\n      ipAddress: '100.100.1.1',\r\n      slot: 1,\r\n      rack: 1,\r\n      timeout: 1000,\r\n      isActive: false,\r\n      isConnected: false\r\n    }\r\n  }\r\n}\r\n\r\nconst InternalDevice = (calcElement, alert) => {\r\n  return {\r\n    InternalDevice1: {\r\n      id: 'InternalDevice1',\r\n      name: 'Internal Device 1',\r\n      type: 'InternalDevice',\r\n      variables: [{\r\n        variable1: {\r\n          id: 'variable1',\r\n          deviceId: 'InternalDevice1',\r\n          name: 'Variable 1',\r\n          type: 'InternalBool',\r\n          unit: 'Unit',\r\n          sampleTime: 10,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          read: false,\r\n          write: false\r\n        }\r\n      }],\r\n      calcElements: [\r\n        ...calcElement\r\n      ],\r\n      alerts: [\r\n        ...alert\r\n      ],\r\n    }\r\n  }\r\n}\r\n\r\nconst MSAgent = (calcElement, alert) => {\r\n  return {\r\n    MSAgent1: {\r\n      id: 'MSAgent1',\r\n      name: 'MSAgent 1',\r\n      type: 'MSAgent',\r\n      variables: [{\r\n        variable1: {\r\n          id: 'variable1',\r\n          deviceId: 'MSAgent1',\r\n          AssociatedDeviceId: 'AssociatedDeviceId',\r\n          AssociatedElementId: 'AssociatedElementId',\r\n          name: 'variable 1',\r\n          type: 'AssociatedVariable',\r\n          unit: 'Unit',\r\n          sampleTime: 100,\r\n          defaultValue: 0,\r\n          value: 0\r\n        }\r\n      }],\r\n      calcElements: [\r\n        ...calcElement\r\n      ],\r\n      alerts: [\r\n        ...alert\r\n      ],\r\n      sendingEnabled: true,\r\n      sendFileLimit: 100,\r\n      sendEventLimit: 100,\r\n      sendingInterval: 1000,\r\n      numberOfSendRetries: 2,\r\n      datapoints: [{\r\n        datapoint1: {\r\n          variableId: 'datapoint1',\r\n          datapoint: 'datapoint',\r\n          valueConverterObject: {\r\n            format: 'fixed', //or precision\r\n            length: 1\r\n          }\r\n        }\r\n      }],\r\n      boarded: false\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst calcElement = (type) => {\r\n  switch (type) {\r\n    case 'AverageCalculator':\r\n      return {\r\n        AverageCalculator1: {\r\n          id: 'AverageCalculator1',\r\n          deviceId: 'deviceId',\r\n          name: 'Average Calculator 1',\r\n          type: 'AverageCalculator',\r\n          unit: 'Unit',\r\n          sampleTime: 10,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          factor: 1,\r\n          calculationInterval: 1000\r\n        }\r\n      }\r\n    case 'FactorCalculator':\r\n      return {\r\n        FactorCalculator1: {\r\n          id: 'FactorCalculator1',\r\n          deviceId: 'deviceId',\r\n          name: 'Factor Calculator 1',\r\n          type: 'FactorCalculator',\r\n          unit: 'Unit',\r\n          sampleTime: 10,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          factor: 1,\r\n        }\r\n      }\r\n    case 'IncreaseCalculator':\r\n      return {\r\n        IncreaseCalculator1: {\r\n          id: 'IncreaseCalculator1',\r\n          deviceId: 'deviceId',\r\n          name: 'Increase Calculator 1',\r\n          type: 'IncreaseCalculator',\r\n          unit: 'Unit',\r\n          sampleTime: 10,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          factor: 1,\r\n          calculationInterval: 1000,\r\n          overflow: 1\r\n        }\r\n      }\r\n    case 'SumCalculator':\r\n      return {\r\n        SumCalculator1: {\r\n          id: 'SumCalculator1',\r\n          deviceId: 'deviceId',\r\n          name: 'Sum Calculator 1',\r\n          type: 'SumCalculator',\r\n          unit: 'Unit',\r\n          sampleTime: 10,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableIds: [{\r\n            variableId: 'variableId',\r\n            factor: 1\r\n          }]\r\n        }\r\n      }\r\n    case 'ValueFromByteArrayCalculator':\r\n      return {\r\n        ValueFromByteArrayCalculator1: {\r\n          id: 'ValueFromByteArrayCalculator1',\r\n          deviceId: 'deviceId',\r\n          name: 'Value From Byte Array Calculator 1',\r\n          type: 'ValueFromByteArrayCalculator',\r\n          unit: 'Unit',\r\n          sampleTime: 10,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          bitNumber: 1,\r\n          byteNumber: 2,\r\n          length: 2\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nconst alert = (type) => {\r\n  switch (type) {\r\n    case 'HighLimitAlert':\r\n      return {\r\n        alert1: {\r\n          id: 'alert1',\r\n          deviceId: 'deviceId',\r\n          name: 'High Limit Alert 1',\r\n          type: 'HighLimitAlert',\r\n          unit: 'Unit',\r\n          sampleTime: 1,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          highLimit: 100,\r\n          texts: [{\r\n            lang: 'en',\r\n            text: 'High Limit Alert 1'\r\n          }],\r\n          severity: 1,\r\n          hysteresis: 10,\r\n          timeDelayOn: 1000,\r\n          timeDelayOff: 1000\r\n        }\r\n      }\r\n    case 'LowLimitAlert':\r\n      return {\r\n        alert1: {\r\n          id: 'alert1',\r\n          deviceId: 'deviceId',\r\n          name: 'Low Limit Alert 1',\r\n          type: 'LowLimitAlert',\r\n          unit: 'Unit',\r\n          sampleTime: 1,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          lowLimit: 10,\r\n          texts: [{\r\n            lang: 'en',\r\n            text: 'Low Limit Alert 1'\r\n          }],\r\n          severity: 1,\r\n          hysteresis: 10,\r\n          timeDelayOn: 1000,\r\n          timeDelayOff: 1000\r\n        }\r\n      }\r\n    case 'BandwidthLimitAlert':\r\n      return {\r\n        alert1: {\r\n          id: 'alert1',\r\n          deviceId: 'deviceId',\r\n          name: 'Bandwidth Limit Alert 1',\r\n          type: 'BandwidthLimitAlert',\r\n          unit: 'Unit',\r\n          sampleTime: 1,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          highLimit: 100,\r\n          lowLimit: 10,\r\n          texts: [{\r\n            lang: 'en',\r\n            text: 'Bandwidth Alert 1'\r\n          }],\r\n          severity: 1,\r\n          inverseLogic: true,\r\n          hysteresis: 10,\r\n          timeDelayOn: 1000,\r\n          timeDelayOff: 1000\r\n        }\r\n      }\r\n    case 'ExactValuesAlert':\r\n      return {\r\n        alert1: {\r\n          id: 'alert1',\r\n          deviceId: 'deviceId',\r\n          name: 'Exact Values Alert 1',\r\n          type: 'ExactValuesAlert',\r\n          unit: 'Unit',\r\n          sampleTime: 1,\r\n          defaultValue: 0,\r\n          value: 0,\r\n          variableId: 'variableId',\r\n          alertValues: [10, 15],\r\n          texts: [{\r\n            10: {\r\n              lang: 'en',\r\n              text: 'Exact Values Alert 10'\r\n            },\r\n            15: {\r\n              lang: 'en',\r\n              text: 'Exact Values Alert 15'\r\n            }\r\n          }],\r\n          severity: 1,\r\n          timeDelayOn: 1000,\r\n          timeDelayOff: 1000\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\n","export const SET_ACCOUNT_FORM_CURRENT_PASSWORD = 'SET_ACCOUNT_FORM_CURRENT_PASSWORD';\r\nexport const SET_ACCOUNT_FORM_NEW_PASSWORD = 'SET_ACCOUNT_FORM_NEW_PASSWORD';\r\n\r\nexport const setAccountFormCurrentPassword = (password) => ({ type: SET_ACCOUNT_FORM_CURRENT_PASSWORD, password: password })\r\nexport const setAccountFormNewPassword = (password) => ({ type: SET_ACCOUNT_FORM_NEW_PASSWORD, password: password })","const API_URL = '/api/user';\r\n\r\nclass UserService {\r\n  async getMyAccountDetails() {\r\n    const response = await fetch(`${API_URL}/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: userData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  async getAllAccounts() {\r\n    const response = await fetch(`${API_URL}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: userData\r\n      };\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  async deleteAccount(id) {\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async editAccount(id, name, permissions, newPassword = false) {\r\n    let body = {\r\n      name: name,\r\n      permissions: permissions\r\n    };\r\n    let bodyWithPasswords;\r\n    if (newPassword) {\r\n      bodyWithPasswords = {\r\n        ...body,\r\n        password: newPassword,\r\n      }\r\n    }\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify(newPassword ? bodyWithPasswords : body)\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async editMyPassword(name, permissions, oldPassword, newPassword) {\r\n    const response = await fetch(`${API_URL}/me`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ name: name, permissions: permissions, oldPassword: oldPassword, password: newPassword })\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async register(username, password, permissions) {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ name: username, permissions: permissions, password: password })\r\n    })\r\n    return { status: response.status }\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { connect } from 'react-redux';\r\nimport { setAccountFormCurrentPassword, setAccountFormNewPassword } from '../actions/AccountPage.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserService from '../services/user.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  },\r\n  loginButton: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nfunction AccountPage({ currentPassword, newPassword, setAccountFormCurrentPassword, setAccountFormNewPassword, setSnackbarText, setSnackbarShown }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [accountDetails, setAccountDetails] = useState({})\r\n\r\n  const getMyAccountDetails = useCallback(() => {\r\n    UserService.getMyAccountDetails().then(res => {\r\n      if (res.status === 200) {\r\n        setAccountDetails(res.data)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setSnackbarShown, setSnackbarText, t])\r\n\r\n  useEffect(() => {\r\n    getMyAccountDetails()\r\n  }, [getMyAccountDetails])\r\n\r\n  const verify = (textfield) => {\r\n    const lengthErrorText = t('AccountPage.PasswordHelperError8characters');\r\n    const similarityErrorText = t('AccountPage.PasswordHelperErrorSamePasswords');\r\n    if (textfield === 'currentPassword') {\r\n      if (currentPassword.length > 0 && currentPassword.length < 8) {\r\n        return {\r\n          error: true,\r\n          text: lengthErrorText\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (newPassword.length > 0 && newPassword.length < 8) {\r\n        return {\r\n          error: true,\r\n          text: lengthErrorText\r\n        }\r\n      }\r\n    }\r\n    if (newPassword.length > 0 && currentPassword.length > 0 && newPassword === currentPassword) {\r\n      return {\r\n        error: true,\r\n        text: similarityErrorText\r\n      }\r\n    }\r\n    return {\r\n      error: false,\r\n      text: ''\r\n    }\r\n  }\r\n\r\n  const changePassword = () => {\r\n    UserService.editMyPassword(accountDetails.name, accountDetails.permissions, currentPassword, newPassword).then(res => {\r\n      if (res.status === 200) {\r\n        //reset fields after submit\r\n        setAccountFormCurrentPassword('')\r\n        setAccountFormNewPassword('')\r\n        setSnackbarText(t('Snackbar.SuccessfulPasswordChange'), 'success')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulPasswordChange'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        alignContent=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('AccountPage.Title')}</Typography>\r\n        </Grid>\r\n        <Grid container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          item xs={12}>\r\n          <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n            {accountDetails.permissions >= 1 ? <Chip avatar={<Avatar>U</Avatar>} label=\"User\" /> : null}\r\n            {accountDetails.permissions >= 3 ? <Chip color=\"primary\" avatar={<Avatar>A</Avatar>} label=\"Admin\" /> : null}\r\n            {accountDetails.permissions === 7 ? <Chip color=\"secondary\" avatar={<Avatar>S</Avatar>} label=\"SuperAdmin\" /> : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          item xs={12}>\r\n          <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n              {accountDetails._id ? <TextField fullWidth disabled label=\"ID\" defaultValue={accountDetails._id} /> : null}\r\n              {accountDetails.name ? <TextField fullWidth disabled label={t('AccountPage.NameTextField')} autoComplete=\"username\" defaultValue={accountDetails.name} /> : null}\r\n              <TextField\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={currentPassword}\r\n                onChange={(e) => setAccountFormCurrentPassword(e.target.value)}\r\n                fullWidth\r\n                label={t('AccountPage.CurrentPasswordTextField')}\r\n                helperText={verify('currentPassword').text}\r\n                error={verify('currentPassword').error} />\r\n              <TextField\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={newPassword}\r\n                onChange={(e) => setAccountFormNewPassword(e.target.value)}\r\n                fullWidth\r\n                label={t('AccountPage.NewPasswordTextField')}\r\n                helperText={verify('newPassword').text}\r\n                error={verify('newPassword').error} />\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Button onClick={() => changePassword()}\r\n            className={classes.loginButton} fullWidth color=\"secondary\" variant=\"contained\" disabled={currentPassword.length === 0 || newPassword.length === 0 || verify('newPassword').error || verify('currentPassword').error}>{t('AccountPage.ChangePasswordButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentPassword: state.AccountPageReducer.currentPassword,\r\n    newPassword: state.AccountPageReducer.newPassword\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAccountFormCurrentPassword,\r\n  setAccountFormNewPassword,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPage);","export const SET_USER_ACCOUNTS_LIST = 'SET_USER_ACCOUNTS_LIST';\r\n\r\nexport const setUserAccountsList = (list) => ({ type: SET_USER_ACCOUNTS_LIST, list: list})","export const SET_CREATE_ACCOUNT_DIALOG_OPEN = 'SET_CREATE_ACCOUNT_DIALOG_OPEN';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT = 'SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_EDIT_ID = 'SET_CREATE_ACCOUNT_DIALOG_EDIT_ID';\r\n\r\nexport const setCreateAccountDialogOpen = (open, dialogType) => ({ type: SET_CREATE_ACCOUNT_DIALOG_OPEN, open: open, dialogType: dialogType }) //dialogType === create or edit\r\nexport const setCreateAccountDialogNameTextfield = (name) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD, name: name })\r\nexport const setCreateAccountDialogPasswordTextfield = (password) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD, password: password })\r\nexport const setCreateAccountDialogPermissionsSelect = (permissions) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT, permissions: permissions })\r\nexport const setCreateAccountDialogNameTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR, error: error })\r\nexport const setCreateAccountDialogPasswordTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR, error: error })\r\nexport const setCreateAccountDialogNewpasswordTextfield = (newpassword) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD, newpassword: newpassword })\r\nexport const setCreateAccountDialogEditId = (id) => ({ type: SET_CREATE_ACCOUNT_DIALOG_EDIT_ID, id: id })","export const SET_CONFIRM_DELETE_USER_DIALOG_OPEN = 'SET_CONFIRM_DELETE_USER_DIALOG_OPEN';\r\nexport const SET_CONFIRM_DELETE_USER_DIALOG_USERNAME = 'SET_CONFIRM_DELETE_USER_DIALOG_USERNAME';\r\n\r\nexport const setConfirmDeleteUserDialogOpen = (open) => ({ type: SET_CONFIRM_DELETE_USER_DIALOG_OPEN, open: open })\r\nexport const setConfirmDeleteUserDialogUsername = (username, id) => ({type: SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, username: username, id: id })","const API_URL = \"/api/auth/\";\r\n\r\nclass AuthService {\r\n  async login(username, password) {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name: username, password: password })\r\n    })\r\n\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      if (response.headers.get('x-auth-token')) {\r\n        localStorage.setItem(\"user\", JSON.stringify({ ...userData, accessToken: response.headers.get('x-auth-token') }))\r\n      }\r\n      return userData;\r\n    }\r\n    throw new Error(response.status)\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useEffect, useCallback } from 'react';\r\nimport UniversalTable from './UniversalTable.component';\r\nimport { connect } from 'react-redux';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport UserService from '../services/user.service';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { setCreateAccountDialogOpen, setCreateAccountDialogEditId, setCreateAccountDialogNameTextfield, setCreateAccountDialogPermissionsSelect } from '../actions/CreateAccountDialog.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\r\nimport AuthService from '../services/auth.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icons: {\r\n    padding: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction UserAccountsPage({ setUserAccountsList,\r\n  setCreateAccountDialogOpen,\r\n  accountsList,\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setCreateAccountDialogEditId,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfield,\r\n  setSnackbarText,\r\n  setSnackbarShown }) {\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const getAllAccounts = useCallback(() => {\r\n    UserService.getAllAccounts().then(res => {\r\n      if (res.status === 200) {\r\n        setUserAccountsList(res.data)\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setUserAccountsList, setSnackbarShown, setSnackbarText, t])\r\n\r\n  useEffect(() => {\r\n    getAllAccounts()\r\n  }, [getAllAccounts])\r\n\r\n  const deleteAcc = (id, username) => {\r\n    setConfirmDeleteUserDialogUsername(username, id)\r\n    setConfirmDeleteUserDialogOpen(true)\r\n  }\r\n\r\n  const editAcc = (id, name, permissions) => {\r\n    setCreateAccountDialogEditId(id)\r\n    setCreateAccountDialogNameTextfield(name)\r\n    setCreateAccountDialogPermissionsSelect(permissions)\r\n    setCreateAccountDialogOpen(true, 'edit')\r\n  }\r\n\r\n  const checkPermissions = (permissions) => {\r\n    const currentUser = AuthService.getCurrentUser().permissions;\r\n    if (currentUser === 7) {\r\n      return true;\r\n    }\r\n    if ((permissions === 3 || permissions === 7) && currentUser === 3) {\r\n      return false\r\n    }\r\n    if (permissions === 1 && currentUser >= 3) {\r\n      return true\r\n    }\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('AccountMenu.UserAccounts')}</Typography>\r\n        </Grid>\r\n        {accountsList.length > 0 ?\r\n          <Grid item xs={12}>\r\n            <UniversalTable noPagination\r\n              columns={[t('UserAccountsPage.IdColumn'), t('UserAccountsPage.NameColumn'), t('UserAccountsPage.PermissionsColumn'), t('UserAccountsPage.ActionColumn')]}\r\n              rows={accountsList.map(acc => [acc._id, acc.name, acc.permissions === 1 ? 'User' : acc.permissions === 3 ? 'Admin' : 'SuperAdmin', checkPermissions(acc.permissions) ?\r\n                <div>\r\n                  <Tooltip title={t('UserAccountsPage.TooltipEdit')} placement=\"top\">\r\n                    <IconButton onClick={() => editAcc(acc._id, acc.name, acc.permissions)} className={classes.icons} aria-label=\"edit\">\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title={t('UserAccountsPage.TooltipDelete')} placement=\"top\">\r\n                    <IconButton onClick={() => deleteAcc(acc._id, acc.name)} className={classes.icons} aria-label=\"delete\">\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n                :\r\n                null])}\r\n            />\r\n          </Grid> : null\r\n        }\r\n        <Grid item xs={6} sm={4} md={3} lg={2}>\r\n          <Button\r\n            onClick={() => setCreateAccountDialogOpen(true, 'create')}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            {t('UserAccountsPage.CreateUser')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    accountsList: state.UserAccountsPageReducer.accountsList,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUserAccountsList,\r\n  setCreateAccountDialogOpen,\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setCreateAccountDialogEditId,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccountsPage);","import AuthService from \"../services/auth.service\";\r\n\r\nexport const isAuthenticated = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  if (user === null || user._id === undefined || user.name === undefined || user.permissions === undefined || user.accessToken === undefined) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const isAdmin = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  if(user!==null && user.permissions>=3) {\r\n    return true\r\n  }\r\n  return false\r\n}","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\n\r\nexport const setAuthenticated = (authed) => ({ type: SET_AUTHENTICATED, authenticated: authed})","import { isAdmin } from '../services/isAuthenticated.service';\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction AdminRoute({ children, authenticated, setAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAdmin() ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAuthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminRoute);","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Settings from '../components/Settings.component';\r\nimport DevicesSelectionPage from '../components/DevicesSelectionPage.component';\r\nimport AccountPage from '../components/AccountPage.component';\r\nimport UserAccountsPage from '../components/UserAccountsPage.component';\r\nimport AdminRoute from '../routes/ProtectedAdmin.routes';\r\n\r\nexport default function DrawerRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/settings\" render={()=><Settings/>} />\r\n      <Route path=\"/myaccount\" render={()=><AccountPage/>} />\r\n      <AdminRoute path=\"/useraccounts\"><UserAccountsPage/></AdminRoute>\r\n      <Route path=\"/\" render={()=><DevicesSelectionPage/>} />\r\n    </Switch>\r\n  )\r\n}\r\n","export const SET_LANGUAGE_DIALOG_OPEN = 'SET_LANGUAGE_DIALOG_OPEN';\r\n\r\nexport const setLanguageDialogOpen = (open) => ({ type: SET_LANGUAGE_DIALOG_OPEN, open: open })","export const SET_FORM_USERNAME = 'SET_FORM_USERNAME';\r\nexport const SET_FORM_PASSWORD = 'SET_FORM_PASSWORD';\r\nexport const SET_FORM_USERNAME_ERROR = 'SET_FORM_USERNAME_ERROR';\r\nexport const SET_FORM_PASSWORD_ERROR = 'SET_FORM_PASSWORD_ERROR';\r\n\r\nexport const setFormUsername = (username) => ({ type: SET_FORM_USERNAME, username: username })\r\nexport const setFormPassword = (password) => ({ type: SET_FORM_PASSWORD, password: password })\r\nexport const setFormUsernameError = (error) => ({ type: SET_FORM_USERNAME_ERROR, error: error })\r\nexport const setFormPasswordError = (error) => ({ type: SET_FORM_PASSWORD_ERROR, error: error })","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { setFormUsername, setFormPassword } from '../actions/LoginPage.action';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setFormUsernameError, setFormPasswordError } from '../actions/LoginPage.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentDesktop: {\r\n    //flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    height: '100vh',\r\n    width: '100%'\r\n  },\r\n  contentMobile: {\r\n    padding: theme.spacing(1),\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  loginButton: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nfunction LoginPage(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation()\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: landscape)`)\r\n  let history = useHistory();\r\n\r\n  const tryLogin = () => {\r\n    AuthService.login(props.login, props.password).then(() => {\r\n      history.push(\"/\");\r\n    }).catch(() => {\r\n      props.setFormUsernameError(true)\r\n      props.setFormPasswordError(true)\r\n    })\r\n  }\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter' && props.login.length >= 3 && props.password.length >= 8) {\r\n      tryLogin()\r\n    }\r\n  }\r\n\r\n  const buttonLogin = () => {\r\n    tryLogin()\r\n  }\r\n\r\n  const controlFormFields = (field, value) => {\r\n    props.setFormUsernameError(false)\r\n    props.setFormPasswordError(false)\r\n    if (field === 'username') {\r\n      props.setFormUsername(value)\r\n    }\r\n    else {\r\n      props.setFormPassword(value)\r\n    }\r\n  }\r\n\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Zoom\r\n        in={true}\r\n        timeout={transitionDuration}\r\n        style={{\r\n          transitionDelay: `500ms`,\r\n        }}\r\n        unmountOnExit\r\n      >\r\n        <Fab aria-label=\"choose langauge\" className={classes.fab} color=\"primary\" onClick={() => props.setLanguageDialogOpen(true)}>\r\n          <LanguageIcon />\r\n        </Fab>\r\n      </Zoom>\r\n\r\n      <Grid className={matches ? classes.contentMobile : classes.contentDesktop}\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        alignContent=\"center\">\r\n        <Grid item xs={12} >\r\n          <Typography align=\"center\" variant=\"h2\" gutterBottom>Sidiro IoT</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Typography align=\"center\" variant=\"h4\" gutterBottom>{t('LoginPage.LoginTitle')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={6} lg={4} xl={3}>\r\n          <form noValidate autoComplete=\"off\" className={classes.form}>\r\n            <TextField\r\n              error={props.loginError}\r\n              value={props.login}\r\n              onChange={(e) => controlFormFields('username', e.target.value)}\r\n              id=\"login\" label={t('LoginPage.FormLoginTextField')} fullWidth variant=\"standard\" autoComplete=\"username\" onKeyDown={handleKeyDown} helperText={props.loginError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormLoginTextFieldHelperText')} />\r\n            <TextField\r\n              error={props.passwordError}\r\n              value={props.password}\r\n              onChange={(e) => controlFormFields('password', e.target.value)}\r\n              id=\"password\" type=\"password\" label={t('LoginPage.FormPasswordTextField')} fullWidth variant=\"standard\" autoComplete=\"password\" onKeyDown={handleKeyDown} helperText={props.loginError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormPasswordTextFieldHelperText')} />\r\n          </form>\r\n          <Button onClick={() => buttonLogin()} className={classes.loginButton} color=\"secondary\" variant=\"contained\" fullWidth disabled={props.login.length < 3 || props.password.length < 8}>{t('LoginPage.LoginButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.LoginPageReducer.username,\r\n    loginError: state.LoginPageReducer.usernameError,\r\n    password: state.LoginPageReducer.password,\r\n    passwordError: state.LoginPageReducer.passwordError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n  setFormPassword,\r\n  setFormUsername,\r\n  setFormUsernameError,\r\n  setFormPasswordError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","export const SET_HARDWARE_USAGE = 'SET_HARDWARE_USAGE';\r\n\r\nexport const setHardwareUsage = (cpuUsage, cpuTemperature, ramUsage, diskUsage) => ({ type: SET_HARDWARE_USAGE, cpuUsage: cpuUsage, cpuTemperature: cpuTemperature, ramUsage: ramUsage, diskUsage: diskUsage })","import { isAuthenticated } from '../services/isAuthenticated.service';\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction PrivateRoute({ children, authenticated, setAuthenticated, ...rest }) {\r\n  React.useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      setAuthenticated(true)\r\n    }\r\n  }, [authenticated, setAuthenticated])\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated() ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAuthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularProgressWithLabel(props) {\r\n  const percentColors = [\r\n    { pct: 0.0, color: { r: 0x00, g: 0xff, b: 0 } },\r\n    { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0 } },\r\n    { pct: 1.0, color: { r: 0xff, g: 0x00, b: 0 } }];\r\n\r\n  const getColorForPercentage = (pct) => {\r\n    for (var i = 1; i < percentColors.length - 1; i++) {\r\n      if (pct < percentColors[i].pct) {\r\n        break;\r\n      }\r\n    }\r\n    var lower = percentColors[i - 1];\r\n    var upper = percentColors[i];\r\n    var range = upper.pct - lower.pct;\r\n    var rangePct = (pct - lower.pct) / range;\r\n    var pctLower = 1 - rangePct;\r\n    var pctUpper = rangePct;\r\n    var color = {\r\n      r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\r\n      g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\r\n      b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\r\n    };\r\n    return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\r\n    // or output as hex if preferred\r\n  };\r\n\r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   usageGaugesGroup: {\r\n  //     marginRight: '20px',\r\n  //     marginLeft: '5px'\r\n  //   },\r\n  //   usageColor: {\r\n  //     position: 'absolute',\r\n  //     left: 0,\r\n  //     animationDuration: '1500ms',\r\n  //   },\r\n  //   bottom: {\r\n  //     color: '#eeeeee1c',\r\n  //   },\r\n  // }));\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-flex', marginRight: '20px', marginLeft: '5px' }}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        style={{color:'#eeeeee1c'}}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress \r\n      variant=\"static\" {...props} \r\n      style={{position: 'absolute', animationDuration: '1500ms', color: getColorForPercentage(props.value / 100)}} />\r\n      <div style={{position: 'absolute', display: 'flex', top: '0px', left: '0px', bottom: '0px', right: '0px', alignItems:\"center\", justifyContent:\"center\"}}>\r\n      \r\n        <Typography variant=\"caption\" component=\"div\" color=\"initial\">{`${Math.round(props.value,)}${props.unit}`}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport ViewArrayIcon from \"@material-ui/icons/ViewArray\";\r\nimport { Link, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport DeviceHubIcon from \"@material-ui/icons/DeviceHub\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport DrawerRoutes from '../routes/DrawerRoutes.routes';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrochip, faMemory, faThermometerHalf, faHdd } from '@fortawesome/free-solid-svg-icons'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LoginPage from './LoginPage.component';\r\nimport { setHardwareUsage } from '../actions/HardwareUsage.action';\r\nimport worker from 'workerize-loader!../workers/hwinfo.worker'; //eslint-disable-line import/no-webpack-loader-syntax\r\nimport PrivateRoute from '../routes/protected.routes';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { setCreateAccountDialogOpen } from '../actions/CreateAccountDialog.action';\r\nimport { isAdmin } from '../services/isAuthenticated.service';\r\nimport CircularProgressWithLabel from './CircularProgress.component';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      display: 'none'\r\n    },\r\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n      display: 'flex'\r\n    },\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - 57px)`,\r\n    padding: theme.spacing(1),\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      paddingBottom: theme.spacing(7),\r\n      paddingTop: theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    },\r\n  },\r\n  bottomNavi: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      display: 'flex'\r\n    },\r\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n      display: 'none'\r\n    },\r\n    [`${theme.breakpoints.up('md')}`]: {\r\n      display: 'none'\r\n    },\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hardwareUsage: {\r\n    width: '50px',\r\n    height: '40px',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    //height: '40px',\r\n    flexGrow: 1\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  loginButton: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    }\r\n  }\r\n}));\r\n\r\nlet instance;\r\n\r\nfunction MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { t } = useTranslation();\r\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: portrait)`)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [bottomNaviValue, setBottomNaviValue] = React.useState(0);\r\n  const { setHardwareUsage, authenticated, setAuthenticated } = props;\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  useEffect(() => {\r\n    instance = worker()\r\n    instance.addEventListener(\"message\", message => {\r\n      const { data } = message;\r\n      if (data.cpuUsage !== undefined) {\r\n        setHardwareUsage(message.data.cpuUsage, message.data.cpuTemperature, message.data.ramUsage, message.data.diskUsage)\r\n      }\r\n    });\r\n  }, [setHardwareUsage])\r\n\r\n  useEffect(() => {\r\n    setBottomNaviValue(location.pathname)\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (authenticated === false) {\r\n      instance.postMessage({ token: null, text: 'stop' })\r\n    }\r\n    else {\r\n      instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start' });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authenticated])\r\n\r\n  const signout = () => {\r\n    setAuthenticated(false)\r\n    AuthService.logout()\r\n    handleMenuClose()\r\n    history.push('/login')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (matches) {\r\n      setOpen(false)\r\n    }\r\n  }, [matches])\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem component={Link}\r\n        to=\"/myaccount\"\r\n        onClick={handleMenuClose}>{t('AccountMenu.MyAccount')}</MenuItem>\r\n      <MenuItem onClick={() => signout()}>{t('AccountMenu.Logout')}</MenuItem>\r\n      {isAdmin() ?\r\n        <div>\r\n          <Divider />\r\n          <MenuItem component={Link}\r\n            onClick={handleMenuClose}\r\n            to=\"/useraccounts\">{t('AccountMenu.UserAccounts')}</MenuItem>\r\n        </div>\r\n        : null\r\n      }\r\n    </Menu >\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <Badge badgeContent={`${props.hardwareUsage.cpuUsage}%`} color=\"primary\" >\r\n          <IconButton aria-label=\"cpu usage\" color=\"inherit\" className={classes.hardwareUsage} >\r\n            <FontAwesomeIcon icon={faMicrochip} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>CPU</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${props.hardwareUsage.cpuTemperature}°C`} color=\"primary\">\r\n          <IconButton aria-label=\"cpu temperature\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faThermometerHalf} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>TEMP</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${props.hardwareUsage.ramUsage}%`} color=\"primary\" >\r\n          <IconButton aria-label=\"memory usage\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faMemory} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>MEM</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${props.hardwareUsage.diskUsage}%`} color=\"primary\">\r\n          <IconButton aria-label=\"space usage\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faHdd} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>DISK</p>\r\n      </MenuItem>\r\n      <Divider />\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>{t('AccountMenu.Profile')}</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Switch>\r\n        <Route path=\"/login\" render={() => <LoginPage />} />\r\n        <PrivateRoute path=\"/\">\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n              })}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, {\r\n                    [classes.hide]: open,\r\n                    [classes.hide]: matches\r\n                  })}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                  Sidiro IoT\r\n                </Typography>\r\n                <div className={classes.sectionDesktop}>\r\n                  <Typography variant=\"body1\">CPU</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuUsage} unit=\"%\" />\r\n                  <Typography variant=\"body1\">TEMP</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuTemperature} unit=\"°C\" />\r\n                  <Typography variant=\"body1\">MEM</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.ramUsage} unit=\"%\" />\r\n                  <Typography variant=\"body1\">DISK</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.diskUsage} unit=\"%\" />\r\n                </div>\r\n                <IconButton\r\n                  className={classes.loginButton}\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <div className={classes.sectionMobile}>\r\n                  <IconButton\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <MoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n              })}\r\n              classes={{\r\n                paper: clsx({\r\n                  [classes.drawerOpen]: open,\r\n                  [classes.drawerClose]: !open,\r\n                }),\r\n              }}\r\n            >\r\n              <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                <ListItem button component={Link} to=\"/\" selected={location.pathname === \"/\" ? true : false} >\r\n                  <ListItemIcon>\r\n                    <DeviceHubIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Devices')} />\r\n                </ListItem>\r\n                <ListItem button component={Link} to=\"/settings\" selected={location.pathname === \"/settings\" ? true : false} >\r\n                  <ListItemIcon>\r\n                    <SettingsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Settings')} />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button onClick={() => props.setLanguageDialogOpen(true)}>\r\n                  <ListItemIcon>\r\n                    <LanguageIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Language')} />\r\n                </ListItem>\r\n              </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n              <div className={classes.toolbar} />\r\n              <DrawerRoutes />\r\n            </main>\r\n            <BottomNavigation\r\n              showLabels={false}\r\n              className={classes.bottomNavi}\r\n              value={bottomNaviValue}\r\n            >\r\n              <BottomNavigationAction value=\"/\" label={t('Drawer.Devices')} icon={<DeviceHubIcon />} component={Link} to=\"/\" />\r\n              <BottomNavigationAction value=\"/settings\" label={t('Drawer.Settings')} icon={<ViewArrayIcon />} component={Link} to=\"/settings\" />\r\n              <BottomNavigationAction label={t('Drawer.Language')} icon={<LanguageIcon />} onClick={() => props.setLanguageDialogOpen(true)} />\r\n            </BottomNavigation>\r\n          </React.Fragment>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hardwareUsage: state.HardwareUsageReducer,\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n  setHardwareUsage,\r\n  setAuthenticated,\r\n  setCreateAccountDialogOpen\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniDrawer);","import { SET_LANGUAGE_DIALOG_OPEN } from '../actions/LanguageDialog.action';\r\n\r\nconst initialState = {\r\n    open: false,\r\n}\r\n\r\nexport const LanguageDialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LANGUAGE_DIALOG_OPEN:\r\n            return {\r\n                ...state,\r\n                open: action.open\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_UNIVERSAL_TABS_NAME_INDEX } from '../actions/UniversalTabs.action';\r\n\r\nconst initialState = {\r\n    //tabs instances added dynamically\r\n}\r\n\r\nexport const UniversalTabsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_UNIVERSAL_TABS_NAME_INDEX:\r\n            return {\r\n                ...state,\r\n                [action.name]: action.index\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SELECT_DEVICE } from '../actions/DevicesList.action';\r\n\r\nconst initialState = {\r\n    selectedDeviceIndex: 0,\r\n    selectedDeviceName: 'MindSphere',\r\n    selectedDeviceType: 'mindsphere',\r\n    \r\n}\r\n\r\nexport const DevicesListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_DEVICE:\r\n            return {\r\n                ...state,\r\n                selectedDeviceIndex: action.deviceIndex,\r\n                selectedDeviceName: action.deviceName,\r\n                selectedDeviceType: action.deviceType\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_FORM_USERNAME, SET_FORM_PASSWORD, SET_FORM_USERNAME_ERROR, SET_FORM_PASSWORD_ERROR } from '../actions/LoginPage.action';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  usernameError: false,\r\n  password: '',\r\n  passwordError: false\r\n}\r\n\r\nexport const LoginPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FORM_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n      }\r\n    case SET_FORM_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case SET_FORM_USERNAME_ERROR:\r\n      return {\r\n        ...state,\r\n        usernameError: action.error\r\n      }\r\n    case SET_FORM_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        passwordError: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_ACCOUNT_FORM_CURRENT_PASSWORD, SET_ACCOUNT_FORM_NEW_PASSWORD } from '../actions/AccountPage.action';\r\n\r\nconst initialState = {\r\n  currentPassword: '',\r\n  newPassword: ''\r\n\r\n}\r\n\r\nexport const AccountPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACCOUNT_FORM_CURRENT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        currentPassword: action.password,\r\n      }\r\n    case SET_ACCOUNT_FORM_NEW_PASSWORD:\r\n      return {\r\n        ...state,\r\n        newPassword: action.password\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_HARDWARE_USAGE } from '../actions/HardwareUsage.action';\r\n\r\nconst initialState = {\r\n  cpuUsage: 0,\r\n  cpuTemperature: 0,\r\n  ramUsage: 0,\r\n  diskUsage: 0\r\n}\r\n\r\nexport const HardwareUsageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_HARDWARE_USAGE:\r\n      return {\r\n        ...state,\r\n        cpuUsage: action.cpuUsage,\r\n        cpuTemperature: action.cpuTemperature,\r\n        ramUsage: action.ramUsage,\r\n        diskUsage: action.diskUsage\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_AUTHENTICATED } from '../actions/Authentication.action';\r\n\r\nconst initialState = {\r\n  authed: false,\r\n}\r\n\r\nexport const AuthenticationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authed: action.authenticated,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  SET_CREATE_ACCOUNT_DIALOG_OPEN,\r\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT,\r\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR,\r\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR,\r\n  SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_EDIT_ID\r\n} from '../actions/CreateAccountDialog.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  type: 'create',\r\n  //form values\r\n  name: '',\r\n  nameError: false,\r\n  password: '',\r\n  passwordError: false,\r\n  newPassword: '',\r\n  editAccountId: '',\r\n  permissions: 1\r\n}\r\n\r\nexport const CreateAccountDialog = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CREATE_ACCOUNT_DIALOG_OPEN:\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n        type: action.dialogType ? action.dialogType : state.type\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT:\r\n      return {\r\n        ...state,\r\n        permissions: action.permissions\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR:\r\n      return {\r\n        ...state,\r\n        nameError: action.error\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR:\r\n      return {\r\n        ...state,\r\n        passwordError: action.error\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        newPassword: action.newpassword\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_EDIT_ID:\r\n      return {\r\n        ...state,\r\n        editAccountId: action.id\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_USER_ACCOUNTS_LIST } from '../actions/UserAccountsPage.action';\r\n\r\nconst initialState = {\r\n  accountsList: []\r\n}\r\n\r\nexport const UserAccountsPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_ACCOUNTS_LIST:\r\n      return {\r\n        ...state,\r\n        accountsList: action.list,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_SNACKBAR_TEXT, SET_SNACKBAR_SHOWN } from '../actions/Snackbar.action';\r\n\r\nconst initialState = {\r\n  text: '',\r\n  severity: '',\r\n  shown: false\r\n}\r\n\r\nexport const SnackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR_TEXT:\r\n      return {\r\n        ...state,\r\n        text: action.text,\r\n        severity: action.severity\r\n      }\r\n    case SET_SNACKBAR_SHOWN:\r\n      return {\r\n        ...state,\r\n        shown: action.shown\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, SET_CONFIRM_DELETE_USER_DIALOG_OPEN } from '../actions/ConfirmDeleteUserDialog.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  username: '',\r\n  id: ''\r\n}\r\n\r\nexport const ConfirmDeleteUserDialogReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONFIRM_DELETE_USER_DIALOG_OPEN:\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      }\r\n    case SET_CONFIRM_DELETE_USER_DIALOG_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        id: action.id\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_ALL_DEVICES } from '../actions/DevicesSelectionPage.action';\r\n\r\nconst initialState = {\r\n  devices: []\r\n}\r\n\r\nexport const DevicesSelectionPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ALL_DEVICES:\r\n      return {\r\n        ...state,\r\n        devices: action.devices\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { LanguageDialogReducer } from './LanguageDialog.reducer';\r\nimport { UniversalTabsReducer } from './UniversalTabs.reducer';\r\nimport { DevicesListReducer } from './DevicesList.reducer';\r\nimport { LoginPageReducer } from './LoginPage.reducer';\r\nimport { AccountPageReducer } from './AccountPage.reducer';\r\nimport { HardwareUsageReducer } from './HardwareUsage.reducer';\r\nimport { AuthenticationReducer } from './Authentication.reducer';\r\nimport { CreateAccountDialog } from './CreateAccountDialog.reducer';\r\nimport { UserAccountsPageReducer } from './UserAccountsPage.reducer';\r\nimport { SnackbarReducer } from './Snackbar.reducer';\r\nimport { ConfirmDeleteUserDialogReducer } from './ConfirmDeleteUserDialog.reducer';\r\nimport { DevicesSelectionPageReducer } from './DevicesSelectionPage.reducer';\r\n\r\nexport default combineReducers({\r\n  LanguageDialogReducer,\r\n  UniversalTabsReducer,\r\n  DevicesListReducer,\r\n  LoginPageReducer,\r\n  AccountPageReducer,\r\n  HardwareUsageReducer,\r\n  AuthenticationReducer,\r\n  CreateAccountDialog,\r\n  UserAccountsPageReducer,\r\n  SnackbarReducer,\r\n  ConfirmDeleteUserDialogReducer,\r\n  DevicesSelectionPageReducer\r\n})","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { resources } from './translations';\r\n  \r\nconst options = {\r\n    // order and from where user language should be detected\r\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\r\n  \r\n    // keys or params to lookup language from\r\n    lookupQuerystring: 'lng',\r\n    lookupCookie: 'i18next',\r\n    lookupLocalStorage: 'i18nextLng',\r\n    lookupFromPathIndex: 0,\r\n    lookupFromSubdomainIndex: 0,\r\n  \r\n    // cache user language on\r\n    caches: ['localStorage', 'cookie'],\r\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n  \r\n    // optional htmlTag with lang attribute, the default is:\r\n    htmlTag: document.documentElement,\r\n  \r\n    // only detect languages that are in the whitelist\r\n    checkWhitelist: true,\r\n  \r\n    // fallback to a similar whitelist language\r\n    // Example 1: Browser language is 'es'\r\n    // if 'es' is not found in whitelist, first fallback to any whitelist language that starts with 'es-', then fallback to fallbackLng ('es' -> 'es-*' -> fallbackLng)\r\n    // Example 2: Browser language is 'es-MX'\r\n    // if 'es-MX' is not found in whitelist, first fallback to 'es', then fallback to 'es-*', then fallback to fallbackLng ('es-MX' -> 'es' -> 'es-*' -> fallbackLng)\r\n    checkForSimilarInWhitelist: false,\r\n  \r\n    // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\r\n    cookieOptions: {path:'/'}\r\n  }\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        detection: options,\r\n        fallbackLng: \"en\",\r\n\r\n        keySeparator: \".\", // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;","export const resources = {\r\n  en: {\r\n    translation: {\r\n      \"Drawer\": {\r\n        \"Devices\": \"Devices\",\r\n        \"Settings\": \"Settings\",\r\n        \"Language\": \"Language\"\r\n      },\r\n      \"LanguageSelection\": {\r\n        \"Label\": \"Choose application language\",\r\n        \"PolishLanguage\": \"Polish\",\r\n        \"EnglishLanguage\": \"English\"\r\n      },\r\n      \"DevicesSelectionPage\": {\r\n        \"DatapointsTab\": \"Data points\",\r\n        \"EdgecomputingTab\": \"Edge computing\",\r\n        \"EventsTab\": \"Events\",\r\n        \"DevicesTitle\": \"Devices\",\r\n        \"StatusConnected\": \"Connected\",\r\n        \"Status\": \"Status\",\r\n        \"Connect\": \"Connect\",\r\n        \"Disconnect\": \"Disconnect\"\r\n      },\r\n      \"UniversalTable\": {\r\n        \"RowsPerPage\": \"Rows per page\",\r\n        \"Of\": \"of\"\r\n      },\r\n      \"SettingsPage\": {\r\n        \"Title\": \"Settings\",\r\n        \"LoadButton\": \"Load\",\r\n        \"SaveButton\": \"Save\",\r\n        \"DropzoneText\": \"Drag & drop or click to select a file\"\r\n      },\r\n      \"LoginPage\": {\r\n        \"LoginTitle\": \"Please log in\",\r\n        \"LoginButton\": \"Login\",\r\n        \"FormLoginTextField\": \"Login\",\r\n        \"FormPasswordTextField\": \"Password\",\r\n        \"FormLoginTextFieldHelperText\": \"At least 3 characters\",\r\n        \"FormPasswordTextFieldHelperText\": \"At least 8 characters\",\r\n        \"InvalidLoginPassword\": \"Invalid login/password combination\"\r\n      },\r\n      \"AccountMenu\": {\r\n        \"MyAccount\": \"My Account\",\r\n        \"Logout\": \"Sign out\",\r\n        \"Profile\": \"Profile\",\r\n        \"UserAccounts\": \"User accounts\"\r\n      },\r\n      \"AccountPage\": {\r\n        \"Title\": \"Account settings\",\r\n        \"NameTextField\": \"Name\",\r\n        \"CurrentPasswordTextField\": \"Current password\",\r\n        \"NewPasswordTextField\": \"New password\",\r\n        \"ChangePasswordButton\": \"Change password\",\r\n        \"PasswordHelperError8characters\": \"Password must consist of at least 8 characters\",\r\n        \"PasswordHelperErrorSamePasswords\": \"Current password and new password can't be the same\"\r\n      },\r\n      \"CreateAccountDialog\": {\r\n        \"TitleCreate\": \"Create new account\",\r\n        \"TitleEdit\": \"Edit account\",\r\n        \"Cancel\": \"Cancel\",\r\n        \"Create\": \"Create\",\r\n        \"Update\": \"Update\",\r\n        \"NameTextField\": \"Name\",\r\n        \"PasswordTextField\": \"Password\",\r\n        \"NewPasswordTextField\": \"New password\",\r\n        \"PermissionsSelect\": \"Permissions\",\r\n        \"HelperTextName\": \"At least 3 characters\",\r\n        \"HelperTextPassword\": \"At least 8 characters\",\r\n        \"AccountBeingEditedSubtitle\": \"You are editing an account with ID: \"\r\n      },\r\n      \"UserAccountsPage\": {\r\n        \"CreateUser\": \"Create user\",\r\n        \"IdColumn\": \"ID\",\r\n        \"NameColumn\": \"Name\",\r\n        \"PermissionsColumn\": \"Permissions\",\r\n        \"ActionColumn\": \"Actions\",\r\n        \"TooltipDelete\": \"Delete\",\r\n        \"TooltipEdit\": \"Edit\"\r\n      },\r\n      \"Snackbar\": {\r\n        \"SuccessfulUserCreation\": \"User created successfully\",\r\n        \"SuccessfulUserDeletion\": \"User deleted successfully\",\r\n        \"SuccessfulUserEdit\": \"User edited successfully\",\r\n        \"SuccessfulPasswordChange\": \"Password changed successfully\",\r\n        \"UnsuccessfulPasswordChange\": \"Current password is invalid\",\r\n        \"UnsuccessfulUserEdit\": \"User editing failed\",\r\n        \"SuccessfulFileUpload\": \"File sent successfully\",\r\n        \"UnsuccessfulFileUpload403\": \"Only admin type accounts have permission to send configuration file\",\r\n        \"UnsuccessfulFileUpload400\": \"Invalid file contents\",\r\n        \"UnknownError\": \"Unknown error occured. Try again.\",\r\n        \"Generic403\": \"Access forbidden\"\r\n      },\r\n      \"ConfirmDeleteUserDialog\": {\r\n        \"Title\": \"Please confirm deletion. The process is irreversible.\",\r\n        \"AccountToBeDeleted\": \"The following account is going to be deleted: \",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Cancel\": \"Cancel\"\r\n      }\r\n    }\r\n  },\r\n  pl: {\r\n    translation: {\r\n      \"Drawer\": {\r\n        \"Devices\": \"Urządzenia\",\r\n        \"Settings\": \"Ustawienia\",\r\n        \"Language\": \"Język\"\r\n      },\r\n      \"LanguageSelection\": {\r\n        \"Label\": \"Wybierz język aplikacji\",\r\n        \"PolishLanguage\": \"Polski\",\r\n        \"EnglishLanguage\": \"Angielski\"\r\n      },\r\n      \"DevicesSelectionPage\": {\r\n        \"DatapointsTab\": \"Data pointy\",\r\n        \"EdgecomputingTab\": \"Edge computing\",\r\n        \"EventsTab\": \"Zdarzenia\",\r\n        \"DevicesTitle\": \"Urządzenia\",\r\n        \"StatusConnected\": \"Połączony\",\r\n        \"Status\": \"Stan\",\r\n        \"Connect\": \"Połącz\",\r\n        \"Disconnect\": \"Rozłącz\"\r\n      },\r\n      \"UniversalTable\": {\r\n        \"RowsPerPage\": \"Wierszy na stronę\",\r\n        \"Of\": \"z\"\r\n      },\r\n      \"SettingsPage\": {\r\n        \"Title\": \"Ustawienia\",\r\n        \"LoadButton\": \"Wczytaj\",\r\n        \"SaveButton\": \"Zapisz\",\r\n        \"DropzoneText\": \"Przeciągnij i upuść tutaj lub kliknij, aby wybrać plik\"\r\n      },\r\n      \"LoginPage\": {\r\n        \"LoginTitle\": \"Zaloguj się\",\r\n        \"LoginButton\": \"Zaloguj\",\r\n        \"FormLoginTextField\": \"Login\",\r\n        \"FormPasswordTextField\": \"Hasło\",\r\n        \"FormLoginTextFieldHelperText\": \"Co najmniej 3 znaki\",\r\n        \"FormPasswordTextFieldHelperText\": \"Co najmniej 8 znaków\",\r\n        \"InvalidLoginPassword\": \"Nieprawidłowa nazwa lub hasło\"\r\n      },\r\n      \"AccountMenu\": {\r\n        \"MyAccount\": \"Moje konto\",\r\n        \"Logout\": \"Wyloguj\",\r\n        \"Profile\": \"Profil\",\r\n        \"UserAccounts\": \"Konta użytkowników\"\r\n      },\r\n      \"AccountPage\": {\r\n        \"Title\": \"Ustawienia konta\",\r\n        \"NameTextField\": \"Nazwa\",\r\n        \"CurrentPasswordTextField\": \"Aktualne hasło\",\r\n        \"NewPasswordTextField\": \"Nowe hasło\",\r\n        \"ChangePasswordButton\": \"Zmień hasło\",\r\n        \"PasswordHelperError8characters\": \"Hasło musi się składać z co najmniej 8 znaków\",\r\n        \"PasswordHelperErrorSamePasswords\": \"Nowe hasło nie może być takie same jak aktualne\"\r\n      },\r\n      \"CreateAccountDialog\": {\r\n        \"TitleCreate\": \"Utwórz nowe konto\",\r\n        \"TitleEdit\": \"Edytuj konto\",\r\n        \"Cancel\": \"Anuluj\",\r\n        \"Create\": \"Utwórz\",\r\n        \"Update\": \"Aktualizuj\",\r\n        \"NameTextField\": \"Nazwa\",\r\n        \"PasswordTextField\": \"Hasło\",\r\n        \"NewPasswordTextField\": \"Nowe hasło\",\r\n        \"PermissionsSelect\": \"Uprawnienia\",\r\n        \"HelperTextName\": \"Co najmniej 3 znaki\",\r\n        \"HelperTextPassword\": \"Co najmniej 8 znaków\",\r\n        \"AccountBeingEditedSubtitle\": \"Edytujesz konto o następującym ID: \"\r\n      },\r\n      \"UserAccountsPage\": {\r\n        \"CreateUser\": \"Utwórz użytkownika\",\r\n        \"IdColumn\": \"ID\",\r\n        \"NameColumn\": \"Nazwa\",\r\n        \"PermissionsColumn\": \"Uprawnienia\",\r\n        \"ActionColumn\": \"Akcje\",\r\n        \"TooltipDelete\": \"Usuń\",\r\n        \"TooltipEdit\": \"Edytuj\"\r\n      },\r\n      \"Snackbar\": {\r\n        \"SuccessfulUserCreation\": \"Użytkownik pomyślnie utworzony\",\r\n        \"SuccessfulUserDeletion\": \"Użytkownik pomyślnie usunięty\",\r\n        \"SuccessfulUserEdit\": \"Edytowano pomyślnie\",\r\n        \"SuccessfulPasswordChange\": \"Zmieniono hasło pomyślnie\",\r\n        \"UnsuccessfulPasswordChange\": \"Aktualne hasło jest nieprawidłowe\",\r\n        \"UnsuccessfulUserEdit\": \"Nie powiodła się edycja użytkownika\",\r\n        \"SuccessfulFileUpload\": \"Pomyślnie przesłano plik\",\r\n        \"UnsuccessfulFileUpload403\": \"Tylko konta admina mają uprawnienia do wysyłania pliku konfiguracyjnego\",\r\n        \"UnsuccessfulFileUpload400\": \"Nieprawidłowa zawartość pliku\",\r\n        \"UnknownError\": \"Wystąpił nieznany błąd. Spróbuj ponownie.\",\r\n        \"Generic403\": \"Brak uprawnień\"\r\n      },\r\n      \"ConfirmDeleteUserDialog\": {\r\n        \"Title\": \"Proszę potwierdzić usunięcie. Ten proces jest nieodwracalny.\",\r\n        \"AccountToBeDeleted\": \"Zostanie usunięte następujące konto: \",\r\n        \"Confirm\": \"Potwierdź\",\r\n        \"Cancel\": \"Anuluj\"\r\n      }\r\n    }\r\n  }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  }\r\n});\r\n\r\n function LanguageDialog(props) {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n  const chooseLanguage = (language) => {\r\n    props.setLanguageDialogOpen(false)\r\n    i18n.changeLanguage(language)\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={()=>props.setLanguageDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={props.open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{t('LanguageSelection.Label')}</DialogTitle>\r\n      <List>\r\n        <ListItem button onClick={()=>chooseLanguage('pl')}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              PL\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={t('LanguageSelection.PolishLanguage')} />\r\n        </ListItem>\r\n        <ListItem button onClick={()=>chooseLanguage('en')}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              EN\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={t('LanguageSelection.EnglishLanguage')} />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.LanguageDialogReducer.open\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageDialog);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setCreateAccountDialogNewpasswordTextfield\r\n} from '../actions/CreateAccountDialog.action';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserService from '../services/user.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CreateAccountDialog({ open,\r\n  type,\r\n  name,\r\n  nameError,\r\n  password,\r\n  passwordError,\r\n  permissions,\r\n  editAccountId,\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setSnackbarShown,\r\n  setSnackbarText,\r\n  setUserAccountsList }) {\r\n\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  let history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    const val = event.target.value;\r\n    const name = event.target.name;\r\n    setCreateAccountDialogPasswordTextfieldError(false)\r\n    setCreateAccountDialogNameTextfieldError(false)\r\n\r\n    if (name === 'name') {\r\n      setCreateAccountDialogNameTextfield(val)\r\n    }\r\n    else if (name === 'password') {\r\n      setCreateAccountDialogPasswordTextfield(val)\r\n    }\r\n    else if (name === 'newpassword') {\r\n      setCreateAccountDialogNewpasswordTextfield(val)\r\n    }\r\n    else {\r\n      setCreateAccountDialogPermissionsSelect(val)\r\n    }\r\n  }\r\n\r\n  const disableButton = () => {\r\n    if (type === 'edit') {\r\n      if (password.length > 0 && password.length < 8) {\r\n        return true\r\n      }\r\n    }\r\n    else {\r\n      if (password.length < 8 || name.length < 3) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const register = () => {\r\n    UserService.register(name, password, permissions).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulUserCreation'), 'success')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setCreateAccountDialogOpen(false)\r\n        UserService.getAllAccounts().then(res => {\r\n          setUserAccountsList(res.data)\r\n        })\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setCreateAccountDialogOpen(false)\r\n      }\r\n      else {\r\n        setCreateAccountDialogNameTextfieldError(true)\r\n        setCreateAccountDialogPasswordTextfieldError(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const edit = () => {\r\n    UserService.editAccount(editAccountId, name, permissions, password === '' ? false : password).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulUserEdit'), 'success')\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogOpen(false)\r\n        UserService.getAllAccounts().then(res => {\r\n          setUserAccountsList(res.data)\r\n        })\r\n        //if edited account is currently logged in\r\n        if (res._id === AuthService.getCurrentUser()._id) {\r\n          AuthService.logout()\r\n          history.push('/login')\r\n        }\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setCreateAccountDialogOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">{type === 'create' ? t('CreateAccountDialog.TitleCreate') : t('CreateAccountDialog.TitleEdit')}</DialogTitle>\r\n      <DialogContent>\r\n        {type === 'edit' ?\r\n          <DialogContentText>\r\n            {t('CreateAccountDialog.AccountBeingEditedSubtitle')}<strong>{editAccountId}</strong>\r\n          </DialogContentText>\r\n          : null}\r\n\r\n        <form className={classes.form}>\r\n          {AuthService.getCurrentUser() !== null ?\r\n            <div>\r\n              <TextField\r\n                disabled={type === 'edit' ? true : false}\r\n                error={nameError}\r\n                helperText={nameError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormLoginTextFieldHelperText')}\r\n                onChange={handleChange}\r\n                name=\"name\"\r\n                value={name}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label={t('CreateAccountDialog.NameTextField')}\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormPasswordTextFieldHelperText')}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n                value={password}\r\n                name=\"password\"\r\n                margin=\"dense\"\r\n                id=\"password\"\r\n                label={t('CreateAccountDialog.PasswordTextField')}\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"permissions\">{t('CreateAccountDialog.PermissionsSelect')}</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"permissions\"\r\n                  id=\"permissions-select\"\r\n                  name=\"permissions\"\r\n                  value={permissions}\r\n                  onChange={handleChange}\r\n                >\r\n                  {AuthService.getCurrentUser().permissions >= 3 ? <MenuItem value={1}>User</MenuItem> : null}\r\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={3}>Admin</MenuItem> : null}\r\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={7}>SuperAdmin</MenuItem> : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            : null}\r\n\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setCreateAccountDialogOpen(false)} color=\"primary\">\r\n          {t('CreateAccountDialog.Cancel')}\r\n        </Button>\r\n        <Button disabled={disableButton()} onClick={() => type === 'edit' ? edit() : register()} color=\"primary\">\r\n          {type === 'create' ? t('CreateAccountDialog.Create') : t('CreateAccountDialog.Update')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.CreateAccountDialog.open,\r\n    type: state.CreateAccountDialog.type,\r\n    name: state.CreateAccountDialog.name,\r\n    nameError: state.CreateAccountDialog.nameError,\r\n    password: state.CreateAccountDialog.password,\r\n    passwordError: state.CreateAccountDialog.passwordError,\r\n    permissions: state.CreateAccountDialog.permissions,\r\n    editAccountId: state.CreateAccountDialog.editAccountId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setSnackbarText,\r\n  setSnackbarShown,\r\n  setUserAccountsList,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountDialog);","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { setSnackbarShown } from '../actions/Snackbar.action';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CustomizedSnackbars(props) {\r\n  \r\n  const classes = useStyles();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    props.setSnackbarShown(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={props.shown} autoHideDuration={5000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.severity}>\r\n          {props.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    text: state.SnackbarReducer.text,\r\n    shown: state.SnackbarReducer.shown,\r\n    severity: state.SnackbarReducer.severity\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedSnackbars);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\r\nimport UserService from '../services/user.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AlertDialog(props) {\r\n  const { t } = useTranslation();\r\n  let history = useHistory();\r\n\r\n  const deletePerm = () => {\r\n    UserService.deleteAccount(props.accountIdToBeDeleted).then(res => {\r\n      if (res.status === 200) {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.SuccessfulUserDeletion'));\r\n        props.setSnackbarShown(true);\r\n        //if edited account is currently logged in\r\n        if (props.accountIdToBeDeleted === AuthService.getCurrentUser()._id) {\r\n          AuthService.logout()\r\n          history.push('/login')\r\n        }\r\n        else {\r\n          UserService.getAllAccounts().then(res => {\r\n            props.setUserAccountsList(res.data)\r\n          })\r\n        }\r\n      }\r\n      else if (res.status === 403) {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.Generic403'));\r\n        props.setSnackbarShown(true);\r\n      }\r\n      else {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.UnknownError'));\r\n        props.setSnackbarShown(true);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={() => props.setConfirmDeleteUserDialogOpen(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{t('ConfirmDeleteUserDialog.Title')}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {t('ConfirmDeleteUserDialog.AccountToBeDeleted')}<strong>{props.accountNameToBeDeleted}</strong>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => deletePerm()} color=\"secondary\">\r\n          {t('ConfirmDeleteUserDialog.Confirm')}\r\n        </Button>\r\n        <Button onClick={() => props.setConfirmDeleteUserDialogOpen(false)} color=\"primary\" autoFocus>\r\n          {t('ConfirmDeleteUserDialog.Cancel')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.ConfirmDeleteUserDialogReducer.open,\r\n    accountNameToBeDeleted: state.ConfirmDeleteUserDialogReducer.username,\r\n    accountIdToBeDeleted: state.ConfirmDeleteUserDialogReducer.id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setUserAccountsList,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialog);","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Drawer from './components/Drawer.component';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/Root.reducer\";\nimport './i18n';\nimport LanguageDialog from './components/LanguageSelectionDialog.component';\nimport CreateAccountDialog from './components/CreateAccountDialog.component';\nimport Snackbar from './components/Snackbar.component';\nimport ConfirmDeleteUserDialog from './components/ConfirmDeleteUserDialog.component';\n\nconst store = createStore(rootReducer);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33a095',\n      main: '#00897b',\n      dark: '#005f56',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Drawer />\n            <CreateAccountDialog/>\n            <ConfirmDeleteUserDialog/>\n          </Router>\n          <LanguageDialog/>\n          <Snackbar/>\n        </Provider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}