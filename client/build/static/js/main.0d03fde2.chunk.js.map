{"version":3,"sources":["workers/devices.worker.js","workers/hwinfo.worker.js","actions/Settings.action.js","components/Dropzone.component.js","services/file.service.js","actions/Snackbar.action.js","actions/Backdrop.action.js","services/ipconfig.service.js","components/Card.component.js","actions/IPconfigDialog.action.js","components/Settings.component.js","actions/DevicesList.action.js","components/DevicesList.component.js","actions/UniversalTabs.action.js","components/UniversalTabs.component.js","actions/DevicesSelectionPage.action.js","components/CollapsibleTable.component.js","services/device.service.js","components/DevicesSelectionPage.component.js","services/activate.service.js","actions/AccountPage.action.js","services/user.service.js","components/AccountPage.component.js","components/UniversalTable.component.js","actions/UserAccountsPage.action.js","actions/CreateAccountDialog.action.js","actions/ConfirmDeleteUserDialog.action.js","services/auth.service.js","components/UserAccountsPage.component.js","services/isAuthenticated.service.js","actions/Authentication.action.js","routes/ProtectedAdmin.routes.js","routes/DrawerRoutes.routes.js","actions/LanguageDialog.action.js","actions/LoginPage.action.js","components/LoginPage.component.js","actions/HardwareUsage.action.js","routes/protected.routes.js","components/CircularProgress.component.js","components/Drawer.component.js","reducers/LanguageDialog.reducer.js","reducers/UniversalTabs.reducer.js","reducers/DevicesList.reducer.js","reducers/LoginPage.reducer.js","reducers/AccountPage.reducer.js","reducers/HardwareUsage.reducer.js","reducers/Authentication.reducer.js","reducers/CreateAccountDialog.reducer.js","reducers/UserAccountsPage.reducer.js","reducers/Snackbar.reducer.js","reducers/ConfirmDeleteUserDialog.reducer.js","reducers/DevicesSelectionPage.reducer.js","reducers/Settings.reducer.js","reducers/Backdrop.reducer.js","reducers/IPConfig.reducer.js","reducers/Root.reducer.js","i18n.js","translations.js","components/LanguageSelectionDialog.component.js","components/CreateAccountDialog.component.js","components/Snackbar.component.js","components/ConfirmDeleteUserDialog.component.js","components/Backdrop.component.js","components/IPConfigDialog.component.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","SET_CONFIG_FILE","SET_IP_CONFIGURATION","setConfigFile","file","type","setIPConfiguration","ipconfig","useStyles","makeStyles","theme","dropzoneText","color","mapDispatchToProps","connect","classes","t","useTranslation","onDrop","useCallback","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","className","Typography","variant","API_URL","formData","FormData","append","fetch","method","headers","JSON","parse","localStorage","getItem","accessToken","body","response","status","json","configFile","data","fileName","a","document","createElement","appendChild","stringify","blob","Blob","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","SET_SNACKBAR_TEXT","SET_SNACKBAR_SHOWN","setSnackbarText","text","severity","setSnackbarShown","shown","SET_BACKDROP_OPEN","SET_BACKDROP_CLOSED","setBackdropOpen","setBackdropClosed","ipConfig","networkInterface","config","MediaCard","props","Card","CardActionArea","onClick","buttonAction","CardContent","gutterBottom","component","title","CardActions","Button","size","buttonText","SET_IP_CONFIG_DIALOG_OPEN","SET_IP_CONFIG_DIALOG_IP_ADDRESS","SET_IP_CONFIG_DIALOG_SUBNET_MASK","SET_IP_CONFIG_DIALOG_GATEWAY","SET_IP_CONFIG_DIALOG_DHCP","SET_IP_CONFIG_DIALOG_DNS_PRIMARY","SET_IP_CONFIG_DIALOG_DNS_SECONDARY","setIpConfigDialogOpen","open","interfaceName","divider","marginTop","spacing","marginBottom","strong","fontWeight","subTitle","state","SettingsReducer","useEffect","IPConfigService","getIpConfig","then","res","Fragment","Grid","container","item","xs","sm","md","fullWidth","FileService","uploadConfigFile","Divider","lg","downloadConfigFile","saveFileAs","undefined","dhcp","ipAddress","subnetMask","gateway","dns","Object","entries","renderNetworkInterfaces","SELECT_DEVICE","root","width","position","overflow","maxHeight","active","inactive","selectDevice","deviceIndex","deviceID","deviceType","selectedDevice","DevicesListReducer","allDevices","DevicesSelectionPageReducer","devices","selectedDeviceID","length","firstEntry","id","List","aria-label","map","dev","index","properties","isActive","isConnected","ListItem","button","selected","selectedDeviceIndex","ListItemIcon","ListItemText","primary","SET_UNIVERSAL_TABS_NAME_INDEX","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","p","flexGrow","defaultRoot","noElevation","boxShadow","tabpanel","setUniversalTabsNameIndex","tabsInstance","UniversalTabsReducer","defaultMargin","AppBar","Tabs","onChange","event","scrollButtons","indicatorColor","textColor","tabs","tab","i","Tab","label","content","SET_ALL_DEVICES","REFRESH_DEVICE_PARAMS","TOGGLE_TABLE_VIEW","useRowStyles","borderBottom","isNotObject","notObject","element","every","Row","React","useState","setOpen","objects","setObjects","row","columns","obj","forEach","cell","push","createCollapsedTable","cols","rows","col","TableRow","TableCell","IconButton","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","margin","Table","TableHead","TableBody","SimpleRow","toString","CollapsibleTable","TableContainer","Paper","filter","column","instance","deviceData","activate","device","onboarded","offboarded","alignTop","verticalAlign","devicesTitleInline","marginTopTable","advancedViewTables","float","setAllDevices","refreshDeviceParams","params","toggleTableView","authenticated","AuthenticationReducer","authed","tableView","fetchDevices","DeviceService","getDevices","arr","key","reformatDeviceDataToReducer","refreshDeviceData","message","worker","addEventListener","postMessage","token","removeEventListener","terminate","converter","tables","Array","isArray","templates","isNaN","parseFloat","toFixed","lastValueTick","formatDateTime","Date","portNumber","boarded","dataStorageSize","eventStorageSize","numberOfDataFilesToSend","numberOfEventFilesToSend","numberOfSendDataRetries","numberOfSendEventRetries","sendDataFileInterval","sendEventFileInterval","rack","slot","unit","defaultValue","factor","sampleTime","calculationInterval","bitNumber","byteNumber","expression","parameters","offset","read","write","readAsSingle","writeAsSingle","readFCode","writeFCode","dbNumber","memoryType","highLimit","hysteresis","texts","timeOffDelay","timeOnDelay","lowLimit","entityId","sourceType","sourceId","source","sendingInterval","datapointId","dataConverter","qualityCodeEnabled","traverseObject","tableProperties","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getDate","getMonth","getFullYear","isBoarded","selectedDeviceType","activateDevice","ActivateService","justify","xl","Zoom","transitionDelay","Tooltip","placement","converted","firstLevelTables","table","traverse","secondLevelTables","createTabs","disabled","SET_ACCOUNT_FORM_CURRENT_PASSWORD","SET_ACCOUNT_FORM_NEW_PASSWORD","userData","permissions","newPassword","bodyWithPasswords","password","oldPassword","username","textAlign","loginButton","form","setAccountFormCurrentPassword","setAccountFormNewPassword","currentPassword","AccountPageReducer","accountDetails","setAccountDetails","getMyAccountDetails","UserService","verify","textfield","lengthErrorText","similarityErrorText","error","direction","alignContent","Chip","avatar","Avatar","noValidate","autoComplete","TextField","e","target","helperText","editMyPassword","useStyles1","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","Math","ceil","max","useStyles2","CustomPaginationActionsTable","noPagination","setPage","setRowsPerPage","emptyRows","min","colIndex","rowIndex","cellIndex","slice","height","TableFooter","TablePagination","labelDisplayedRows","from","to","labelRowsPerPage","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","SET_USER_ACCOUNTS_LIST","setUserAccountsList","list","SET_CREATE_ACCOUNT_DIALOG_OPEN","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT","SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_EDIT_ID","setCreateAccountDialogOpen","dialogType","setCreateAccountDialogNameTextfield","setCreateAccountDialogPermissionsSelect","SET_CONFIRM_DELETE_USER_DIALOG_OPEN","SET_CONFIRM_DELETE_USER_DIALOG_USERNAME","setConfirmDeleteUserDialogOpen","setConfirmDeleteUserDialogUsername","get","setItem","Error","removeItem","icons","setCreateAccountDialogEditId","accountsList","UserAccountsPageReducer","getAllAccounts","checkPermissions","currentUser","AuthService","getCurrentUser","acc","_id","startIcon","isAuthenticated","user","isAdmin","SET_AUTHENTICATED","setAuthenticated","rest","render","location","pathname","DrawerRoutes","path","SET_LANGUAGE_DIALOG_OPEN","setLanguageDialogOpen","SET_LOGIN_FORM_USERNAME","SET_LOGIN_FORM_PASSWORD","SET_LOGIN_FORM_USERNAME_ERROR","SET_LOGIN_FORM_PASSWORD_ERROR","setLoginFormUsername","setLoginFormPassword","contentDesktop","contentMobile","fab","top","right","setLoginFormUsernameError","setLoginFormPasswordError","login","LoginPageReducer","loginError","usernameError","passwordError","matches","useMediaQuery","breakpoints","down","history","useHistory","tryLogin","catch","handleKeyDown","controlFormFields","field","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","Fab","align","onKeyDown","SET_HARDWARE_USAGE","CircularProgressWithLabel","percentColors","pct","r","g","b","marginRight","CircularProgress","thickness","animationDuration","lower","upper","range","rangePct","pctLower","pctUpper","floor","join","getColorForPercentage","left","bottom","justifyContent","round","drawerWidth","appBar","zIndex","drawer","create","easing","sharp","appBarShift","menuButton","hide","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","paddingLeft","paddingRight","bottomNavi","borderTop","up","hardwareUsage","sectionDesktop","sectionMobile","setHardwareUsage","cpuUsage","cpuTemperature","ramUsage","diskUsage","HardwareUsageReducer","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","bottomNaviValue","setBottomNaviValue","useLocation","isMenuOpen","Boolean","isMobileMenuOpen","setHardwareStats","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Link","logout","num","mobileMenuId","renderMobileMenu","Badge","badgeContent","icon","faMicrochip","faThermometerHalf","faMemory","faHdd","aria-controls","aria-haspopup","CssBaseline","clsx","Toolbar","edge","noWrap","Drawer","paper","BottomNavigation","showLabels","BottomNavigationAction","initialState","nameError","editAccountId","dnsPrimary","dnsSecondary","combineReducers","LanguageDialogReducer","action","CreateAccountDialog","newpassword","SnackbarReducer","ConfirmDeleteUserDialogReducer","BackdropReducer","IPConfigReducer","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","documentElement","checkWhitelist","checkForSimilarInWhitelist","cookieOptions","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","pl","detection","fallbackLng","keySeparator","interpolation","escapeValue","blue","chooseLanguage","language","changeLanguage","Dialog","maxWidth","DialogTitle","ListItemAvatar","formControl","selectEmpty","setCreateAccountDialogPasswordTextfield","setCreateAccountDialogNameTextfieldError","setCreateAccountDialogPasswordTextfieldError","handleChange","val","DialogContent","DialogContentText","autoFocus","FormControl","InputLabel","Select","labelId","DialogActions","disableButton","editAccount","register","Alert","elevation","handleClose","reason","Snackbar","autoHideDuration","accountNameToBeDeleted","accountIdToBeDeleted","aria-describedby","deleteAccount","backdrop","Backdrop","visible","invisible","disconnectionWarning","setIpConfigDialogIpAddress","setIpConfigDialogSubnetMask","setIpConfigDialogGateway","setIpConfigDialogDHCP","setIpConfigDialogDNSPrimary","setIpConfigDialogDNSSecondary","checked","setIpConfig","httpReq","milliseconds","Promise","resolve","reject","setTimeout","err","port","reload","origin","FormGroup","FormControlLabel","control","Checkbox","store","createStore","rootReducer","createMuiTheme","palette","light","main","dark","contrastText","secondary","App","ThemeProvider","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0d03fde2.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"3205fa68b09a77991a63.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"3b693e3ceeda33523431.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export const SET_CONFIG_FILE = 'SET_CONFIG_FILE';\r\nexport const SET_IP_CONFIGURATION = 'SET_IP_CONFIGURATION';\r\n\r\nexport const setConfigFile = (file) => ({ type: SET_CONFIG_FILE, file: file })\r\nexport const setIPConfiguration = (ipconfig) => ({ type: SET_IP_CONFIGURATION, ipconfig: ipconfig })","import React, { useCallback, useMemo } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { setConfigFile } from '../actions/Settings.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropzoneText: {\r\n    color: 'rgb(140 140 140)'\r\n  },\r\n}));\r\n\r\nfunction Dropzone({ setConfigFile }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    // Do something with the files\r\n    setConfigFile(acceptedFiles[0])\r\n  }, [setConfigFile])\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({ onDrop, accept: 'application/JSON' });\r\n\r\n\r\n  const style = useMemo(() => {\r\n    const baseStyle = {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: '40px',\r\n      borderWidth: 2,\r\n      borderRadius: 2,\r\n      borderColor: 'rgb(187 187 187)',\r\n      borderStyle: 'dashed',\r\n      backgroundColor: 'rgb(255 255 255)',\r\n      outline: 'none',\r\n      transition: 'border .5s ease-in-out'\r\n    };\r\n\r\n    const activeStyle = {\r\n      borderColor: '#2196f3'\r\n    };\r\n\r\n    const acceptStyle = {\r\n      borderColor: '#00e676'\r\n    };\r\n\r\n    const rejectStyle = {\r\n      borderColor: '#ff1744'\r\n    };\r\n\r\n    return {\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {})\r\n    }\r\n\r\n  }, [\r\n    isDragActive,\r\n    isDragReject,\r\n    isDragAccept\r\n  ]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({ style })} className=\"dropzone\">\r\n        <input {...getInputProps()} />\r\n        <Typography variant=\"body1\" className={classes.dropzoneText}>{t('SettingsPage.DropzoneText')}</Typography>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setConfigFile\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Dropzone);","const API_URL = \"/api/configFile/\";\r\n\r\nclass FileService {\r\n  async uploadConfigFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n      body: formData\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async downloadConfigFile() {\r\n    const response = await fetch(API_URL, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      }\r\n    })\r\n    if (response.status === 200) {\r\n      const configFile = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: configFile\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  saveFileAs(data, fileName) {\r\n    var a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    var json = JSON.stringify(data),\r\n      blob = new Blob([json], { type: \"octet/stream\" }),\r\n      url = window.URL.createObjectURL(blob);\r\n    a.href = url;\r\n    a.download = fileName;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n\r\n  };\r\n}\r\n\r\nexport default new FileService();","export const SET_SNACKBAR_TEXT = 'SET_SNACKBAR_TEXT';\r\nexport const SET_SNACKBAR_SHOWN = 'SET_SNACKBAR_SHOWN';\r\n\r\nexport const setSnackbarText = (text, severity) => ({ type: SET_SNACKBAR_TEXT, text: text, severity: severity})\r\nexport const setSnackbarShown = (shown) => ({ type: SET_SNACKBAR_SHOWN, shown: shown})","export const SET_BACKDROP_OPEN = 'SET_BACKDROP_OPEN'\r\nexport const SET_BACKDROP_CLOSED = 'SET_BACKDROP_CLOSED'\r\n\r\nexport const setBackdropOpen = () => ({ type: SET_BACKDROP_OPEN })\r\nexport const setBackdropClosed = () => ({ type: SET_BACKDROP_CLOSED })","const API_URL = \"/api/ipConfig/\";\r\n\r\nclass IPConfigService {\r\n  async getIpConfig() {\r\n    const response = await fetch(`${API_URL}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      }\r\n    })\r\n    if (response.status === 200) {\r\n      const ipConfig = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: ipConfig\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n  async setIpConfig(networkInterface, config) {\r\n\r\n    const response = await fetch(`${API_URL}/${networkInterface}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify(config)\r\n    })\r\n    if (response.status === 200) {\r\n      const ipConfig = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: ipConfig\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new IPConfigService();","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function MediaCard(props) {\r\n  return (\r\n    <Card>\r\n      <CardActionArea onClick={props.buttonAction}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n          </Typography>\r\n          {props.body}\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={props.buttonAction}>\r\n          {props.buttonText}\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","export const SET_IP_CONFIG_DIALOG_OPEN = 'SET_IP_CONFIG_DIALOG_OPEN';\r\nexport const SET_IP_CONFIG_DIALOG_IP_ADDRESS = 'SET_IP_CONFIG_DIALOG_IP_ADDRESS';\r\nexport const SET_IP_CONFIG_DIALOG_SUBNET_MASK = 'SET_IP_CONFIG_DIALOG_SUBNET_MASK';\r\nexport const SET_IP_CONFIG_DIALOG_GATEWAY = 'SET_IP_CONFIG_DIALOG_GATEWAY';\r\nexport const SET_IP_CONFIG_DIALOG_DHCP = 'SET_IP_CONFIG_DIALOG_DHCP';\r\nexport const SET_IP_CONFIG_DIALOG_DNS_PRIMARY = 'SET_IP_CONFIG_DIALOG_DNS_PRIMARY';\r\nexport const SET_IP_CONFIG_DIALOG_DNS_SECONDARY = 'SET_IP_CONFIG_DIALOG_DNS_SECONDARY';\r\n\r\nexport const setIpConfigDialogOpen = (open, interfaceName = false) => ({ type: SET_IP_CONFIG_DIALOG_OPEN, open, interfaceName })\r\nexport const setIpConfigDialogIpAddress = (ipAddress) => ({ type: SET_IP_CONFIG_DIALOG_IP_ADDRESS, ipAddress })\r\nexport const setIpConfigDialogSubnetMask = (subnetMask) => ({ type: SET_IP_CONFIG_DIALOG_SUBNET_MASK, subnetMask })\r\nexport const setIpConfigDialogGateway = (gateway) => ({ type: SET_IP_CONFIG_DIALOG_GATEWAY, gateway })\r\nexport const setIpConfigDialogDHCP = (dhcp) => ({ type: SET_IP_CONFIG_DIALOG_DHCP, dhcp })\r\nexport const setIpConfigDialogDNSPrimary = (dnsPrimary) => ({ type: SET_IP_CONFIG_DIALOG_DNS_PRIMARY, dnsPrimary })\r\nexport const setIpConfigDialogDNSSecondary = (dnsSecondary) => ({ type: SET_IP_CONFIG_DIALOG_DNS_SECONDARY, dnsSecondary })","import React, { useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dropzone from './Dropzone.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FileService from '../services/file.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { connect } from 'react-redux';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConfigFile, setIPConfiguration } from '../actions/Settings.action';\r\nimport { setBackdropOpen, setBackdropClosed } from '../actions/Backdrop.action';\r\nimport IPConfigService from '../services/ipconfig.service';\r\nimport Card from '../components/Card.component';\r\nimport { setIpConfigDialogOpen } from '../actions/IPconfigDialog.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  divider: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  strong: {\r\n    fontWeight: 700\r\n  },\r\n  subTitle: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction Settings({ setSnackbarText, setSnackbarShown, file, setConfigFile, setBackdropOpen, setBackdropClosed, setIPConfiguration, ipconfig, setIpConfigDialogOpen }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    IPConfigService.getIpConfig().then(res => {\r\n      if (res.status === 200) {\r\n        setIPConfiguration(res.data)\r\n      }\r\n    })\r\n  }, [setIPConfiguration])\r\n\r\n  const getConfigFile = () => {\r\n    FileService.downloadConfigFile().then(res => {\r\n      if (res.status === 200) {\r\n        FileService.saveFileAs(res.data, 'projectSettings.json')\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const uploadFile = () => {\r\n    setBackdropOpen()\r\n    FileService.uploadConfigFile(file).then(res => {\r\n      setBackdropClosed()\r\n      //reset file after upload try\r\n      setConfigFile(null)\r\n\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulFileUpload'), 'success')\r\n        setSnackbarShown(true)\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else if (res.status === 400) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload400'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const renderNetworkInterfaces = () => {\r\n    for (const [, networkInterface] of Object.entries(ipconfig)) {\r\n      return <Card\r\n        title={networkInterface.name}\r\n        body={<React.Fragment>\r\n          {networkInterface.dhcp!==undefined?<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">DHCP: {networkInterface.dhcp === true ? t('SettingsPage.DHCPTrue'):t('SettingsPage.DHCPFalse')}</Typography>:null}\r\n          {networkInterface.ipAddress!==undefined?<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('SettingsPage.IPAddress')}: {networkInterface.ipAddress}</Typography>:null}\r\n          {networkInterface.subnetMask!==undefined?<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('SettingsPage.SubnetMask')}: {networkInterface.subnetMask}</Typography>:null}\r\n          {networkInterface.gateway!==undefined?<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('SettingsPage.Gateway')}: {networkInterface.gateway}</Typography>:null}\r\n          {networkInterface.dns!==undefined && networkInterface.dns[0]!==undefined?<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('IPConfigDialog.DNSPrimary')}: {networkInterface.dns[0]}</Typography>:null}\r\n          {networkInterface.dns!==undefined && networkInterface.dns[1]!==undefined?<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{t('IPConfigDialog.DNSSecondary')}: {networkInterface.dns[1]}</Typography>:null}\r\n        </React.Fragment>}\r\n        buttonText={t('SettingsPage.Edit')}\r\n        buttonAction={()=>setIpConfigDialogOpen(true, networkInterface.name)} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('SettingsPage.Title')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Dropzone />\r\n        </Grid>\r\n        {file !== null ?\r\n          <React.Fragment>\r\n            <Grid item xs={12}>\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{t('SettingsPage.FileName')}&emsp;</td>\r\n                    <td>{file.name}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{t('SettingsPage.FileSize')}&emsp;</td>\r\n                    <td>{file.size} B</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3} md={2}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => uploadFile()}\r\n                variant=\"outlined\" color=\"secondary\">{t('SettingsPage.UploadFile')}</Button>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3} md={2}>\r\n              <Button\r\n                fullWidth\r\n                onClick={() => setConfigFile(null)}\r\n                variant=\"outlined\" color=\"primary\">{t('SettingsPage.RemoveFile')}</Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Divider className={classes.divider} />\r\n            </Grid>\r\n\r\n          </React.Fragment>\r\n          : null}\r\n\r\n        <Grid item xs={6} sm={6} md={4} lg={2}>\r\n          <Button\r\n            onClick={() => getConfigFile()}\r\n            fullWidth variant=\"contained\" color=\"primary\">{t('SettingsPage.LoadButton')}</Button>\r\n        </Grid>\r\n        {ipconfig !== null ?\r\n          <React.Fragment>\r\n            <Grid item xs={12} className={classes.subTitle}>\r\n              <Typography variant=\"h4\">{t('SettingsPage.IPConfigTitle')}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\">{t('SettingsPage.NetworkInterfaces')}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              {renderNetworkInterfaces()}\r\n            </Grid>\r\n          </React.Fragment>\r\n          : null}\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    file: state.SettingsReducer.file,\r\n    ipconfig: state.SettingsReducer.ipconfig\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarText,\r\n  setSnackbarShown,\r\n  setConfigFile,\r\n  setBackdropOpen,\r\n  setBackdropClosed,\r\n  setIPConfiguration,\r\n  setIpConfigDialogOpen\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","export const SELECT_DEVICE = 'SELECT_DEVICE';\r\n\r\nexport const selectDevice = (deviceIndex, deviceID, deviceType) => ({ type: SELECT_DEVICE, deviceIndex: deviceIndex, deviceID: deviceID, deviceType: deviceType })","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport { connect } from 'react-redux';\r\nimport { selectDevice } from '../actions/DevicesList.action';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'relative',\r\n    overflow: 'auto',\r\n    maxHeight: '85vh',\r\n    //backgroundColor: theme.palette.background.paper,\r\n  },\r\n  active: {\r\n    color: 'green'\r\n  },\r\n  inactive: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nfunction SimpleList(props) {\r\n  const classes = useStyles();\r\n  const { allDevices, selectedDevice, selectDevice } = props;\r\n\r\n  useEffect(() => {\r\n    if(selectedDevice.selectedDeviceID === '' && allDevices.length>0) {\r\n      const firstEntry = Object.entries(allDevices[0])\r\n      selectDevice(0, firstEntry[0][1].id, firstEntry[0][1].type)\r\n    }\r\n  }, [allDevices, selectDevice, selectedDevice.selectedDeviceID])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"device selection\" >\r\n        {allDevices.map((dev, index) => {\r\n          const entries = Object.entries(dev)\r\n          for (const [, properties] of entries) {\r\n            const isActive = properties.isConnected !==undefined? properties.isConnected && properties.isActive : properties.isActive;\r\n            return (<ListItem key={index} button\r\n              selected={selectedDevice.selectedDeviceIndex === index ? true : false}\r\n              onClick={() => props.selectDevice(index, properties.id, properties.type)}>\r\n              <ListItemIcon>\r\n                {properties.type === 'MBDevice' ? <AssessmentIcon className={isActive ? classes.active : classes.inactive} />\r\n                  : properties.type === 'S7Device' ? <MemoryIcon className={isActive ? classes.active : classes.inactive} />\r\n                    : properties.type === 'InternalDevice' ? <StorageIcon className={isActive ? classes.active : classes.inactive} />\r\n                      : <CloudIcon className={isActive ? classes.active : classes.inactive} />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={properties.id} />\r\n            </ListItem>)\r\n          }\r\n          return null\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDevice: state.DevicesListReducer,\r\n    allDevices: state.DevicesSelectionPageReducer.devices\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  selectDevice\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleList)","export const SET_UNIVERSAL_TABS_NAME_INDEX = 'SET_UNIVERSAL_TABS_NAME_INDEX';\r\n\r\nexport const setUniversalTabsNameIndex = (name, index) => ({ type: SET_UNIVERSAL_TABS_NAME_INDEX, name: name, index: index })","// universal tabs component with tabpanels, only horizontal\r\n//pass required prop 'tabs' to it with [{label: yourlabeltext, content: yourcontent}, ...]\r\n// prop required 'name' required for redux active tab index storage\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { setUniversalTabsNameIndex } from '../actions/UniversalTabs.action';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={1}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: '20px'\r\n  },\r\n  defaultRoot: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  },\r\n  noElevation: {\r\n    boxShadow: 'unset'\r\n  },\r\n  tabpanel: {\r\n    maxHeight: '78vh',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nfunction ScrollableTabsButtonForce(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={props.defaultMargin ? classes.defaultRoot : classes.root}>\r\n      <AppBar position=\"static\" color=\"default\" className={classes.noElevation}>\r\n        <Tabs\r\n          value={props.tabsInstance[props.name] || 0}\r\n          onChange={(event, value)=>props.setUniversalTabsNameIndex(props.name, value)}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          aria-label=\"scrollable force tabs\"\r\n        >\r\n          {props.tabs.map((tab, i) => {\r\n            return <Tab key={`tab-${i}`} label={tab.label} {...a11yProps(i)} />\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      {props.tabs.map((tab, i) => {\r\n        return <TabPanel key={`tabpanel-${i}`} value={props.tabsInstance[props.name] || 0} index={i} className={classes.tabpanel}>\r\n          {tab.content}\r\n        </TabPanel>\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tabsInstance: state.UniversalTabsReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUniversalTabsNameIndex,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScrollableTabsButtonForce)","export const SET_ALL_DEVICES = 'SET_ALL_DEVICES';\r\nexport const REFRESH_DEVICE_PARAMS = 'REFRESH_DEVICE_PARAMS';\r\nexport const TOGGLE_TABLE_VIEW = 'TOGGLE_TABLE_VIEW';\r\n\r\nexport const setAllDevices = (devices) => ({ type: SET_ALL_DEVICES, devices: devices })\r\nexport const refreshDeviceParams = (params) => ({ type: REFRESH_DEVICE_PARAMS, params: params })\r\nexport const toggleTableView = () => ({ type: TOGGLE_TABLE_VIEW })","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useRowStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  }\r\n})\r\n)\r\n\r\nconst isNotObject = (data) => typeof data !== 'object' || data === null;\r\nconst isObject = (data) => typeof data === 'object' && data !== null;\r\n\r\n//for array of arrays\r\nconst notObject = (element) => element.every(isNotObject);\r\n\r\nfunction Row(props) {\r\n  // props.row === ['item1', 'item2', 'item3', ...]\r\n  const [open, setOpen] = React.useState(false);\r\n  const [objects, setObjects] = React.useState(null)\r\n  const classes = useRowStyles();\r\n  const { t } = useTranslation();\r\n  const { row, columns } = props;\r\n\r\n  React.useEffect(() => {\r\n    let obj = []\r\n    row.forEach((cell, index) => {\r\n      if (isObject(cell)) {\r\n        obj.push({ cell: cell, index: index })\r\n      }\r\n    })\r\n    setObjects(obj)\r\n  }, [row])\r\n\r\n  const createCollapsedTable = (entries) => {\r\n    let cols = []\r\n    let rows = []\r\n    for (const [col, properties] of entries) {\r\n      cols.push(col)\r\n      rows.push(JSON.stringify(properties))\r\n    }\r\n    return {\r\n      rows: rows,\r\n      columns: cols\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <TableRow className={classes.root}>\r\n        <TableCell >\r\n          {/* if expand needed - first cell for arrow */}\r\n          {objects !== null && objects.length > 0 ? <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton> : null}\r\n        </TableCell>\r\n\r\n        {row.map((cell, index) => {\r\n          return <TableCell key={index}>{typeof cell === \"boolean\" || cell === null ? `${cell}` : typeof cell === \"object\" ?\r\n            (<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>) : cell}</TableCell>\r\n        })}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={row.length + 1}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              {objects !== null ? objects.map((obj, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\" style={{ marginTop: '20px' }}>\r\n                      {t(`DevicesSelectionPage.Properties.${columns[obj.index]}`)}\r\n                    </Typography>\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {createCollapsedTable(Object.entries(obj.cell)).columns.map((col, index) => {\r\n                            return <TableCell style={{ width: `${100 / Object.entries(obj.cell).length}%` }} key={index}>{col}</TableCell>\r\n                          })}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          {createCollapsedTable(Object.entries(objects[index].cell)).rows.map((row) => {\r\n                            return <TableCell key={row}>{row}</TableCell>\r\n                          })}\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </React.Fragment>\r\n                )\r\n              }) : null}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction SimpleRow(props) {\r\n  const classes = useRowStyles();\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      {props.row.map((cell, index) => <TableCell key={index}>{typeof cell === \"boolean\" ? cell.toString() : typeof cell === \"object\" ? JSON.stringify(cell) : cell}</TableCell>)}\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nexport default function CollapsibleTable(props) {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* 1 empty cell in table head if row is to be expanded (contains object) */}\r\n            {props.rows.length > 0 && props.rows.filter(notObject).length < props.rows.length ?\r\n              <TableCell /> : null}\r\n            {props.columns.map((column, index) => {\r\n              return <TableCell style={{width: `${100 / props.columns.length}%`}} key={index}>{t(`DevicesSelectionPage.Properties.${column}`)}</TableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.rows.map((row, index) => {\r\n\r\n            return props.rows.filter(notObject).length < props.rows.length ?\r\n              <Row key={index} row={row} columns={props.columns} />\r\n              : <SimpleRow row={row} key={index} />\r\n          }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n","const API_URL = \"/api/device/\";\r\n\r\nclass DeviceService {\r\n  async getDevices() {\r\n    const response = await fetch(`${API_URL}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      }\r\n    })\r\n    if(response.status === 200) {\r\n      const deviceData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: deviceData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DeviceService();","import React, { useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DevicesList from './DevicesList.component';\r\nimport DeviceSelectionTabs from './UniversalTabs.component';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { setAllDevices, refreshDeviceParams, toggleTableView } from '../actions/DevicesSelectionPage.action';\r\nimport CollapsibleTable from './CollapsibleTable.component';\r\nimport DeviceService from '../services/device.service';\r\nimport ActivateService from '../services/activate.service';\r\nimport worker from 'workerize-loader!../workers/devices.worker'; //eslint-disable-line import/no-webpack-loader-syntax\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ShortTextIcon from '@material-ui/icons/ShortText';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  onboarded: {\r\n    color: 'green'\r\n  },\r\n  offboarded: {\r\n    color: 'red'\r\n  },\r\n  alignTop: {\r\n    verticalAlign: 'top'\r\n  },\r\n  devicesTitleInline: {\r\n    marginBottom: theme.spacing(3),\r\n    display: 'inline-block'\r\n  },\r\n  marginTopTable: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  advancedViewTables: {\r\n    float: 'right',\r\n    verticalAlign: 'top'\r\n  }\r\n}));\r\n\r\nlet instance;\r\n\r\nfunction DevicesSelectionPage(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const { setAllDevices, allDevices, selectedDevice, authenticated, refreshDeviceParams, toggleTableView, tableView } = props;\r\n\r\n  const reformatDeviceDataToReducer = (data) => {\r\n    let arr = []\r\n    for (const [key, value] of Object.entries(data)) {\r\n      arr.push({ [key]: value })\r\n    }\r\n    return arr\r\n  }\r\n\r\n  const fetchDevices = useCallback(() => {\r\n    DeviceService.getDevices().then(res => {\r\n      if (res.status === 200) {\r\n        setAllDevices(reformatDeviceDataToReducer(res.data))\r\n      }\r\n    })\r\n  }, [setAllDevices]);\r\n\r\n  //initial fetch all devices\r\n  useEffect(() => {\r\n    fetchDevices()\r\n  }, [setAllDevices, fetchDevices])\r\n\r\n  //setup web worker for fetching periodically\r\n  useEffect(() => {\r\n    const refreshDeviceData = (message) => {\r\n      const { data } = message;\r\n      if (data !== undefined && data.type !== 'RPC') {\r\n        refreshDeviceParams(data)\r\n      }\r\n    }\r\n\r\n    instance = worker()\r\n    instance.addEventListener(\"message\", message => refreshDeviceData(message));\r\n    return () => {\r\n      instance.postMessage({ token: null, text: 'stop' })\r\n      instance.removeEventListener(\"message\", message => refreshDeviceData(message))\r\n      instance.terminate()\r\n    }\r\n  }, [refreshDeviceParams])\r\n\r\n  //check if authenticated, if not - stop fetching\r\n  useEffect(() => {\r\n    if (instance !== null) {\r\n      if (authenticated === false) {\r\n        instance.postMessage({ token: null, text: 'stop' })\r\n      }\r\n      else {\r\n        instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start', device: selectedDevice.selectedDeviceID });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authenticated, selectedDevice])\r\n\r\n  const converter = (data) => {\r\n    let tables = {}\r\n    data.forEach(obj => {\r\n      if (Array.isArray(obj)) {\r\n        //if array of arrays, access properties only\r\n        obj = obj[1]\r\n      }\r\n      if (tables[obj.type] === undefined) {\r\n        tables = {\r\n          ...tables,\r\n          [obj.type]: {\r\n            type: obj.type,\r\n            rows: [],\r\n            cols: templates(obj.type, data, tableView).cols\r\n          }\r\n        }\r\n      }\r\n      tables = {\r\n        ...tables,\r\n        [obj.type]: {\r\n          ...tables[obj.type],\r\n          rows: [...tables[obj.type].rows, templates(obj.type, obj, tableView).rows]\r\n        }\r\n      }\r\n    })\r\n    return tables\r\n  }\r\n\r\n  const templates = (type, data, tableView) => {\r\n    if (data.value !== undefined && !isNaN(data.value) && data.value !== null) {\r\n      data = {\r\n        ...data,\r\n        value: parseFloat(data.value).toFixed(2)\r\n      }\r\n    }\r\n    if (data.lastValueTick !== undefined) {\r\n      data = {\r\n        ...data,\r\n        lastValueTick: formatDateTime(new Date(parseFloat(data.lastValueTick) * 1000))\r\n      }\r\n    }\r\n    switch (type) {\r\n      //devices\r\n      case 'MBDevice':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'isActive', 'isConnected'],\r\n            rows: [data.name, data.isActive, data.isConnected]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'ipAddress', 'portNumber', 'isActive', 'isConnected', 'timeout'],\r\n            rows: [data.name, data.type, data.ipAddress, data.portNumber, data.isActive, data.isConnected, data.timeout]\r\n          }\r\n        }\r\n      case 'InternalDevice':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'isActive'],\r\n            rows: [data.name, data.isActive]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'isActive'],\r\n            rows: [data.name, data.type, data.isActive]\r\n          }\r\n        }\r\n\r\n      case 'MSAgentDevice':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'boarded', 'isActive'],\r\n            rows: [data.name, data.boarded, data.isActive]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'boarded', 'isActive', 'dataStorageSize', 'eventStorageSize', 'numberOfDataFilesToSend', 'numberOfEventFilesToSend', 'numberOfSendDataRetries', 'numberOfSendEventRetries', 'sendDataFileInterval', 'sendEventFileInterval'],\r\n            rows: [data.name, data.type, data.boarded, data.isActive, data.dataStorageSize, data.eventStorageSize, data.numberOfDataFilesToSend, data.numberOfEventFilesToSend, data.numberOfSendDataRetries, data.numberOfSendEventRetries, data.sendDataFileInterval, data.sendEventFileInterval]\r\n          }\r\n        }\r\n\r\n      case 'S7Device':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'isActive', 'isConnected'],\r\n            rows: [data.name, data.isActive, data.isConnected]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'ipAddress', 'isActive', 'isConnected', 'rack', 'slot', 'timeout'],\r\n            rows: [data.name, data.type, data.ipAddress, data.isActive, data.isConnected, data.rack, data.slot, data.timeout]\r\n          }\r\n        }\r\n\r\n      //edge computing\r\n      case 'AverageCalculator':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'factor', 'sampleTime', 'calculationInterval', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.factor, data.sampleTime, data.calculationInterval, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'IncreaseCalculator':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'factor', 'sampleTime', 'overflow', 'calculationInterval', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.factor, data.sampleTime, data.overflow, data.calculationInterval, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'FactorCalculator':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        return {\r\n          cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'factor', 'sampleTime', 'lastValueTick'],\r\n          rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.factor, data.sampleTime, data.lastValueTick]\r\n        }\r\n      case 'SumCalculator':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'sampleTime', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.sampleTime, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'ValueFromByteArrayCalculator':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'bitNumber', 'byteNumber', 'length', 'sampleTime', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.bitNumber, data.byteNumber, data.length, data.sampleTime, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'ExpressionCalculator':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'expression', 'parameters', 'sampleTime', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.expression, data.parameters, data.sampleTime, data.lastValueTick]\r\n          }\r\n        }\r\n\r\n      //variables\r\n      case 'MBBoolean':\r\n      case 'MBByteArray':\r\n      case 'MBFloat':\r\n      case 'MBDouble':\r\n      case 'MBUInt32':\r\n      case 'MBUInt16':\r\n      case 'MBInt32':\r\n      case 'MBInt16':\r\n      case 'MBSwappedInt32':\r\n      case 'MBSwappedUInt32':\r\n      case 'MBSwappedFloat':\r\n      case 'MBSwappedDouble':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'length', 'offset', 'read', 'write', 'readAsSingle', 'writeAsSingle', 'readFCode', 'writeFCode', 'sampleTime', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.length, data.offset, data.read, data.write, data.readAsSingle, data.writeAsSingle, data.readFCode, data.writeFCode, data.sampleTime, data.lastValueTick]\r\n          }\r\n        }\r\n\r\n      case 'LastCycleDurationVariable':\r\n      case 'CPULoadVariable':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'sampleTime', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.sampleTime, data.lastValueTick]\r\n          }\r\n        }\r\n\r\n      case 'S7Int':\r\n      case 'S7DInt':\r\n      case 'S7SInt':\r\n      case 'S7UInt':\r\n      case 'S7UDInt':\r\n      case 'S7USInt':\r\n      case 'S7Real':\r\n      case 'S7DTL':\r\n      case 'S7ByteArray':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit'],\r\n            rows: [data.name, data.value, data.unit]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'dbNumber', 'length', 'memoryType', 'offset', 'read', 'readAsSingle', 'sampleTime', 'write', 'writeAsSingle', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.dbNumber, data.length, data.memoryType, data.offset, data.read, data.readAsSingle, data.sampleTime, data.write, data.writeAsSingle, data.lastValueTick]\r\n          }\r\n        }\r\n\r\n      // case 'AssociatedVariable':\r\n      //   return {\r\n      //     cols: [],\r\n      //     rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.sampleTime, data.associatedDeviceId, ]\r\n      //   }\r\n\r\n      //alerts\r\n      case 'HighLimitAlert':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit', 'lastValueTick'],\r\n            rows: [data.name, data.value, data.unit, data.lastValueTick]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'highLimit', 'hysteresis', 'severity', 'sampleTime', 'texts', 'timeOffDelay', 'timeOnDelay', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.highLimit, data.hysteresis, data.severity, data.sampleTime, data.texts, data.timeOffDelay, data.timeOnDelay, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'BandwidthLimitAlert':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit', 'lastValueTick'],\r\n            rows: [data.name, data.value, data.unit, data.lastValueTick]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'highLimit', 'lowLimit', 'hysteresis', 'severity', 'sampleTime', 'texts', 'timeOffDelay', 'timeOnDelay', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.highLimit, data.lowLimit, data.hysteresis, data.severity, data.sampleTime, data.texts, data.timeOffDelay, data.timeOnDelay, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'LowLimitAlert':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit', 'lastValueTick'],\r\n            rows: [data.name, data.value, data.unit, data.lastValueTick]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'lowLimit', 'hysteresis', 'severity', 'sampleTime', 'texts', 'timeOffDelay', 'timeOnDelay', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.lowLimit, data.hysteresis, data.severity, data.sampleTime, data.texts, data.timeOffDelay, data.timeOnDelay, data.lastValueTick]\r\n          }\r\n        }\r\n      case 'ExactValuesAlert':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['name', 'value', 'unit', 'lastValueTick'],\r\n            rows: [data.name, data.value, data.unit, data.lastValueTick]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['name', 'type', 'value', 'unit', 'defaultValue', 'severity', 'sampleTime', 'texts', 'timeOffDelay', 'timeOnDelay', 'lastValueTick'],\r\n            rows: [data.name, data.type, data.value, data.unit, data.defaultValue, data.severity, data.sampleTime, data.texts, data.timeOffDelay, data.timeOnDelay, data.lastValueTick]\r\n          }\r\n        }\r\n      //custom made - without 'type' property - eventsToSendConfig, dataToSendConfig\r\n      case 'eventsToSendConfig':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['entityId', 'sourceType', 'severity'],\r\n            rows: [data.entityId, data.sourceType, data.severity]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['entityId', 'sourceId', 'source', 'sourceType', 'severity', 'sendingInterval'],\r\n            rows: [data.entityId, data.sourceId, data.source, data.sourceType, data.severity, data.sendingInterval]\r\n          }\r\n        }\r\n\r\n      case 'dataToSendConfig':\r\n        if (tableView === 'simple') {\r\n          return {\r\n            cols: ['datapointId', 'dataConverter'],\r\n            rows: [data.datapointId, data.dataConverter]\r\n          }\r\n        }\r\n        else {\r\n          return {\r\n            cols: ['datapointId', 'dataConverter', 'qualityCodeEnabled', 'sendingInterval'],\r\n            rows: [data.datapointId, data.dataConverter, data.qualityCodeEnabled, data.sendingInterval]\r\n          }\r\n        }\r\n      default:\r\n        return {\r\n          cols: [],\r\n          rows: []\r\n        }\r\n    }\r\n  }\r\n\r\n  const createTabs = (devices, selectedDevice) => {\r\n    let tabs = []\r\n    devices.forEach((device, index) => {\r\n      const entries = Object.entries(device)\r\n      for (const [, properties] of entries) {\r\n        if (properties.id === selectedDevice.selectedDeviceID) {\r\n          const converted = converter([properties])\r\n          //generate tables for each device type\r\n          const firstLevelTables = traverseObject(converted)\r\n          //info tab\r\n          tabs.push({\r\n            label: t(`DevicesSelectionPage.Tabs.info`),\r\n            content: firstLevelTables.map((table, i) => (<React.Fragment key={i}><Typography variant=\"h6\" className={classes.marginTopTable}>{t(`DevicesSelectionPage.Properties.${table.type}`)}</Typography><CollapsibleTable columns={table.cols} rows={table.rows} /></React.Fragment>))\r\n          })\r\n\r\n          const propertiesEntries = Object.entries(properties)\r\n          //other tabs, traversing through object\r\n          for (let [column, cell] of propertiesEntries) {\r\n            if (typeof cell === 'object') {\r\n              const traverse = traverseObject(cell, column)\r\n              const converted = converter(traverse)\r\n              const secondLevelTables = traverseObject(converted)\r\n              tabs.push({\r\n                label: t(`DevicesSelectionPage.Tabs.${column}`),\r\n                content: secondLevelTables.map((table, i) => (<React.Fragment key={i}><Typography variant=\"h6\" className={classes.marginTopTable}>{t(`DevicesSelectionPage.Properties.${table.type}`)}</Typography><CollapsibleTable columns={table.cols} rows={table.rows} /></React.Fragment>))\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return null\r\n    })\r\n\r\n    return <DeviceSelectionTabs\r\n      name={selectedDevice.selectedDeviceType}\r\n      tabs={tabs}\r\n    />\r\n  }\r\n\r\n  const traverseObject = (obj, column = null) => {\r\n    //console.log(column)\r\n    let tables = []\r\n    const entries = Object.entries(obj)\r\n    for (const [, tableProperties] of entries) {\r\n      if (column === 'dataToSendConfig' || column === 'eventsToSendConfig') {\r\n        tables.push({ ...tableProperties, type: column })\r\n      }\r\n      else {\r\n        tables.push(tableProperties)\r\n      }\r\n    }\r\n    return tables\r\n  }\r\n\r\n  const formatDateTime = (date) => {\r\n    const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()\r\n    const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()\r\n    const seconds = date.getSeconds() < 10 ? `0${date.getSeconds()}` : date.getSeconds()\r\n\r\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}, ${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const isActive = () => {\r\n    if (selectedDevice.selectedDeviceID !== '' && allDevices[selectedDevice.selectedDeviceIndex] !== undefined) {\r\n      if (allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isConnected !== undefined) {\r\n        return allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isActive && allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isConnected\r\n      }\r\n      else {\r\n        return allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isActive\r\n      }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const isBoarded = () => {\r\n    return selectedDevice.selectedDeviceType === 'MSAgentDevice' ? allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].boarded : null\r\n  }\r\n\r\n  const activateDevice = (activate, device) => {\r\n    ActivateService.activateDevice(activate, device).then(res => {\r\n      if (res.status === 200) {\r\n        refreshDeviceParams(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2} justify=\"flex-start\"\r\n        alignItems=\"flex-start\">\r\n        <Grid item xs={12} sm={12} md={3} xl={2}>\r\n          <Typography variant=\"h4\" className={classes.devicesTitleInline}>{t('DevicesSelectionPage.DevicesTitle')}</Typography>\r\n          <Zoom in={true} style={{ transitionDelay: '500ms' }}>\r\n            <Tooltip title={t('DevicesSelectionPage.RefreshAllDevices')} placement=\"bottom\">\r\n              <IconButton aria-label=\"refresh\" className={classes.alignTop} onClick={() => fetchDevices()} >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Zoom>\r\n          <DevicesList />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} md={9} xl={10} spacing={0}>\r\n          <Grid item xs={12} >\r\n            <Typography variant=\"h4\" className={classes.devicesTitleInline}>{selectedDevice.selectedDeviceID}</Typography>\r\n            <Zoom in={true} style={{ transitionDelay: '1000ms' }}>\r\n              <Tooltip title={t('DevicesSelectionPage.ToggleTableView')} placement=\"bottom\">\r\n                <IconButton aria-label=\"toggle-advanced-view\" className={classes.advancedViewTables} onClick={toggleTableView} >\r\n                  <ShortTextIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Zoom>\r\n            <React.Fragment>\r\n              {createTabs(allDevices, selectedDevice)}\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h5\">{t('DevicesSelectionPage.Status')}: {isActive() ? t('DevicesSelectionPage.StatusConnected') : t('DevicesSelectionPage.StatusDisconnected')}</Typography>\r\n              {selectedDevice.selectedDeviceType === 'MSAgentDevice' ?\r\n                <Typography variant=\"h6\" className={isBoarded() ? classes.onboarded : classes.offboarded}>{isBoarded() ? t('DevicesSelectionPage.StatusOnboarded') : t('DevicesSelectionPage.StatusOffboarded')}</Typography>\r\n                : null}\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button\r\n                onClick={() => activateDevice(true, selectedDevice.selectedDeviceID)}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isActive() ? true : false}>\r\n                {t('DevicesSelectionPage.Connect')}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button\r\n                onClick={() => activateDevice(false, selectedDevice.selectedDeviceID)}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={isActive() ? false : true}>\r\n                {t('DevicesSelectionPage.Disconnect')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDevice: state.DevicesListReducer,\r\n    allDevices: state.DevicesSelectionPageReducer.devices,\r\n    authenticated: state.AuthenticationReducer.authed,\r\n    tableView: state.DevicesSelectionPageReducer.tableView\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAllDevices,\r\n  refreshDeviceParams,\r\n  toggleTableView\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DevicesSelectionPage)","//activate/deactivate device\r\nconst API_URL = \"/api/activate/\";\r\n\r\nclass ActivateService {\r\n  async activateDevice(activate, device) {\r\n    const response = await fetch(`${API_URL}/${device}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ isActive: activate })\r\n    })\r\n    if(response.status === 200) {\r\n      const deviceData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: deviceData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ActivateService();","export const SET_ACCOUNT_FORM_CURRENT_PASSWORD = 'SET_ACCOUNT_FORM_CURRENT_PASSWORD';\r\nexport const SET_ACCOUNT_FORM_NEW_PASSWORD = 'SET_ACCOUNT_FORM_NEW_PASSWORD';\r\n\r\nexport const setAccountFormCurrentPassword = (password) => ({ type: SET_ACCOUNT_FORM_CURRENT_PASSWORD, password: password })\r\nexport const setAccountFormNewPassword = (password) => ({ type: SET_ACCOUNT_FORM_NEW_PASSWORD, password: password })","const API_URL = '/api/user';\r\n\r\nclass UserService {\r\n  async getMyAccountDetails() {\r\n    const response = await fetch(`${API_URL}/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: userData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  async getAllAccounts() {\r\n    const response = await fetch(`${API_URL}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: userData\r\n      };\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  async deleteAccount(id) {\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async editAccount(id, name, permissions, newPassword = false) {\r\n    let body = {\r\n      name: name,\r\n      permissions: permissions\r\n    };\r\n    let bodyWithPasswords;\r\n    if (newPassword) {\r\n      bodyWithPasswords = {\r\n        ...body,\r\n        password: newPassword,\r\n      }\r\n    }\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify(newPassword ? bodyWithPasswords : body)\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async editMyPassword(name, permissions, oldPassword, newPassword) {\r\n    const response = await fetch(`${API_URL}/me`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ name: name, permissions: permissions, oldPassword: oldPassword, password: newPassword })\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async register(username, password, permissions) {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ name: username, permissions: permissions, password: password })\r\n    })\r\n    return { status: response.status }\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { connect } from 'react-redux';\r\nimport { setAccountFormCurrentPassword, setAccountFormNewPassword } from '../actions/AccountPage.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserService from '../services/user.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  },\r\n  loginButton: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nfunction AccountPage({ currentPassword, newPassword, setAccountFormCurrentPassword, setAccountFormNewPassword, setSnackbarText, setSnackbarShown }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [accountDetails, setAccountDetails] = useState({})\r\n\r\n  const getMyAccountDetails = useCallback(() => {\r\n    UserService.getMyAccountDetails().then(res => {\r\n      if (res.status === 200) {\r\n        setAccountDetails(res.data)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setSnackbarShown, setSnackbarText, t])\r\n\r\n  useEffect(() => {\r\n    getMyAccountDetails()\r\n  }, [getMyAccountDetails])\r\n\r\n  const verify = (textfield) => {\r\n    const lengthErrorText = t('AccountPage.PasswordHelperError8characters');\r\n    const similarityErrorText = t('AccountPage.PasswordHelperErrorSamePasswords');\r\n    if (textfield === 'currentPassword') {\r\n      if (currentPassword.length > 0 && currentPassword.length < 8) {\r\n        return {\r\n          error: true,\r\n          text: lengthErrorText\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (newPassword.length > 0 && newPassword.length < 8) {\r\n        return {\r\n          error: true,\r\n          text: lengthErrorText\r\n        }\r\n      }\r\n    }\r\n    if (newPassword.length > 0 && currentPassword.length > 0 && newPassword === currentPassword) {\r\n      return {\r\n        error: true,\r\n        text: similarityErrorText\r\n      }\r\n    }\r\n    return {\r\n      error: false,\r\n      text: ''\r\n    }\r\n  }\r\n\r\n  const changePassword = () => {\r\n    UserService.editMyPassword(accountDetails.name, accountDetails.permissions, currentPassword, newPassword).then(res => {\r\n      if (res.status === 200) {\r\n        //reset fields after submit\r\n        setAccountFormCurrentPassword('')\r\n        setAccountFormNewPassword('')\r\n        setSnackbarText(t('Snackbar.SuccessfulPasswordChange'), 'success')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulPasswordChange'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        alignContent=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('AccountPage.Title')}</Typography>\r\n        </Grid>\r\n        <Typography variant=\"body1\">{t('AccountPage.Permissions')}</Typography>\r\n        <Grid container\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"center\"\r\n          item xs={12}>\r\n            \r\n          <Grid item xs={12} sm={6} md={6} lg={4} xl={3}>\r\n            {accountDetails.permissions >= 1 ? <Chip avatar={<Avatar>U</Avatar>} label=\"User\" /> : null}\r\n            {accountDetails.permissions >= 3 ? <Chip color=\"primary\" avatar={<Avatar>A</Avatar>} label=\"Admin\" /> : null}\r\n            {accountDetails.permissions === 7 ? <Chip color=\"secondary\" avatar={<Avatar>S</Avatar>} label=\"SuperAdmin\" /> : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          item xs={12}>\r\n          <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n              {accountDetails.name ? <TextField fullWidth disabled label={t('AccountPage.NameTextField')} autoComplete=\"username\" defaultValue={accountDetails.name} /> : null}\r\n              <TextField\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={currentPassword}\r\n                onChange={(e) => setAccountFormCurrentPassword(e.target.value)}\r\n                fullWidth\r\n                label={t('AccountPage.CurrentPasswordTextField')}\r\n                />\r\n              <TextField\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={newPassword}\r\n                onChange={(e) => setAccountFormNewPassword(e.target.value)}\r\n                fullWidth\r\n                label={t('AccountPage.NewPasswordTextField')}\r\n                helperText={verify('newPassword').text}\r\n                error={verify('newPassword').error} />\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Button onClick={() => changePassword()}\r\n            className={classes.loginButton} fullWidth color=\"primary\" variant=\"contained\" disabled={currentPassword.length === 0 || newPassword.length === 0 || verify('newPassword').error || verify('currentPassword').error}>{t('AccountPage.ChangePasswordButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentPassword: state.AccountPageReducer.currentPassword,\r\n    newPassword: state.AccountPageReducer.newPassword\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAccountFormCurrentPassword,\r\n  setAccountFormNewPassword,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPage);","//props = rows: array, columns: array, noPagination: bool\r\n\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    //minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable({ rows, columns, noPagination }) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows.length < 5 ? rows.length : 5);\r\n  const { t } = useTranslation()\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (rows.length < 5) {\r\n      setRowsPerPage(rows.length)\r\n    }\r\n    else {\r\n      setRowsPerPage(5)\r\n    }\r\n  }, [rows])\r\n\r\n  return (\r\n    <TableContainer component={Paper} >\r\n      <Table className={classes.table} aria-label=\"params table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, colIndex) => {\r\n              return <TableCell key={`column-${colIndex}`}>{column}</TableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!noPagination?\r\n          (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row, rowIndex) => (\r\n            <TableRow key={`row-${rowIndex}`}>\r\n              {row.map((cell, cellIndex) => {\r\n                return <TableCell key={`cell-${cellIndex}`}>\r\n                  {typeof cell === \"boolean\"? cell.toString() : typeof cell === \"object\"? JSON.stringify(cell) : cell}\r\n                </TableCell>\r\n              })}\r\n            </TableRow>\r\n          )):\r\n          rows.map((row, rowIndex) => (\r\n            <TableRow key={`row-${rowIndex}`}>\r\n              {row.map((cell, cellIndex) => {\r\n                return <TableCell key={`cell-${cellIndex}`}>\r\n                  {typeof cell === \"boolean\"? cell.toString() : cell}\r\n                </TableCell>\r\n              })}\r\n            </TableRow>\r\n          ))\r\n          }\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        {!noPagination ?\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('UniversalTable.Of')} ${count}`}\r\n                labelRowsPerPage={t('UniversalTable.RowsPerPage')}\r\n                rowsPerPageOptions={[rows.length < 5 ? rows.length : 5, 10, 25]}\r\n                colSpan={columns.length}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n      :null}\r\n\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","export const SET_USER_ACCOUNTS_LIST = 'SET_USER_ACCOUNTS_LIST';\r\n\r\nexport const setUserAccountsList = (list) => ({ type: SET_USER_ACCOUNTS_LIST, list: list})","export const SET_CREATE_ACCOUNT_DIALOG_OPEN = 'SET_CREATE_ACCOUNT_DIALOG_OPEN';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT = 'SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_EDIT_ID = 'SET_CREATE_ACCOUNT_DIALOG_EDIT_ID';\r\n\r\nexport const setCreateAccountDialogOpen = (open, dialogType) => ({ type: SET_CREATE_ACCOUNT_DIALOG_OPEN, open: open, dialogType: dialogType }) //dialogType === create or edit\r\nexport const setCreateAccountDialogNameTextfield = (name) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD, name: name })\r\nexport const setCreateAccountDialogPasswordTextfield = (password) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD, password: password })\r\nexport const setCreateAccountDialogPermissionsSelect = (permissions) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT, permissions: permissions })\r\nexport const setCreateAccountDialogNameTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR, error: error })\r\nexport const setCreateAccountDialogPasswordTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR, error: error })\r\nexport const setCreateAccountDialogNewpasswordTextfield = (newpassword) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD, newpassword: newpassword })\r\nexport const setCreateAccountDialogEditId = (id) => ({ type: SET_CREATE_ACCOUNT_DIALOG_EDIT_ID, id: id })","export const SET_CONFIRM_DELETE_USER_DIALOG_OPEN = 'SET_CONFIRM_DELETE_USER_DIALOG_OPEN';\r\nexport const SET_CONFIRM_DELETE_USER_DIALOG_USERNAME = 'SET_CONFIRM_DELETE_USER_DIALOG_USERNAME';\r\n\r\nexport const setConfirmDeleteUserDialogOpen = (open) => ({ type: SET_CONFIRM_DELETE_USER_DIALOG_OPEN, open: open })\r\nexport const setConfirmDeleteUserDialogUsername = (username, id) => ({type: SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, username: username, id: id })","const API_URL = \"/api/auth/\";\r\n\r\nclass AuthService {\r\n  async login(username, password) {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name: username, password: password })\r\n    })\r\n\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      if (response.headers.get('x-auth-token')) {\r\n        localStorage.setItem(\"user\", JSON.stringify({ ...userData, accessToken: response.headers.get('x-auth-token') }))\r\n      }\r\n      return userData;\r\n    }\r\n    throw new Error(response.status)\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useEffect, useCallback } from 'react';\r\nimport UniversalTable from './UniversalTable.component';\r\nimport { connect } from 'react-redux';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport UserService from '../services/user.service';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { setCreateAccountDialogOpen, setCreateAccountDialogEditId, setCreateAccountDialogNameTextfield, setCreateAccountDialogPermissionsSelect } from '../actions/CreateAccountDialog.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\r\nimport AuthService from '../services/auth.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icons: {\r\n    padding: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction UserAccountsPage({ setUserAccountsList,\r\n  setCreateAccountDialogOpen,\r\n  accountsList,\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setCreateAccountDialogEditId,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfield,\r\n  setSnackbarText,\r\n  setSnackbarShown }) {\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const getAllAccounts = useCallback(() => {\r\n    UserService.getAllAccounts().then(res => {\r\n      if (res.status === 200) {\r\n        setUserAccountsList(res.data)\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setUserAccountsList, setSnackbarShown, setSnackbarText, t])\r\n\r\n  useEffect(() => {\r\n    getAllAccounts()\r\n  }, [getAllAccounts])\r\n\r\n  const deleteAcc = (id, username) => {\r\n    setConfirmDeleteUserDialogUsername(username, id)\r\n    setConfirmDeleteUserDialogOpen(true)\r\n  }\r\n\r\n  const editAcc = (id, name, permissions) => {\r\n    setCreateAccountDialogEditId(id)\r\n    setCreateAccountDialogNameTextfield(name)\r\n    setCreateAccountDialogPermissionsSelect(permissions)\r\n    setCreateAccountDialogOpen(true, 'edit')\r\n  }\r\n\r\n  const checkPermissions = (permissions) => {\r\n    const currentUser = AuthService.getCurrentUser().permissions;\r\n    if (currentUser === 7) {\r\n      return true;\r\n    }\r\n    if ((permissions === 3 || permissions === 7) && currentUser === 3) {\r\n      return false\r\n    }\r\n    if (permissions === 1 && currentUser >= 3) {\r\n      return true\r\n    }\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('AccountMenu.UserAccounts')}</Typography>\r\n        </Grid>\r\n        {accountsList.length > 0 ?\r\n          <Grid item xs={12}>\r\n            <UniversalTable noPagination\r\n              columns={[t('UserAccountsPage.NameColumn'), t('UserAccountsPage.PermissionsColumn'), t('UserAccountsPage.ActionColumn')]}\r\n              rows={accountsList.map(acc => [acc.name, acc.permissions === 1 ? 'User' : acc.permissions === 3 ? 'Admin' : 'SuperAdmin', checkPermissions(acc.permissions) ?\r\n                <div>\r\n                  <Tooltip title={t('UserAccountsPage.TooltipEdit')} placement=\"top\">\r\n                    <IconButton onClick={() => editAcc(acc._id, acc.name, acc.permissions)} className={classes.icons} aria-label=\"edit\">\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title={t('UserAccountsPage.TooltipDelete')} placement=\"top\">\r\n                    <IconButton onClick={() => deleteAcc(acc._id, acc.name)} className={classes.icons} aria-label=\"delete\">\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n                :\r\n                null])}\r\n            />\r\n          </Grid> : null\r\n        }\r\n        <Grid item xs={6} sm={4} md={3} lg={2}>\r\n          <Button\r\n            onClick={() => setCreateAccountDialogOpen(true, 'create')}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            {t('UserAccountsPage.CreateUser')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    accountsList: state.UserAccountsPageReducer.accountsList,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUserAccountsList,\r\n  setCreateAccountDialogOpen,\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setCreateAccountDialogEditId,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccountsPage);","import AuthService from \"../services/auth.service\";\r\n\r\nexport const isAuthenticated = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  if (user === null || user._id === undefined || user.name === undefined || user.permissions === undefined || user.accessToken === undefined) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const isAdmin = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  if(user!==null && user.permissions>=3) {\r\n    return true\r\n  }\r\n  return false\r\n}","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\n\r\nexport const setAuthenticated = (authed) => ({ type: SET_AUTHENTICATED, authenticated: authed})","import { isAdmin } from '../services/isAuthenticated.service';\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction AdminRoute({ children, authenticated, setAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAdmin() ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAuthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminRoute);","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Settings from '../components/Settings.component';\r\nimport DevicesSelectionPage from '../components/DevicesSelectionPage.component';\r\nimport AccountPage from '../components/AccountPage.component';\r\nimport UserAccountsPage from '../components/UserAccountsPage.component';\r\nimport AdminRoute from '../routes/ProtectedAdmin.routes';\r\n\r\nexport default function DrawerRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/settings\" render={()=><Settings/>} />\r\n      <Route path=\"/myaccount\" render={()=><AccountPage/>} />\r\n      <AdminRoute path=\"/useraccounts\"><UserAccountsPage/></AdminRoute>\r\n      <Route path=\"/\" render={()=><DevicesSelectionPage/>} />\r\n    </Switch>\r\n  )\r\n}\r\n","export const SET_LANGUAGE_DIALOG_OPEN = 'SET_LANGUAGE_DIALOG_OPEN';\r\n\r\nexport const setLanguageDialogOpen = (open) => ({ type: SET_LANGUAGE_DIALOG_OPEN, open: open })","export const SET_LOGIN_FORM_USERNAME = 'SET_LOGIN_FORM_USERNAME';\r\nexport const SET_LOGIN_FORM_PASSWORD = 'SET_LOGIN_FORM_PASSWORD';\r\nexport const SET_LOGIN_FORM_USERNAME_ERROR = 'SET_LOGIN_FORM_USERNAME_ERROR';\r\nexport const SET_LOGIN_FORM_PASSWORD_ERROR = 'SET_LOGIN_FORM_PASSWORD_ERROR';\r\n\r\nexport const setLoginFormUsername = (username) => ({ type: SET_LOGIN_FORM_USERNAME, username: username })\r\nexport const setLoginFormPassword = (password) => ({ type: SET_LOGIN_FORM_PASSWORD, password: password })\r\nexport const setLoginFormUsernameError = (error) => ({ type: SET_LOGIN_FORM_USERNAME_ERROR, error: error })\r\nexport const setLoginFormPasswordError = (error) => ({ type: SET_LOGIN_FORM_PASSWORD_ERROR, error: error })","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setLoginFormUsernameError, setLoginFormPasswordError, setLoginFormUsername, setLoginFormPassword } from '../actions/LoginPage.action';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentDesktop: {\r\n    //flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    height: '100vh',\r\n    width: '100%'\r\n  },\r\n  contentMobile: {\r\n    padding: theme.spacing(1),\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  loginButton: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nfunction LoginPage(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation()\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: landscape)`)\r\n  let history = useHistory();\r\n\r\n  const tryLogin = () => {\r\n    AuthService.login(props.login, props.password).then(() => {\r\n      history.push(\"/\");\r\n    }).catch(() => {\r\n      props.setLoginFormUsernameError(true)\r\n      props.setLoginFormPasswordError(true)\r\n      props.setLoginFormPassword(\"\")\r\n      props.setSnackbarText(t('Snackbar.LoginFailed'), 'error')\r\n      props.setSnackbarShown(true)\r\n    })\r\n  }\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter' && props.login.length >= 1 && props.password.length >= 1) {\r\n      tryLogin()\r\n    }\r\n  }\r\n\r\n  const buttonLogin = () => {\r\n    tryLogin()\r\n  }\r\n\r\n  const controlFormFields = (field, value) => {\r\n    props.setLoginFormUsernameError(false)\r\n    props.setLoginFormPasswordError(false)\r\n    if (field === 'username') {\r\n      props.setLoginFormUsername(value)\r\n    }\r\n    else {\r\n      props.setLoginFormPassword(value)\r\n    }\r\n  }\r\n\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Zoom\r\n        in={true}\r\n        timeout={transitionDuration}\r\n        style={{\r\n          transitionDelay: `500ms`,\r\n        }}\r\n        unmountOnExit\r\n      >\r\n        <Tooltip title={t('LoginPage.Language')} placement=\"bottom\">\r\n          <Fab aria-label=\"choose langauge\" className={classes.fab} color=\"primary\" onClick={() => props.setLanguageDialogOpen(true)}>\r\n            <LanguageIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Zoom>\r\n\r\n      <Grid className={matches ? classes.contentMobile : classes.contentDesktop}\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        alignContent=\"center\">\r\n        <Grid item xs={12} >\r\n          <Typography align=\"center\" variant=\"h2\" gutterBottom>SidiroIOT</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Typography align=\"center\" variant=\"h4\" gutterBottom>{t('LoginPage.LoginTitle')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={6} lg={4} xl={3}>\r\n          <form noValidate autoComplete=\"off\" className={classes.form}>\r\n            <TextField\r\n              error={props.loginError}\r\n              value={props.login}\r\n              onChange={(e) => controlFormFields('username', e.target.value)}\r\n              id=\"login\" label={t('LoginPage.FormLoginTextField')} fullWidth variant=\"standard\" autoComplete=\"username\" onKeyDown={handleKeyDown} />\r\n            <TextField\r\n              error={props.passwordError}\r\n              value={props.password}\r\n              onChange={(e) => controlFormFields('password', e.target.value)}\r\n              id=\"password\" type=\"password\" label={t('LoginPage.FormPasswordTextField')} fullWidth variant=\"standard\" autoComplete=\"password\" onKeyDown={handleKeyDown} />\r\n          </form>\r\n          <Button onClick={() => buttonLogin()} className={classes.loginButton} color=\"primary\" variant=\"contained\" fullWidth disabled={props.login.length < 1 || props.password.length < 1}>{t('LoginPage.LoginButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.LoginPageReducer.username,\r\n    loginError: state.LoginPageReducer.usernameError,\r\n    password: state.LoginPageReducer.password,\r\n    passwordError: state.LoginPageReducer.passwordError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n  setLoginFormPassword,\r\n  setLoginFormUsername,\r\n  setLoginFormUsernameError,\r\n  setLoginFormPasswordError,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","export const SET_HARDWARE_USAGE = 'SET_HARDWARE_USAGE';\r\n\r\nexport const setHardwareUsage = (cpuUsage, cpuTemperature, ramUsage, diskUsage) => ({ type: SET_HARDWARE_USAGE, cpuUsage: cpuUsage, cpuTemperature: cpuTemperature, ramUsage: ramUsage, diskUsage: diskUsage })","import { isAuthenticated } from '../services/isAuthenticated.service';\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction PrivateRoute({ children, authenticated, setAuthenticated, ...rest }) {\r\n  React.useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      setAuthenticated(true)\r\n    }\r\n  }, [authenticated, setAuthenticated])\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated() ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAuthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularProgressWithLabel(props) {\r\n  const percentColors = [\r\n    { pct: 0.0, color: { r: 0x00, g: 0xff, b: 0 } },\r\n    { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0 } },\r\n    { pct: 1.0, color: { r: 0xff, g: 0x00, b: 0 } }];\r\n\r\n  const getColorForPercentage = (pct) => {\r\n    for (var i = 1; i < percentColors.length - 1; i++) {\r\n      if (pct < percentColors[i].pct) {\r\n        break;\r\n      }\r\n    }\r\n    var lower = percentColors[i - 1];\r\n    var upper = percentColors[i];\r\n    var range = upper.pct - lower.pct;\r\n    var rangePct = (pct - lower.pct) / range;\r\n    var pctLower = 1 - rangePct;\r\n    var pctUpper = rangePct;\r\n    var color = {\r\n      r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\r\n      g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\r\n      b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\r\n    };\r\n    return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\r\n    // or output as hex if preferred\r\n  };\r\n\r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   usageGaugesGroup: {\r\n  //     marginRight: '20px',\r\n  //     marginLeft: '5px'\r\n  //   },\r\n  //   usageColor: {\r\n  //     position: 'absolute',\r\n  //     left: 0,\r\n  //     animationDuration: '1500ms',\r\n  //   },\r\n  //   bottom: {\r\n  //     color: '#eeeeee1c',\r\n  //   },\r\n  // }));\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-flex', marginRight: '20px', marginLeft: '5px' }}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        style={{color:'#eeeeee1c'}}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress \r\n      variant=\"static\" {...props} \r\n      style={{position: 'absolute', animationDuration: '1500ms', color: getColorForPercentage(props.value / 100)}} />\r\n      <div style={{position: 'absolute', display: 'flex', top: '0px', left: '0px', bottom: '0px', right: '0px', alignItems:\"center\", justifyContent:\"center\"}}>\r\n      \r\n        <Typography variant=\"caption\" component=\"div\" color=\"initial\">{`${Math.round(props.value,)}${props.unit}`}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport ViewArrayIcon from \"@material-ui/icons/ViewArray\";\r\nimport { Link, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport DeviceHubIcon from \"@material-ui/icons/DeviceHub\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport DrawerRoutes from '../routes/DrawerRoutes.routes';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrochip, faMemory, faThermometerHalf, faHdd } from '@fortawesome/free-solid-svg-icons'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LoginPage from './LoginPage.component';\r\nimport { setHardwareUsage } from '../actions/HardwareUsage.action';\r\nimport worker from 'workerize-loader!../workers/hwinfo.worker'; //eslint-disable-line import/no-webpack-loader-syntax\r\nimport PrivateRoute from '../routes/protected.routes';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { setCreateAccountDialogOpen } from '../actions/CreateAccountDialog.action';\r\nimport { isAdmin } from '../services/isAuthenticated.service';\r\nimport CircularProgressWithLabel from './CircularProgress.component';\r\nimport { setLoginFormUsername, setLoginFormPassword } from '../actions/LoginPage.action';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      display: 'none'\r\n    },\r\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n      display: 'flex'\r\n    },\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - 57px)`,\r\n    padding: theme.spacing(3),\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      paddingBottom: theme.spacing(10),\r\n      paddingTop: theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    },\r\n  },\r\n  bottomNavi: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      display: 'flex'\r\n    },\r\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n      display: 'none'\r\n    },\r\n    [`${theme.breakpoints.up('md')}`]: {\r\n      display: 'none'\r\n    },\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hardwareUsage: {\r\n    width: '50px',\r\n    height: '40px',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    //height: '40px',\r\n    flexGrow: 1\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  loginButton: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    }\r\n  }\r\n}));\r\n\r\nlet instance;\r\n\r\nfunction MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { t } = useTranslation();\r\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: portrait)`)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [bottomNaviValue, setBottomNaviValue] = React.useState(0);\r\n  const { setHardwareUsage, authenticated, setAuthenticated } = props;\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  useEffect(() => {\r\n    const setHardwareStats = (message) => {\r\n      const { data } = message;\r\n      if (data.cpuUsage !== undefined) {\r\n        setHardwareUsage(message.data.cpuUsage, message.data.cpuTemperature, message.data.ramUsage, message.data.diskUsage)\r\n      }\r\n    }\r\n    if(instance===undefined) {\r\n      instance = worker()\r\n    }\r\n    instance.addEventListener(\"message\", message => setHardwareStats(message))\r\n      return () => {\r\n        instance.postMessage({ token: null, text: 'stop' })\r\n        instance.removeEventListener(\"message\", message => setHardwareStats(message))\r\n        instance.terminate()\r\n      }\r\n  }, [setHardwareUsage])\r\n\r\n  useEffect(() => {\r\n    setBottomNaviValue(location.pathname)\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (authenticated === false) {\r\n      instance.postMessage({ token: null, text: 'stop' })\r\n    }\r\n    else {\r\n      instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start' });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authenticated])\r\n\r\n  const signout = () => {\r\n    setAuthenticated(false)\r\n    AuthService.logout()\r\n    handleMenuClose()\r\n    props.setLoginFormUsername(\"\")\r\n    props.setLoginFormPassword(\"\")\r\n    history.push('/login')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (matches) {\r\n      //small viewport\r\n      setOpen(false)\r\n      setAnchorEl(null)\r\n    }\r\n  }, [matches])\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    handleMobileMenuClose();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem component={Link}\r\n        to=\"/myaccount\"\r\n        onClick={handleMenuClose}>{t('AccountMenu.MyAccount')}</MenuItem>\r\n      <MenuItem onClick={() => signout()}>{t('AccountMenu.Logout')}</MenuItem>\r\n      {isAdmin() ?\r\n        <div>\r\n          <Divider />\r\n          <MenuItem component={Link}\r\n            onClick={handleMenuClose}\r\n            to=\"/useraccounts\">{t('AccountMenu.UserAccounts')}</MenuItem>\r\n        </div>\r\n        : null\r\n      }\r\n    </Menu >\r\n  );\r\n\r\n  const toFixed = (num) => {\r\n    if (num !== null) {\r\n      return num.toFixed()\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.cpuUsage)}%`} color=\"primary\" >\r\n          <IconButton aria-label=\"cpu usage\" color=\"inherit\" className={classes.hardwareUsage} >\r\n            <FontAwesomeIcon icon={faMicrochip} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>CPU</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.cpuTemperature)}°C`} color=\"primary\">\r\n          <IconButton aria-label=\"cpu temperature\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faThermometerHalf} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>TEMP</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.ramUsage)}%`} color=\"primary\" >\r\n          <IconButton aria-label=\"memory usage\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faMemory} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>MEM</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.diskUsage)}%`} color=\"primary\">\r\n          <IconButton aria-label=\"space usage\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faHdd} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>DISK</p>\r\n      </MenuItem>\r\n      <Divider />\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>{t('AccountMenu.Profile')}</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Switch>\r\n        <Route path=\"/login\" render={() => <LoginPage />} />\r\n        <PrivateRoute path=\"/\">\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n              })}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, {\r\n                    [classes.hide]: open,\r\n                    [classes.hide]: matches\r\n                  })}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                  SidiroIOT\r\n                </Typography>\r\n                <div className={classes.sectionDesktop}>\r\n                  <Typography variant=\"body1\">CPU</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuUsage} unit=\"%\" />\r\n                  <Typography variant=\"body1\">TEMP</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuTemperature} unit=\"°C\" />\r\n                  <Typography variant=\"body1\">MEM</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.ramUsage} unit=\"%\" />\r\n                  <Typography variant=\"body1\">DISK</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.diskUsage} unit=\"%\" />\r\n                </div>\r\n                <IconButton\r\n                  className={classes.loginButton}\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <div className={classes.sectionMobile}>\r\n                  <IconButton\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <MoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n              })}\r\n              classes={{\r\n                paper: clsx({\r\n                  [classes.drawerOpen]: open,\r\n                  [classes.drawerClose]: !open,\r\n                }),\r\n              }}\r\n            >\r\n              <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                <ListItem button component={Link} to=\"/\" selected={location.pathname === \"/\" ? true : false} >\r\n                  <ListItemIcon>\r\n                    <DeviceHubIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Devices')} />\r\n                </ListItem>\r\n                <ListItem button component={Link} to=\"/settings\" selected={location.pathname === \"/settings\" ? true : false} >\r\n                  <ListItemIcon>\r\n                    <SettingsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Settings')} />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button onClick={() => props.setLanguageDialogOpen(true)}>\r\n                  <ListItemIcon>\r\n                    <LanguageIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Language')} />\r\n                </ListItem>\r\n              </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n              <div className={classes.toolbar} />\r\n              <DrawerRoutes />\r\n            </main>\r\n            <BottomNavigation\r\n              showLabels={false}\r\n              className={classes.bottomNavi}\r\n              value={bottomNaviValue}\r\n            >\r\n              <BottomNavigationAction value=\"/\" label={t('Drawer.Devices')} icon={<DeviceHubIcon />} component={Link} to=\"/\" />\r\n              <BottomNavigationAction value=\"/settings\" label={t('Drawer.Settings')} icon={<ViewArrayIcon />} component={Link} to=\"/settings\" />\r\n              <BottomNavigationAction label={t('Drawer.Language')} icon={<LanguageIcon />} onClick={() => props.setLanguageDialogOpen(true)} />\r\n            </BottomNavigation>\r\n          </React.Fragment>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hardwareUsage: state.HardwareUsageReducer,\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n  setHardwareUsage,\r\n  setAuthenticated,\r\n  setCreateAccountDialogOpen,\r\n  setLoginFormUsername, \r\n  setLoginFormPassword\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniDrawer);","import { SET_LANGUAGE_DIALOG_OPEN } from '../actions/LanguageDialog.action';\r\n\r\nconst initialState = {\r\n    open: false,\r\n}\r\n\r\nexport const LanguageDialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LANGUAGE_DIALOG_OPEN:\r\n            return {\r\n                ...state,\r\n                open: action.open\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_UNIVERSAL_TABS_NAME_INDEX } from '../actions/UniversalTabs.action';\r\n\r\nconst initialState = {\r\n    //tabs instances added dynamically\r\n}\r\n\r\nexport const UniversalTabsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_UNIVERSAL_TABS_NAME_INDEX:\r\n            return {\r\n                ...state,\r\n                [action.name]: action.index\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SELECT_DEVICE } from '../actions/DevicesList.action';\r\n\r\nconst initialState = {\r\n    selectedDeviceIndex: 0,\r\n    selectedDeviceID: '',\r\n    selectedDeviceType: '',\r\n    \r\n}\r\n\r\nexport const DevicesListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_DEVICE:\r\n            return {\r\n                ...state,\r\n                selectedDeviceIndex: action.deviceIndex,\r\n                selectedDeviceID: action.deviceID,\r\n                selectedDeviceType: action.deviceType\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_LOGIN_FORM_USERNAME, SET_LOGIN_FORM_PASSWORD, SET_LOGIN_FORM_USERNAME_ERROR, SET_LOGIN_FORM_PASSWORD_ERROR } from '../actions/LoginPage.action';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  usernameError: false,\r\n  password: '',\r\n  passwordError: false\r\n}\r\n\r\nexport const LoginPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOGIN_FORM_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n      }\r\n    case SET_LOGIN_FORM_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case SET_LOGIN_FORM_USERNAME_ERROR:\r\n      return {\r\n        ...state,\r\n        usernameError: action.error\r\n      }\r\n    case SET_LOGIN_FORM_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        passwordError: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_ACCOUNT_FORM_CURRENT_PASSWORD, SET_ACCOUNT_FORM_NEW_PASSWORD } from '../actions/AccountPage.action';\r\n\r\nconst initialState = {\r\n  currentPassword: '',\r\n  newPassword: ''\r\n\r\n}\r\n\r\nexport const AccountPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACCOUNT_FORM_CURRENT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        currentPassword: action.password,\r\n      }\r\n    case SET_ACCOUNT_FORM_NEW_PASSWORD:\r\n      return {\r\n        ...state,\r\n        newPassword: action.password\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_HARDWARE_USAGE } from '../actions/HardwareUsage.action';\r\n\r\nconst initialState = {\r\n  cpuUsage: 0,\r\n  cpuTemperature: 0,\r\n  ramUsage: 0,\r\n  diskUsage: 0\r\n}\r\n\r\nexport const HardwareUsageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_HARDWARE_USAGE:\r\n      return {\r\n        ...state,\r\n        cpuUsage: action.cpuUsage,\r\n        cpuTemperature: action.cpuTemperature,\r\n        ramUsage: action.ramUsage,\r\n        diskUsage: action.diskUsage\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_AUTHENTICATED } from '../actions/Authentication.action';\r\n\r\nconst initialState = {\r\n  authed: false,\r\n}\r\n\r\nexport const AuthenticationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authed: action.authenticated,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  SET_CREATE_ACCOUNT_DIALOG_OPEN,\r\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT,\r\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR,\r\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR,\r\n  SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_EDIT_ID\r\n} from '../actions/CreateAccountDialog.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  type: 'create',\r\n  //form values\r\n  name: '',\r\n  nameError: false,\r\n  password: '',\r\n  passwordError: false,\r\n  newPassword: '',\r\n  editAccountId: '',\r\n  permissions: 1\r\n}\r\n\r\nexport const CreateAccountDialog = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CREATE_ACCOUNT_DIALOG_OPEN:\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n        type: action.dialogType ? action.dialogType : state.type\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT:\r\n      return {\r\n        ...state,\r\n        permissions: action.permissions\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR:\r\n      return {\r\n        ...state,\r\n        nameError: action.error\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR:\r\n      return {\r\n        ...state,\r\n        passwordError: action.error\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        newPassword: action.newpassword\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_EDIT_ID:\r\n      return {\r\n        ...state,\r\n        editAccountId: action.id\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_USER_ACCOUNTS_LIST } from '../actions/UserAccountsPage.action';\r\n\r\nconst initialState = {\r\n  accountsList: []\r\n}\r\n\r\nexport const UserAccountsPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_ACCOUNTS_LIST:\r\n      return {\r\n        ...state,\r\n        accountsList: action.list,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_SNACKBAR_TEXT, SET_SNACKBAR_SHOWN } from '../actions/Snackbar.action';\r\n\r\nconst initialState = {\r\n  text: '',\r\n  severity: '',\r\n  shown: false\r\n}\r\n\r\nexport const SnackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR_TEXT:\r\n      return {\r\n        ...state,\r\n        text: action.text,\r\n        severity: action.severity\r\n      }\r\n    case SET_SNACKBAR_SHOWN:\r\n      return {\r\n        ...state,\r\n        shown: action.shown\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, SET_CONFIRM_DELETE_USER_DIALOG_OPEN } from '../actions/ConfirmDeleteUserDialog.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  username: '',\r\n  id: ''\r\n}\r\n\r\nexport const ConfirmDeleteUserDialogReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONFIRM_DELETE_USER_DIALOG_OPEN:\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      }\r\n    case SET_CONFIRM_DELETE_USER_DIALOG_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        id: action.id\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_ALL_DEVICES, REFRESH_DEVICE_PARAMS, TOGGLE_TABLE_VIEW } from '../actions/DevicesSelectionPage.action';\r\n\r\nconst initialState = {\r\n  devices: [],\r\n  tableView: 'simple'\r\n}\r\n\r\nexport const DevicesSelectionPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ALL_DEVICES:\r\n      return {\r\n        ...state,\r\n        devices: action.devices\r\n      }\r\n    case REFRESH_DEVICE_PARAMS:\r\n      return {\r\n        ...state,\r\n        devices: state.devices.map(dev => {\r\n          if (action.params.id === Object.entries(dev)[0][0]) {\r\n            return { [action.params.id]: action.params }\r\n          }\r\n          else {\r\n            return dev\r\n          }\r\n        })\r\n      }\r\n    case TOGGLE_TABLE_VIEW:\r\n      return {\r\n        ...state,\r\n        tableView: state.tableView === 'simple' ? 'advanced' : 'simple'\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CONFIG_FILE, SET_IP_CONFIGURATION } from '../actions/Settings.action';\r\n\r\nconst initialState = {\r\n  file: null,\r\n  ipconfig: {}\r\n}\r\n\r\nexport const SettingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONFIG_FILE:\r\n      return {\r\n        ...state,\r\n        file: action.file\r\n      }\r\n    case SET_IP_CONFIGURATION:\r\n      return {\r\n        ...state,\r\n        ipconfig: action.ipconfig\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_BACKDROP_OPEN, SET_BACKDROP_CLOSED } from '../actions/Backdrop.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n}\r\n\r\nexport const BackdropReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BACKDROP_OPEN:\r\n      return {\r\n        ...state,\r\n        open: true\r\n      }\r\n    case SET_BACKDROP_CLOSED:\r\n      return {\r\n        ...state,\r\n        open: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n    SET_IP_CONFIG_DIALOG_OPEN,\r\n    SET_IP_CONFIG_DIALOG_IP_ADDRESS,\r\n    SET_IP_CONFIG_DIALOG_SUBNET_MASK,\r\n    SET_IP_CONFIG_DIALOG_GATEWAY,\r\n    SET_IP_CONFIG_DIALOG_DHCP,\r\n    SET_IP_CONFIG_DIALOG_DNS_PRIMARY,\r\n    SET_IP_CONFIG_DIALOG_DNS_SECONDARY\r\n} from '../actions/IPconfigDialog.action';\r\n\r\nconst initialState = {\r\n    //interface being edited name\r\n    name: '',\r\n    open: false,\r\n    ipAddress: '',\r\n    subnetMask: '',\r\n    gateway: '',\r\n    dhcp: false,\r\n    dnsPrimary: '',\r\n    dnsSecondary: ''\r\n}\r\n\r\nexport const IPConfigReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IP_CONFIG_DIALOG_OPEN:\r\n            return {\r\n                ...state,\r\n                open: action.open,\r\n                name: action.interfaceName ? action.interfaceName : ''\r\n            }\r\n        case SET_IP_CONFIG_DIALOG_IP_ADDRESS:\r\n            return {\r\n                ...state,\r\n                ipAddress: action.ipAddress !==undefined ? action.ipAddress : ''\r\n            }\r\n        case SET_IP_CONFIG_DIALOG_SUBNET_MASK:\r\n            return {\r\n                ...state,\r\n                subnetMask: action.subnetMask !==undefined ? action.subnetMask : ''\r\n            }\r\n        case SET_IP_CONFIG_DIALOG_GATEWAY:\r\n            return {\r\n                ...state,\r\n                gateway: action.gateway !==undefined ? action.gateway : ''\r\n            }\r\n        case SET_IP_CONFIG_DIALOG_DHCP:\r\n            return {\r\n                ...state,\r\n                dhcp: action.dhcp\r\n            }\r\n        case SET_IP_CONFIG_DIALOG_DNS_PRIMARY:\r\n            return {\r\n                ...state,\r\n                dnsPrimary: action.dnsPrimary !==undefined ? action.dnsPrimary : ''\r\n            }\r\n        case SET_IP_CONFIG_DIALOG_DNS_SECONDARY:\r\n            return {\r\n                ...state,\r\n                dnsSecondary: action.dnsSecondary !==undefined ? action.dnsSecondary : ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { LanguageDialogReducer } from './LanguageDialog.reducer';\r\nimport { UniversalTabsReducer } from './UniversalTabs.reducer';\r\nimport { DevicesListReducer } from './DevicesList.reducer';\r\nimport { LoginPageReducer } from './LoginPage.reducer';\r\nimport { AccountPageReducer } from './AccountPage.reducer';\r\nimport { HardwareUsageReducer } from './HardwareUsage.reducer';\r\nimport { AuthenticationReducer } from './Authentication.reducer';\r\nimport { CreateAccountDialog } from './CreateAccountDialog.reducer';\r\nimport { UserAccountsPageReducer } from './UserAccountsPage.reducer';\r\nimport { SnackbarReducer } from './Snackbar.reducer';\r\nimport { ConfirmDeleteUserDialogReducer } from './ConfirmDeleteUserDialog.reducer';\r\nimport { DevicesSelectionPageReducer } from './DevicesSelectionPage.reducer';\r\nimport { SettingsReducer } from './Settings.reducer';\r\nimport { BackdropReducer } from './Backdrop.reducer';\r\nimport { IPConfigReducer } from './IPConfig.reducer';\r\n\r\nexport default combineReducers({\r\n  LanguageDialogReducer,\r\n  UniversalTabsReducer,\r\n  DevicesListReducer,\r\n  LoginPageReducer,\r\n  AccountPageReducer,\r\n  HardwareUsageReducer,\r\n  AuthenticationReducer,\r\n  CreateAccountDialog,\r\n  UserAccountsPageReducer,\r\n  SnackbarReducer,\r\n  ConfirmDeleteUserDialogReducer,\r\n  DevicesSelectionPageReducer,\r\n  SettingsReducer,\r\n  BackdropReducer,\r\n  IPConfigReducer\r\n})","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { resources } from './translations';\r\n  \r\nconst options = {\r\n    // order and from where user language should be detected\r\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\r\n  \r\n    // keys or params to lookup language from\r\n    lookupQuerystring: 'lng',\r\n    lookupCookie: 'i18next',\r\n    lookupLocalStorage: 'i18nextLng',\r\n    lookupFromPathIndex: 0,\r\n    lookupFromSubdomainIndex: 0,\r\n  \r\n    // cache user language on\r\n    caches: ['localStorage', 'cookie'],\r\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n  \r\n    // optional htmlTag with lang attribute, the default is:\r\n    htmlTag: document.documentElement,\r\n  \r\n    // only detect languages that are in the whitelist\r\n    checkWhitelist: true,\r\n  \r\n    // fallback to a similar whitelist language\r\n    // Example 1: Browser language is 'es'\r\n    // if 'es' is not found in whitelist, first fallback to any whitelist language that starts with 'es-', then fallback to fallbackLng ('es' -> 'es-*' -> fallbackLng)\r\n    // Example 2: Browser language is 'es-MX'\r\n    // if 'es-MX' is not found in whitelist, first fallback to 'es', then fallback to 'es-*', then fallback to fallbackLng ('es-MX' -> 'es' -> 'es-*' -> fallbackLng)\r\n    checkForSimilarInWhitelist: false,\r\n  \r\n    // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\r\n    cookieOptions: {path:'/'}\r\n  }\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        detection: options,\r\n        fallbackLng: \"en\",\r\n\r\n        keySeparator: \".\", // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;","export const resources = {\r\n  en: {\r\n    translation: {\r\n      \"Drawer\": {\r\n        \"Devices\": \"Devices\",\r\n        \"Settings\": \"Settings\",\r\n        \"Language\": \"Language\"\r\n      },\r\n      \"LanguageSelection\": {\r\n        \"Label\": \"Choose application language\",\r\n        \"PolishLanguage\": \"Polish\",\r\n        \"EnglishLanguage\": \"English\"\r\n      },\r\n      \"DevicesSelectionPage\": {\r\n        \"DatapointsTab\": \"Data points\",\r\n        \"EdgecomputingTab\": \"Edge computing\",\r\n        \"EventsTab\": \"Events\",\r\n        \"DevicesTitle\": \"Devices\",\r\n        \"StatusConnected\": \"Connected\",\r\n        \"StatusDisconnected\": \"Disconnected\",\r\n        \"Status\": \"Status\",\r\n        \"Connect\": \"Connect\",\r\n        \"Disconnect\": \"Disconnect\",\r\n        \"StatusOnboarded\": \"Onboarded\",\r\n        \"StatusOffboarded\": \"Offboarded\",\r\n        \"RefreshAllDevices\": \"Refresh all devices\",\r\n        \"ToggleTableView\": \"Toggle table view\",\r\n        \"Properties\": {\r\n          \"id\": \"ID\",\r\n          \"name\": \"Name\",\r\n          \"type\": \"Type\",\r\n          \"ipAddress\": \"IP Address\",\r\n          \"portNumber\": \"Port\",\r\n          \"timeout\": \"Timeout\",\r\n          \"isActive\": \"Active\",\r\n          \"isConnected\": \"Connected\",\r\n          \"deviceId\": \"Device ID\",\r\n          \"unit\": \"Unit\",\r\n          \"sampleTime\": \"Sample time\",\r\n          \"defaultValue\": \"Default value\",\r\n          \"offset\": \"Offset\",\r\n          \"length\": \"Length\",\r\n          \"read\": \"Read\",\r\n          \"write\": \"Write\",\r\n          \"readFCode\": \"Read FCode\",\r\n          \"writeFCode\": \"Write FCode\",\r\n          \"unitID\": \"Unit ID\",\r\n          \"readAsSingle\": \"Read as single\",\r\n          \"writeAsSingle\": \"Write as single\",\r\n          \"value\": \"Value\",\r\n          \"variableID\": \"Variable ID\",\r\n          \"factor\": \"Factor\",\r\n          \"calculationInterval\": \"Calculation interval\",\r\n          \"highLimit\": \"High limit\",\r\n          \"texts\": \"Texts\",\r\n          \"severity\": \"Severity\",\r\n          \"hysteresis\": \"Hysteresis\",\r\n          \"timeOnDelay\": \"Time on delay\",\r\n          \"timeOffDelay\": \"Time off delay\",\r\n          \"areaType\": \"Area type\",\r\n          \"dbNumber\": \"DB number\",\r\n          \"lowLimit\": \"Low limit\",\r\n          \"slot\": \"Slot\",\r\n          \"rack\": \"Rack\",\r\n          \"overflow\": \"Overflow\",\r\n          \"inverseLogic\": \"Inverse logic\",\r\n          \"AssociatedDeviceId\": \"Associated device ID\",\r\n          \"AssociatedElementId\": \"Associated element ID\",\r\n          \"variableIDs\": \"Variable IDs\",\r\n          \"alertValues\": \"Alert values\",\r\n          \"datapoint\": \"Datapoint\",\r\n          \"valueConverterObject\": \"Value converter object\",\r\n          \"sendingEnabled\": \"Sending enabled\",\r\n          \"sendFileLimit\": \"Send file limit\",\r\n          \"sendEventLimit\": \"Send event limit\",\r\n          \"sendingInterval\": \"Sending interval\",\r\n          \"numberOfSendRetries\": \"Number of send retries\",\r\n          \"boarded\": \"Boarded\",\r\n          \"lastValueTick\": \"Last value tick\",\r\n          \"elementId\": \"Element ID\",\r\n          \"qualityCodeEnabled\": \"Quality code enabled\",\r\n          \"datapointId\": \"Datapoint ID\",\r\n          \"dataConverter\": \"Data converter\",\r\n          \"entityId\": \"Entity ID\",\r\n          \"sourceType\": \"Source type\",\r\n          \"sourceId\": \"Source ID\",\r\n          \"source\": \"Source\",\r\n          \"sendDataFileInterval\": \"Send data file interval\",\r\n          \"sendEventFileInterval\": \"Send event file interval\",\r\n          \"dataStorageSize\": \"Data storage size\",\r\n          \"eventStorageSize\": \"Event storage size\",\r\n          \"numberOfDataFilesToSend\": \"Number of data files to send\",\r\n          \"numberOfEventFilesToSend\": \"Number of event files to send\",\r\n          \"numberOfSendDataRetries\": \"Number of send data retries\",\r\n          \"numberOfSendEventRetries\": \"Number of send event retries\",\r\n          \"memoryType\": \"Memory type\",\r\n          \"bitNumber\": \"Bit number\",\r\n          \"byteNumber\": \"Byte number\",\r\n          \"expression\": \"Expression\",\r\n          \"parameters\": \"Parameters\",\r\n          \"FactorCalculator\": \"Factor calculator\",\r\n          \"AverageCalculator\": \"Average calculator\",\r\n          \"IncreaseCalculator\": \"Increase calculator\",\r\n          \"SumCalculator\": \"Sum calculator\",\r\n          \"ValueFromByteArrayCalculator\": \"Value from Byte array calculator\",\r\n          \"ExpressionCalculator\": \"Expression calculator\",\r\n          \"S7Device\": \"S7 Device\",\r\n          \"MBDevice\": \"MB Device\",\r\n          \"InternalDevice\": \"Internal device\",\r\n          \"MSAgentDevice\": \"MS Agent device\",\r\n          \"BandwidthLimitAlert\": \"Bandwidth limit alert\",\r\n          \"ExactValuesAlert\": \"Exact values alert\",\r\n          \"HighLimitAlert\": \"High limit alert\",\r\n          \"LowLimitAlert\": \"Low limit alert\",\r\n          \"MBBoolean\": \"MB Boolean\",\r\n          \"MBByteArray\": \"MB Byte Array\",\r\n          \"MBFloat\": 'MB Float',\r\n          \"MBDouble\": \"MB Double\",\r\n          \"MBUInt32\": \"MB UInt32\",\r\n          \"MBUInt16\": \"MBUInt16\",\r\n          \"MBInt32\": \"MBInt32\",\r\n          \"MBInt16\": \"MBInt16\",\r\n          \"MBSwappedInt32\": \"MB Swapped Int32\",\r\n          \"MBSwappedUInt32\": \"MB Swapped Uint32\",\r\n          \"MBSwappedFloat\": \"MB Swapped Float\",\r\n          \"MBSwappedDouble\": \"MB Swapped Double\",\r\n          \"eventsToSendConfig\": \"Events to send\",\r\n          \"dataToSendConfig\": \"Data to send\",\r\n          \"LastCycleDurationVariable\": \"Last cycle duration\",\r\n          \"CPULoadVariable\": \"CPU load\",\r\n          \"S7Int\": \"S7 Int\",\r\n          \"S7DInt\": \"S7 DInt\",\r\n          \"S7SInt\": \"S7 SInt\",\r\n          \"S7UInt\": \"S7 UInt\",\r\n          \"S7UDInt\": \"S7 UDInt\",\r\n          \"S7USInt\": \"S7 USInt\",\r\n          \"S7Real\": \"S7 Real\",\r\n          \"S7DTL\": \"S7 DTL\",\r\n          \"S7ByteArray\": \"S7 Byte Array\"\r\n        },\r\n        \"Tabs\": {\r\n          \"calcElements\": \"Edge computing\",\r\n          \"variables\": \"Variables\",\r\n          \"alerts\": \"Alerts\",\r\n          \"info\": \"Info\",\r\n          \"datapoints\": \"Datapoints\",\r\n          \"dataToSendConfig\": \"Data to send\",\r\n          \"eventsToSendConfig\": \"Events to send\"\r\n        }\r\n      },\r\n      \"UniversalTable\": {\r\n        \"RowsPerPage\": \"Rows per page\",\r\n        \"Of\": \"of\"\r\n      },\r\n      \"SettingsPage\": {\r\n        \"Title\": \"Settings\",\r\n        \"LoadButton\": \"Download settings file\",\r\n        \"DropzoneText\": \"Drag & drop or click to upload a file\",\r\n        \"UploadFile\": \"Load file\",\r\n        \"RemoveFile\": \"Remove file\",\r\n        \"FileName\": \"Name\",\r\n        \"FileSize\": \"Size\",\r\n        \"IPConfigTitle\": \"IP configuration\",\r\n        \"NetworkInterfaces\": \"Network interfaces\",\r\n        \"Edit\": \"Edit\",\r\n        \"IPAddress\": \"IP Address\",\r\n        \"SubnetMask\": \"Subnet mask\",\r\n        \"Gateway\": \"Gateway\",\r\n        \"DHCPTrue\": \"Yes\",\r\n        \"DHCPFalse\": \"No\"\r\n      },\r\n      \"LoginPage\": {\r\n        \"LoginTitle\": \"Please log in\",\r\n        \"LoginButton\": \"Login\",\r\n        \"FormLoginTextField\": \"Login\",\r\n        \"FormPasswordTextField\": \"Password\",\r\n        \"InvalidLoginPassword\": \"Invalid login/password combination\",\r\n        \"FormLoginTextFieldHelperText\": \"At least 3 characters\",\r\n        \"FormPasswordTextFieldHelperText\": \"At least 8 characters\",\r\n        \"Language\": \"Language\"\r\n      },\r\n      \"AccountMenu\": {\r\n        \"MyAccount\": \"My Account\",\r\n        \"Logout\": \"Sign out\",\r\n        \"Profile\": \"Profile\",\r\n        \"UserAccounts\": \"User accounts\"\r\n      },\r\n      \"AccountPage\": {\r\n        \"Title\": \"Account settings\",\r\n        \"NameTextField\": \"Name\",\r\n        \"CurrentPasswordTextField\": \"Current password\",\r\n        \"NewPasswordTextField\": \"New password\",\r\n        \"ChangePasswordButton\": \"Change password\",\r\n        \"PasswordHelperError8characters\": \"Password must consist of at least 8 characters\",\r\n        \"PasswordHelperErrorSamePasswords\": \"Current password and new password can't be the same\",\r\n        \"Permissions\": \"Permissions\"\r\n      },\r\n      \"CreateAccountDialog\": {\r\n        \"TitleCreate\": \"Create new account\",\r\n        \"TitleEdit\": \"Edit account\",\r\n        \"Cancel\": \"Cancel\",\r\n        \"Create\": \"Create\",\r\n        \"Update\": \"Update\",\r\n        \"NameTextField\": \"Name\",\r\n        \"PasswordTextField\": \"Password\",\r\n        \"NewPasswordTextField\": \"New password\",\r\n        \"PermissionsSelect\": \"Permissions\",\r\n        \"HelperTextName\": \"At least 3 characters\",\r\n        \"HelperTextPassword\": \"At least 8 characters\",\r\n        \"AccountBeingEditedSubtitle\": \"You are editing the following account: \"\r\n      },\r\n      \"UserAccountsPage\": {\r\n        \"CreateUser\": \"Create user\",\r\n        \"NameColumn\": \"Name\",\r\n        \"PermissionsColumn\": \"Permissions\",\r\n        \"ActionColumn\": \"Actions\",\r\n        \"TooltipDelete\": \"Delete\",\r\n        \"TooltipEdit\": \"Edit\"\r\n      },\r\n      \"Snackbar\": {\r\n        \"SuccessfulUserCreation\": \"User created successfully\",\r\n        \"SuccessfulUserDeletion\": \"User deleted successfully\",\r\n        \"SuccessfulUserEdit\": \"User edited successfully\",\r\n        \"SuccessfulPasswordChange\": \"Password changed successfully\",\r\n        \"UnsuccessfulPasswordChange\": \"Current password is invalid\",\r\n        \"UnsuccessfulUserEdit\": \"User editing failed\",\r\n        \"SuccessfulFileUpload\": \"File sent successfully\",\r\n        \"UnsuccessfulFileUpload403\": \"Only admin type accounts have permission to send configuration file\",\r\n        \"UnsuccessfulFileUpload400\": \"Invalid file contents\",\r\n        \"UnknownError\": \"Unknown error occured. Try again.\",\r\n        \"Generic403\": \"Access forbidden\",\r\n        \"LoginFailed\": \"Login/password combination is invalid\",\r\n        \"SuccessfulIPConfig\": \"IP Configuration changed successfully\",\r\n        \"UnsuccessfulIPConfig\": \"Entered data is invalid. Try again.\"\r\n      },\r\n      \"ConfirmDeleteUserDialog\": {\r\n        \"Title\": \"Please confirm deletion. The process is irreversible.\",\r\n        \"AccountToBeDeleted\": \"The following account is going to be deleted: \",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Cancel\": \"Cancel\"\r\n      },\r\n      \"IPConfigDialog\": {\r\n        \"DNSPrimary\": \"Primary DNS\",\r\n        \"DNSSecondary\": \"Secondary DNS\",\r\n        \"DisconnectionWarningDhcpFalse\": \"You'll lose connection with device and application after changing IP address. We'll try to forward you to new one automatically.\",\r\n        \"DisconnectionWarningDhcpTrue\": \"You'll lose connection with device and application after changing IP address. Your router will allocate IP address automatically, which will then be necessary to enter in browser's address bar.\",\r\n        \"CurrentHostnameText\": \"Current device/application IP address\",\r\n        \"ConfirmButton\": \"Confirm\",\r\n        \"CancelButton\": \"Cancel\"\r\n      }\r\n    }\r\n  },\r\n  pl: {\r\n    translation: {\r\n      \"Drawer\": {\r\n        \"Devices\": \"Urządzenia\",\r\n        \"Settings\": \"Ustawienia\",\r\n        \"Language\": \"Język\"\r\n      },\r\n      \"LanguageSelection\": {\r\n        \"Label\": \"Wybierz język aplikacji\",\r\n        \"PolishLanguage\": \"Polski\",\r\n        \"EnglishLanguage\": \"Angielski\"\r\n      },\r\n      \"DevicesSelectionPage\": {\r\n        \"DatapointsTab\": \"Data pointy\",\r\n        \"EdgecomputingTab\": \"Edge computing\",\r\n        \"EventsTab\": \"Zdarzenia\",\r\n        \"DevicesTitle\": \"Urządzenia\",\r\n        \"StatusConnected\": \"Połączony\",\r\n        \"StatusDisconnected\": \"Rozłączony\",\r\n        \"Status\": \"Stan\",\r\n        \"Connect\": \"Połącz\",\r\n        \"Disconnect\": \"Rozłącz\",\r\n        \"RefreshAllDevices\": \"Odśwież wszystkie urządzenia\",\r\n        \"ToggleTableView\": \"Przełącz widok tabel\",\r\n        \"Tabs\": {\r\n          \"calcElements\": \"Edge computing\",\r\n          \"variables\": \"Zmienne\",\r\n          \"alerts\": \"Zdarzenia\",\r\n          \"info\": \"Informacje\",\r\n          \"datapoints\": \"Datapointy\",\r\n          \"dataToSendConfig\": \"Konfiguracja danych\",\r\n          \"eventsToSendConfig\": \"Konfiguracja zdarzeń\"\r\n        },\r\n      },\r\n      \"UniversalTable\": {\r\n        \"RowsPerPage\": \"Wierszy na stronę\",\r\n        \"Of\": \"z\"\r\n      },\r\n      \"SettingsPage\": {\r\n        \"Title\": \"Ustawienia\",\r\n        \"LoadButton\": \"Pobierz plik ustawień\",\r\n        \"DropzoneText\": \"Przeciągnij i upuść tutaj lub kliknij, aby wczytać plik\",\r\n        \"UploadFile\": \"Wczytaj plik\",\r\n        \"RemoveFile\": \"Usuń plik\",\r\n        \"FileName\": \"Nazwa\",\r\n        \"FileSize\": \"Rozmiar\",\r\n        \"IPConfigTitle\": \"Konfiguracja IP\",\r\n        \"NetworkInterfaces\": \"Interfejsy sieciowe\",\r\n        \"Edit\": \"Edytuj\",\r\n        \"IPAddress\": \"Adres IP\",\r\n        \"SubnetMask\": \"Maska podsieci\",\r\n        \"Gateway\": \"Brama domyślna\",\r\n        \"DHCPTrue\": \"Tak\",\r\n        \"DHCPFalse\": \"Nie\"\r\n      },\r\n      \"LoginPage\": {\r\n        \"LoginTitle\": \"Zaloguj się\",\r\n        \"LoginButton\": \"Zaloguj\",\r\n        \"FormLoginTextField\": \"Login\",\r\n        \"FormPasswordTextField\": \"Hasło\",\r\n        \"InvalidLoginPassword\": \"Nieprawidłowa nazwa lub hasło\",\r\n        \"FormLoginTextFieldHelperText\": \"Co najmniej 3 znaki\",\r\n        \"FormPasswordTextFieldHelperText\": \"Co najmniej 8 znaków\",\r\n        \"Language\": \"Język\"\r\n      },\r\n      \"AccountMenu\": {\r\n        \"MyAccount\": \"Moje konto\",\r\n        \"Logout\": \"Wyloguj\",\r\n        \"Profile\": \"Profil\",\r\n        \"UserAccounts\": \"Konta użytkowników\"\r\n      },\r\n      \"AccountPage\": {\r\n        \"Title\": \"Ustawienia konta\",\r\n        \"NameTextField\": \"Nazwa\",\r\n        \"CurrentPasswordTextField\": \"Aktualne hasło\",\r\n        \"NewPasswordTextField\": \"Nowe hasło\",\r\n        \"ChangePasswordButton\": \"Zmień hasło\",\r\n        \"PasswordHelperError8characters\": \"Hasło musi się składać z co najmniej 8 znaków\",\r\n        \"PasswordHelperErrorSamePasswords\": \"Nowe hasło nie może być takie same jak aktualne\",\r\n        \"Permissions\": \"Uprawnienia\"\r\n      },\r\n      \"CreateAccountDialog\": {\r\n        \"TitleCreate\": \"Utwórz nowe konto\",\r\n        \"TitleEdit\": \"Edytuj konto\",\r\n        \"Cancel\": \"Anuluj\",\r\n        \"Create\": \"Utwórz\",\r\n        \"Update\": \"Aktualizuj\",\r\n        \"NameTextField\": \"Nazwa\",\r\n        \"PasswordTextField\": \"Hasło\",\r\n        \"NewPasswordTextField\": \"Nowe hasło\",\r\n        \"PermissionsSelect\": \"Uprawnienia\",\r\n        \"HelperTextName\": \"Co najmniej 3 znaki\",\r\n        \"HelperTextPassword\": \"Co najmniej 8 znaków\",\r\n        \"AccountBeingEditedSubtitle\": \"Edytujesz następujące konto: \"\r\n      },\r\n      \"UserAccountsPage\": {\r\n        \"CreateUser\": \"Utwórz użytkownika\",\r\n        \"NameColumn\": \"Nazwa\",\r\n        \"PermissionsColumn\": \"Uprawnienia\",\r\n        \"ActionColumn\": \"Akcje\",\r\n        \"TooltipDelete\": \"Usuń\",\r\n        \"TooltipEdit\": \"Edytuj\"\r\n      },\r\n      \"Snackbar\": {\r\n        \"SuccessfulUserCreation\": \"Użytkownik pomyślnie utworzony\",\r\n        \"SuccessfulUserDeletion\": \"Użytkownik pomyślnie usunięty\",\r\n        \"SuccessfulUserEdit\": \"Edytowano pomyślnie\",\r\n        \"SuccessfulPasswordChange\": \"Zmieniono hasło pomyślnie\",\r\n        \"UnsuccessfulPasswordChange\": \"Aktualne hasło jest nieprawidłowe\",\r\n        \"UnsuccessfulUserEdit\": \"Nie powiodła się edycja użytkownika\",\r\n        \"SuccessfulFileUpload\": \"Pomyślnie przesłano plik\",\r\n        \"UnsuccessfulFileUpload403\": \"Tylko konta admina mają uprawnienia do wysyłania pliku konfiguracyjnego\",\r\n        \"UnsuccessfulFileUpload400\": \"Nieprawidłowa zawartość pliku\",\r\n        \"UnknownError\": \"Wystąpił nieznany błąd. Spróbuj ponownie.\",\r\n        \"Generic403\": \"Brak uprawnień\",\r\n        \"LoginFailed\": \"Podany login i/lub hasło są nieprawidłowe\",\r\n        \"SuccessfulIPConfig\": \"Konfiguracja IP przebiegła pomyślnie\",\r\n        \"UnsuccessfulIPConfig\": \"Wprowadzone dane są nieprawidłowe. Spróbuj ponownie.\"\r\n      },\r\n      \"ConfirmDeleteUserDialog\": {\r\n        \"Title\": \"Proszę potwierdzić usunięcie. Ten proces jest nieodwracalny.\",\r\n        \"AccountToBeDeleted\": \"Zostanie usunięte następujące konto: \",\r\n        \"Confirm\": \"Potwierdź\",\r\n        \"Cancel\": \"Anuluj\"\r\n      },\r\n      \"IPConfigDialog\": {\r\n        \"DNSPrimary\": \"Podstawowy DNS\",\r\n        \"DNSSecondary\": \"Alternatywny DNS\",\r\n        \"DisconnectionWarningDhcpFalse\": \"Po zmianie adresu IP stracisz połączenie z urządzeniem i aplikacją pod tym adresem. Spróbujemy Cię automatycznie przekierować na nowy.\",\r\n        \"DisconnectionWarningDhcpTrue\": \"Po zmianie adresu IP stracisz połączenie z urządzeniem i aplikacją pod tym adresem. Twój router automatycznie przydzieli nowy adres, który należy wprowadzić w pasek adresu przeglądarki by wznowić połączenie.\",\r\n        \"CurrentHostnameText\": \"Aktualny adres IP urządzenia/aplikacji\",\r\n        \"ConfirmButton\": \"Potwierdź\",\r\n        \"CancelButton\": \"Anuluj\"\r\n      }\r\n    }\r\n  }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  title: {\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\n function LanguageDialog(props) {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n  const chooseLanguage = (language) => {\r\n    props.setLanguageDialogOpen(false)\r\n    i18n.changeLanguage(language)\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={()=>props.setLanguageDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={props.open} fullWidth={true} maxWidth=\"sm\">\r\n      <DialogTitle className={classes.title} id=\"simple-dialog-title\">{t('LanguageSelection.Label')}</DialogTitle>\r\n      <List>\r\n        <ListItem button onClick={()=>chooseLanguage('pl')}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              PL\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={t('LanguageSelection.PolishLanguage')} />\r\n        </ListItem>\r\n        <ListItem button onClick={()=>chooseLanguage('en')}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              EN\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={t('LanguageSelection.EnglishLanguage')} />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.LanguageDialogReducer.open\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageDialog);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setCreateAccountDialogNewpasswordTextfield\r\n} from '../actions/CreateAccountDialog.action';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserService from '../services/user.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CreateAccountDialog({ open,\r\n  type,\r\n  name,\r\n  nameError,\r\n  password,\r\n  passwordError,\r\n  permissions,\r\n  editAccountId,\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setSnackbarShown,\r\n  setSnackbarText,\r\n  setUserAccountsList }) {\r\n\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  let history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    const val = event.target.value;\r\n    const name = event.target.name;\r\n    setCreateAccountDialogPasswordTextfieldError(false)\r\n    setCreateAccountDialogNameTextfieldError(false)\r\n\r\n    if (name === 'name') {\r\n      setCreateAccountDialogNameTextfield(val)\r\n    }\r\n    else if (name === 'password') {\r\n      setCreateAccountDialogPasswordTextfield(val)\r\n    }\r\n    else if (name === 'newpassword') {\r\n      setCreateAccountDialogNewpasswordTextfield(val)\r\n    }\r\n    else {\r\n      setCreateAccountDialogPermissionsSelect(val)\r\n    }\r\n  }\r\n\r\n  const disableButton = () => {\r\n    if (type === 'edit') {\r\n      if (password.length > 0 && password.length < 8) {\r\n        return true\r\n      }\r\n    }\r\n    else {\r\n      if (password.length < 8 || name.length < 3) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const register = () => {\r\n    UserService.register(name, password, permissions).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulUserCreation'), 'success')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setCreateAccountDialogOpen(false)\r\n        UserService.getAllAccounts().then(res => {\r\n          setUserAccountsList(res.data)\r\n        })\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setCreateAccountDialogOpen(false)\r\n      }\r\n      else {\r\n        setCreateAccountDialogNameTextfieldError(true)\r\n        setCreateAccountDialogPasswordTextfieldError(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const edit = () => {\r\n    UserService.editAccount(editAccountId, name, permissions, password === '' ? false : password).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulUserEdit'), 'success')\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogOpen(false)\r\n        UserService.getAllAccounts().then(res => {\r\n          setUserAccountsList(res.data)\r\n        })\r\n        //if edited account is currently logged in\r\n        if (res._id === AuthService.getCurrentUser()._id) {\r\n          AuthService.logout()\r\n          history.push('/login')\r\n        }\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const cancel = () => {\r\n    setCreateAccountDialogOpen(false)\r\n    setCreateAccountDialogPasswordTextfield('')\r\n    setCreateAccountDialogNameTextfield('')\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setCreateAccountDialogOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">{type === 'create' ? t('CreateAccountDialog.TitleCreate') : t('CreateAccountDialog.TitleEdit')}</DialogTitle>\r\n      <DialogContent>\r\n        {type === 'edit' ?\r\n          <DialogContentText>\r\n            {t('CreateAccountDialog.AccountBeingEditedSubtitle')}<strong>{name}</strong>\r\n          </DialogContentText>\r\n          : null}\r\n        <form className={classes.form}>\r\n          {AuthService.getCurrentUser() !== null ?\r\n            <div>\r\n              <TextField\r\n                disabled={type === 'edit' ? true : false}\r\n                error={nameError}\r\n                helperText={nameError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormLoginTextFieldHelperText')}\r\n                onChange={handleChange}\r\n                name=\"name\"\r\n                value={name}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label={t('CreateAccountDialog.NameTextField')}\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormPasswordTextFieldHelperText')}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n                value={password}\r\n                name=\"password\"\r\n                margin=\"dense\"\r\n                id=\"password\"\r\n                label={t('CreateAccountDialog.PasswordTextField')}\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"permissions\">{t('CreateAccountDialog.PermissionsSelect')}</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"permissions\"\r\n                  id=\"permissions-select\"\r\n                  name=\"permissions\"\r\n                  value={permissions}\r\n                  onChange={handleChange}\r\n                >\r\n                  {AuthService.getCurrentUser().permissions >= 3 ? <MenuItem value={1}>User</MenuItem> : null}\r\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={3}>Admin</MenuItem> : null}\r\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={7}>SuperAdmin</MenuItem> : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            : null}\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => cancel()} color=\"primary\">\r\n          {t('CreateAccountDialog.Cancel')}\r\n        </Button>\r\n        <Button disabled={disableButton()} onClick={() => type === 'edit' ? edit() : register()} color=\"primary\">\r\n          {type === 'create' ? t('CreateAccountDialog.Create') : t('CreateAccountDialog.Update')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.CreateAccountDialog.open,\r\n    type: state.CreateAccountDialog.type,\r\n    name: state.CreateAccountDialog.name,\r\n    nameError: state.CreateAccountDialog.nameError,\r\n    password: state.CreateAccountDialog.password,\r\n    passwordError: state.CreateAccountDialog.passwordError,\r\n    permissions: state.CreateAccountDialog.permissions,\r\n    editAccountId: state.CreateAccountDialog.editAccountId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setSnackbarText,\r\n  setSnackbarShown,\r\n  setUserAccountsList,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountDialog);","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { setSnackbarShown } from '../actions/Snackbar.action';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CustomizedSnackbars(props) {\r\n  \r\n  const classes = useStyles();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    props.setSnackbarShown(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={props.shown} autoHideDuration={5000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.severity}>\r\n          {props.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    text: state.SnackbarReducer.text,\r\n    shown: state.SnackbarReducer.shown,\r\n    severity: state.SnackbarReducer.severity\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedSnackbars);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\r\nimport UserService from '../services/user.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AlertDialog(props) {\r\n  const { t } = useTranslation();\r\n  let history = useHistory();\r\n\r\n  const deletePerm = () => {\r\n    UserService.deleteAccount(props.accountIdToBeDeleted).then(res => {\r\n      if (res.status === 200) {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.SuccessfulUserDeletion'));\r\n        props.setSnackbarShown(true);\r\n        //if edited account is currently logged in\r\n        if (props.accountIdToBeDeleted === AuthService.getCurrentUser()._id) {\r\n          AuthService.logout()\r\n          history.push('/login')\r\n        }\r\n        else {\r\n          UserService.getAllAccounts().then(res => {\r\n            props.setUserAccountsList(res.data)\r\n          })\r\n        }\r\n      }\r\n      else if (res.status === 403) {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.Generic403'));\r\n        props.setSnackbarShown(true);\r\n      }\r\n      else {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.UnknownError'));\r\n        props.setSnackbarShown(true);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={() => props.setConfirmDeleteUserDialogOpen(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{t('ConfirmDeleteUserDialog.Title')}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {t('ConfirmDeleteUserDialog.AccountToBeDeleted')}<strong>{props.accountNameToBeDeleted}</strong>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => deletePerm()} color=\"secondary\">\r\n          {t('ConfirmDeleteUserDialog.Confirm')}\r\n        </Button>\r\n        <Button onClick={() => props.setConfirmDeleteUserDialogOpen(false)} color=\"primary\" autoFocus>\r\n          {t('ConfirmDeleteUserDialog.Cancel')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.ConfirmDeleteUserDialogReducer.open,\r\n    accountNameToBeDeleted: state.ConfirmDeleteUserDialogReducer.username,\r\n    accountIdToBeDeleted: state.ConfirmDeleteUserDialogReducer.id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setUserAccountsList,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialog);","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction SimpleBackdrop({ open }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.BackdropReducer.open,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(SimpleBackdrop)","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n} from '../actions/Snackbar.action';\r\nimport {\r\n  setBackdropOpen,\r\n  setBackdropClosed\r\n} from '../actions/Backdrop.action';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setIpConfigDialogOpen,\r\n  setIpConfigDialogIpAddress,\r\n  setIpConfigDialogSubnetMask,\r\n  setIpConfigDialogGateway,\r\n  setIpConfigDialogDHCP,\r\n  setIpConfigDialogDNSPrimary,\r\n  setIpConfigDialogDNSSecondary\r\n} from '../actions/IPconfigDialog.action';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IPConfigService from '../services/ipconfig.service';\r\nimport { setIPConfiguration } from '../actions/Settings.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1)\r\n    },\r\n  },\r\n  visible: {\r\n    display: 'inline-flex'\r\n  },\r\n  invisible: {\r\n    display: 'none'\r\n  },\r\n  disconnectionWarning: {\r\n    color: 'red'\r\n  }\r\n})\r\n)\r\n\r\nfunction IPConfigDialog({ open,\r\n  ipAddress,\r\n  subnetMask,\r\n  gateway,\r\n  name,\r\n  dhcp,\r\n  dnsPrimary,\r\n  dnsSecondary,\r\n  ipConfig,\r\n  setIpConfigDialogOpen,\r\n  setIpConfigDialogIpAddress,\r\n  setIpConfigDialogSubnetMask,\r\n  setIpConfigDialogGateway,\r\n  setIpConfigDialogDHCP,\r\n  setIpConfigDialogDNSPrimary,\r\n  setIpConfigDialogDNSSecondary,\r\n  setBackdropOpen,\r\n  setBackdropClosed,\r\n  setSnackbarText,\r\n  setSnackbarShown,\r\n  setIPConfiguration\r\n}) {\r\n\r\n  useEffect(() => {\r\n    if (ipConfig[name] !== undefined) {\r\n      setIpConfigDialogIpAddress(ipConfig[name].ipAddress)\r\n      setIpConfigDialogSubnetMask(ipConfig[name].subnetMask)\r\n      setIpConfigDialogGateway(ipConfig[name].gateway)\r\n      setIpConfigDialogDHCP(ipConfig[name].dhcp)\r\n      if (ipConfig[name].dns[0] !== undefined) {\r\n        setIpConfigDialogDNSPrimary(ipConfig[name].dns[0])\r\n      }\r\n      if (ipConfig[name].dns[1] !== undefined) {\r\n        setIpConfigDialogDNSSecondary(ipConfig[name].dns[1])\r\n      }\r\n    }\r\n  }, [open, setIpConfigDialogIpAddress, setIpConfigDialogSubnetMask, setIpConfigDialogGateway, setIpConfigDialogDHCP, setIpConfigDialogDNSPrimary, setIpConfigDialogDNSSecondary, ipConfig, name])\r\n  const classes = useStyles();\r\n  const { t } = useTranslation()\r\n\r\n  const handleChange = (event) => {\r\n    const val = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    switch (name) {\r\n      case 'ip-address':\r\n        setIpConfigDialogIpAddress(val)\r\n        break;\r\n      case 'subnet-mask':\r\n        setIpConfigDialogSubnetMask(val)\r\n        break;\r\n      case 'gateway':\r\n        setIpConfigDialogGateway(val)\r\n        break;\r\n      case 'dhcp':\r\n        setIpConfigDialogDHCP(event.target.checked)\r\n        break;\r\n      case 'dns-primary':\r\n        setIpConfigDialogDNSPrimary(val)\r\n        break;\r\n      case 'dns-secondary':\r\n        setIpConfigDialogDNSSecondary(val)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  const apiWithTimeout = (httpReq, milliseconds) => {\r\n    setIpConfigDialogOpen(false)\r\n    setBackdropOpen()\r\n    return new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        reject(new Error(\"Data fetch failed in \" + milliseconds + \" ms\"))\r\n      }, milliseconds)\r\n      httpReq.then(res => { resolve(res) }, err => { reject(err) })\r\n    })\r\n  };\r\n\r\n  const setIpConfig = () => {\r\n    let config = {\r\n      name: name,\r\n      dhcp: dhcp,\r\n      dns: []\r\n    }\r\n    if (dnsPrimary !== '') {\r\n      config = {\r\n        ...config,\r\n        dns: [...config.dns, dnsPrimary]\r\n      }\r\n    }\r\n    if (dnsSecondary !== '') {\r\n      config = {\r\n        ...config,\r\n        dns: [...config.dns, dnsSecondary]\r\n      }\r\n    }\r\n\r\n    if (dhcp === false) {\r\n      config = {\r\n        ...config,\r\n        ipAddress: ipAddress,\r\n        subnetMask: subnetMask,\r\n        gateway: gateway\r\n      }\r\n    }\r\n\r\n    apiWithTimeout(IPConfigService.setIpConfig(name, config), 10000).then(res => { \r\n      IPConfigService.getIpConfig().then(res => {\r\n        if (res.status === 200) {\r\n          setIPConfiguration(res.data)\r\n        }\r\n      })\r\n      setBackdropClosed()\r\n      if(res.status===200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulIPConfig'), 'success')\r\n        setSnackbarShown(true)\r\n      } \r\n      else if(res.status===400) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulIPConfig'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    }).catch(() => {\r\n      if(dhcp!==true) {\r\n        window.location.href = `http://${ipAddress}:${window.location.port}`\r\n      }\r\n      else {\r\n        window.location.reload()\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={() => setIpConfigDialogOpen(false)} aria-labelledby=\"form-dialog-title\" >\r\n        <DialogTitle id=\"form-dialog-title\">Change configuration</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className={classes.disconnectionWarning}>\r\n            {dhcp === false ? t('IPConfigDialog.DisconnectionWarningDhcpFalse') : t('IPConfigDialog.DisconnectionWarningDhcpTrue')}\r\n          </DialogContentText>\r\n          <DialogContentText>\r\n            {`${t('IPConfigDialog.CurrentHostnameText')}: ${window.location.origin}`}\r\n          </DialogContentText>\r\n          <form className={classes.form}>\r\n            <div>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={dhcp} onChange={handleChange} name=\"dhcp\" />}\r\n                  label=\"DHCP\"\r\n                />\r\n              </FormGroup>\r\n              <TextField\r\n                className={dhcp ? classes.invisible : classes.visible}\r\n                autoFocus\r\n                value={ipAddress}\r\n                margin=\"dense\"\r\n                id=\"ip-address\"\r\n                name=\"ip-address\"\r\n                label={t('SettingsPage.IPAddress')}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={dhcp ? classes.invisible : classes.visible}\r\n                value={subnetMask}\r\n                margin=\"dense\"\r\n                id=\"subnet-mask\"\r\n                name=\"subnet-mask\"\r\n                label={t('SettingsPage.SubnetMask')}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                className={dhcp ? classes.invisible : classes.visible}\r\n                value={gateway}\r\n                margin=\"dense\"\r\n                id=\"gateway\"\r\n                name=\"gateway\"\r\n                label={t('SettingsPage.Gateway')}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                value={dnsPrimary}\r\n                margin=\"dense\"\r\n                id=\"dns-primary\"\r\n                name=\"dns-primary\"\r\n                label={t('IPConfigDialog.DNSPrimary')}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                value={dnsSecondary}\r\n                margin=\"dense\"\r\n                id=\"dns-secondary\"\r\n                name=\"dns-secondary\"\r\n                label={t('IPConfigDialog.DNSSecondary')}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                fullWidth\r\n              />\r\n\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setIpConfigDialogOpen(false)} color=\"primary\">\r\n            {t('IPConfigDialog.CancelButton')}\r\n          </Button>\r\n          <Button onClick={() => setIpConfig()} color=\"primary\">\r\n            {t('IPConfigDialog.ConfirmButton')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.IPConfigReducer.open,\r\n    name: state.IPConfigReducer.name,\r\n    ipAddress: state.IPConfigReducer.ipAddress,\r\n    subnetMask: state.IPConfigReducer.subnetMask,\r\n    gateway: state.IPConfigReducer.gateway,\r\n    dhcp: state.IPConfigReducer.dhcp,\r\n    dnsPrimary: state.IPConfigReducer.dnsPrimary,\r\n    dnsSecondary: state.IPConfigReducer.dnsSecondary,\r\n    ipConfig: state.SettingsReducer.ipconfig\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarText,\r\n  setSnackbarShown,\r\n  setBackdropOpen,\r\n  setBackdropClosed,\r\n  setIpConfigDialogOpen,\r\n  setIpConfigDialogIpAddress,\r\n  setIpConfigDialogSubnetMask,\r\n  setIpConfigDialogGateway,\r\n  setIpConfigDialogDHCP,\r\n  setIpConfigDialogDNSPrimary,\r\n  setIpConfigDialogDNSSecondary,\r\n  setIPConfiguration\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IPConfigDialog);","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  createMuiTheme,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport Drawer from './components/Drawer.component';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/Root.reducer\";\nimport './i18n';\nimport LanguageDialog from './components/LanguageSelectionDialog.component';\nimport CreateAccountDialog from './components/CreateAccountDialog.component';\nimport Snackbar from './components/Snackbar.component';\nimport ConfirmDeleteUserDialog from './components/ConfirmDeleteUserDialog.component';\nimport Backdrop from './components/Backdrop.component';\nimport IPConfigDialog from './components/IPConfigDialog.component';\n\nconst store = createStore(rootReducer);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#41aaaa',\n      main: '#009999',\n      dark: '#00646e',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Drawer />\n          </Router>\n          <CreateAccountDialog />\n          <ConfirmDeleteUserDialog />\n          <LanguageDialog />\n          <IPConfigDialog />\n          <Snackbar />\n          <Backdrop />\n        </Provider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}