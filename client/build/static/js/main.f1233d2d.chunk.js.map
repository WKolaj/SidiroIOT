{"version":3,"sources":["workers/devices.worker.js","workers/hwinfo.worker.js","services/file.service.js","actions/Snackbar.action.js","components/Dropzone.component.js","components/Settings.component.js","actions/DevicesList.action.js","components/DevicesList.component.js","actions/UniversalTabs.action.js","components/UniversalTabs.component.js","actions/DevicesSelectionPage.action.js","components/CollapsibleTable.component.js","services/device.service.js","components/DevicesSelectionPage.component.js","services/activate.service.js","actions/AccountPage.action.js","services/user.service.js","components/AccountPage.component.js","components/UniversalTable.component.js","actions/UserAccountsPage.action.js","actions/CreateAccountDialog.action.js","actions/ConfirmDeleteUserDialog.action.js","services/auth.service.js","components/UserAccountsPage.component.js","services/isAuthenticated.service.js","actions/Authentication.action.js","routes/ProtectedAdmin.routes.js","routes/DrawerRoutes.routes.js","actions/LanguageDialog.action.js","actions/LoginPage.action.js","components/LoginPage.component.js","actions/HardwareUsage.action.js","routes/protected.routes.js","components/CircularProgress.component.js","components/Drawer.component.js","reducers/LanguageDialog.reducer.js","reducers/UniversalTabs.reducer.js","reducers/DevicesList.reducer.js","reducers/LoginPage.reducer.js","reducers/AccountPage.reducer.js","reducers/HardwareUsage.reducer.js","reducers/Authentication.reducer.js","reducers/CreateAccountDialog.reducer.js","reducers/UserAccountsPage.reducer.js","reducers/Snackbar.reducer.js","reducers/ConfirmDeleteUserDialog.reducer.js","reducers/DevicesSelectionPage.reducer.js","reducers/Root.reducer.js","i18n.js","translations.js","components/LanguageSelectionDialog.component.js","components/CreateAccountDialog.component.js","components/Snackbar.component.js","components/ConfirmDeleteUserDialog.component.js","App.js","serviceWorker.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","API_URL","file","formData","FormData","append","fetch","method","headers","JSON","parse","localStorage","getItem","accessToken","body","response","status","json","configFile","data","fileName","a","document","createElement","appendChild","style","stringify","blob","Blob","type","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","SET_SNACKBAR_TEXT","SET_SNACKBAR_SHOWN","setSnackbarText","text","severity","setSnackbarShown","shown","useStyles","makeStyles","theme","dropzoneText","color","mapDispatchToProps","connect","classes","t","useTranslation","onDrop","useCallback","acceptedFiles","FileService","uploadConfigFile","then","res","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","className","Typography","variant","Fragment","Grid","container","spacing","item","xs","sm","md","lg","Button","onClick","downloadConfigFile","saveFileAs","fullWidth","SELECT_DEVICE","root","width","active","inactive","selectDevice","deviceIndex","deviceID","deviceType","state","selectedDevice","DevicesListReducer","allDevices","DevicesSelectionPageReducer","devices","props","useEffect","selectedDeviceID","length","firstEntry","Object","entries","id","List","component","aria-label","map","dev","index","properties","isActive","undefined","isConnected","ListItem","button","selected","selectedDeviceIndex","ListItemIcon","ListItemText","primary","SET_UNIVERSAL_TABS_NAME_INDEX","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","p","flexGrow","marginBottom","defaultRoot","noElevation","boxShadow","setUniversalTabsNameIndex","tabsInstance","UniversalTabsReducer","defaultMargin","AppBar","position","Tabs","onChange","event","scrollButtons","indicatorColor","textColor","tabs","tab","i","Tab","label","content","SET_ALL_DEVICES","REFRESH_DEVICE_PARAMS","useRowStyles","borderBottom","test","notObject","element","every","Row","React","useState","open","setOpen","objects","setObjects","row","columns","obj","cell","push","createCollapsedTable","cols","rows","col","TableRow","TableCell","IconButton","size","toString","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","margin","gutterBottom","marginTop","Table","TableHead","TableBody","SimpleRow","CollapsibleTable","TableContainer","Paper","filter","column","instance","deviceData","activate","device","title","onboarded","offboarded","setAllDevices","refreshDeviceParams","params","authenticated","AuthenticationReducer","authed","DeviceService","getDevices","arr","key","reformatDeviceDataToReducer","refreshDeviceData","message","worker","addEventListener","postMessage","token","removeEventListener","terminate","createTab","includes","isNaN","formatDateTime","Date","belongsToColumn","parseFloat","toFixed","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getDate","getMonth","getFullYear","isBoarded","selectedDeviceType","boarded","activateDevice","ActivateService","createTabs","disabled","SET_ACCOUNT_FORM_CURRENT_PASSWORD","SET_ACCOUNT_FORM_NEW_PASSWORD","userData","permissions","newPassword","bodyWithPasswords","password","oldPassword","username","textAlign","loginButton","form","setAccountFormCurrentPassword","setAccountFormNewPassword","currentPassword","AccountPageReducer","accountDetails","setAccountDetails","getMyAccountDetails","UserService","verify","textfield","lengthErrorText","similarityErrorText","error","direction","justify","alignContent","xl","Chip","avatar","Avatar","noValidate","autoComplete","_id","TextField","defaultValue","e","target","helperText","editMyPassword","useStyles1","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","Math","ceil","max","useStyles2","table","CustomPaginationActionsTable","noPagination","setPage","setRowsPerPage","emptyRows","min","colIndex","rowIndex","cellIndex","slice","height","TableFooter","TablePagination","labelDisplayedRows","from","to","labelRowsPerPage","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","SET_USER_ACCOUNTS_LIST","setUserAccountsList","list","SET_CREATE_ACCOUNT_DIALOG_OPEN","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR","SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT","SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD","SET_CREATE_ACCOUNT_DIALOG_EDIT_ID","setCreateAccountDialogOpen","dialogType","setCreateAccountDialogNameTextfield","setCreateAccountDialogPermissionsSelect","SET_CONFIRM_DELETE_USER_DIALOG_OPEN","SET_CONFIRM_DELETE_USER_DIALOG_USERNAME","setConfirmDeleteUserDialogOpen","setConfirmDeleteUserDialogUsername","get","setItem","Error","removeItem","icons","setCreateAccountDialogEditId","accountsList","UserAccountsPageReducer","getAllAccounts","checkPermissions","currentUser","AuthService","getCurrentUser","acc","Tooltip","placement","startIcon","isAuthenticated","user","isAdmin","SET_AUTHENTICATED","setAuthenticated","rest","render","location","pathname","DrawerRoutes","path","SET_LANGUAGE_DIALOG_OPEN","setLanguageDialogOpen","SET_FORM_USERNAME","SET_FORM_PASSWORD","SET_FORM_USERNAME_ERROR","SET_FORM_PASSWORD_ERROR","contentDesktop","contentMobile","fab","top","right","setFormPassword","setFormUsername","setFormUsernameError","setFormPasswordError","login","LoginPageReducer","loginError","usernameError","passwordError","matches","useMediaQuery","breakpoints","down","history","useHistory","tryLogin","catch","handleKeyDown","controlFormFields","field","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","Zoom","transitionDelay","Fab","align","onKeyDown","SET_HARDWARE_USAGE","CircularProgressWithLabel","percentColors","pct","r","g","b","marginRight","CircularProgress","thickness","animationDuration","lower","upper","range","rangePct","pctLower","pctUpper","floor","join","getColorForPercentage","left","bottom","justifyContent","round","unit","drawerWidth","appBar","zIndex","drawer","create","easing","sharp","appBarShift","menuButton","hide","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","paddingLeft","paddingRight","bottomNavi","borderTop","up","hardwareUsage","sectionDesktop","sectionMobile","setHardwareUsage","cpuUsage","cpuTemperature","ramUsage","diskUsage","HardwareUsageReducer","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","bottomNaviValue","setBottomNaviValue","useLocation","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Link","logout","Divider","num","mobileMenuId","renderMobileMenu","Badge","badgeContent","icon","faMicrochip","faThermometerHalf","faMemory","faHdd","aria-controls","aria-haspopup","CssBaseline","clsx","Toolbar","edge","noWrap","Drawer","paper","BottomNavigation","showLabels","BottomNavigationAction","initialState","nameError","editAccountId","combineReducers","LanguageDialogReducer","action","CreateAccountDialog","newpassword","SnackbarReducer","ConfirmDeleteUserDialogReducer","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","documentElement","checkWhitelist","checkForSimilarInWhitelist","cookieOptions","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","pl","detection","fallbackLng","keySeparator","interpolation","escapeValue","blue","chooseLanguage","language","changeLanguage","Dialog","DialogTitle","ListItemAvatar","formControl","selectEmpty","setCreateAccountDialogPasswordTextfield","setCreateAccountDialogNameTextfieldError","setCreateAccountDialogPasswordTextfieldError","handleChange","val","DialogContent","DialogContentText","autoFocus","FormControl","InputLabel","Select","labelId","DialogActions","disableButton","editAccount","register","Alert","elevation","handleClose","reason","Snackbar","autoHideDuration","accountNameToBeDeleted","accountIdToBeDeleted","aria-describedby","deleteAccount","store","createStore","rootReducer","createMuiTheme","palette","light","main","dark","contrastText","secondary","App","ThemeProvider","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f1233d2d.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"3205fa68b09a77991a63.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"3b693e3ceeda33523431.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","const API_URL = \"/api/configFile/\";\r\n\r\nclass FileService {\r\n  async uploadConfigFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      },\r\n      body: formData\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async downloadConfigFile() {\r\n    const response = await fetch(API_URL, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n      }\r\n    })\r\n    if (response.status === 200) {\r\n      const configFile = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: configFile\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  saveFileAs(data, fileName) {\r\n    var a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    var json = JSON.stringify(data),\r\n      blob = new Blob([json], { type: \"octet/stream\" }),\r\n      url = window.URL.createObjectURL(blob);\r\n    a.href = url;\r\n    a.download = fileName;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n\r\n  };\r\n}\r\n\r\nexport default new FileService();","export const SET_SNACKBAR_TEXT = 'SET_SNACKBAR_TEXT';\r\nexport const SET_SNACKBAR_SHOWN = 'SET_SNACKBAR_SHOWN';\r\n\r\nexport const setSnackbarText = (text, severity) => ({ type: SET_SNACKBAR_TEXT, text: text, severity: severity})\r\nexport const setSnackbarShown = (shown) => ({ type: SET_SNACKBAR_SHOWN, shown: shown})","import React, { useCallback, useMemo } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FileService from '../services/file.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropzoneText: {\r\n    color: 'rgb(140 140 140)'\r\n  },\r\n}));\r\n\r\nfunction Dropzone({ setSnackbarText, setSnackbarShown }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    // Do something with the files\r\n    FileService.uploadConfigFile(acceptedFiles[0]).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulFileUpload'), 'success')\r\n        setSnackbarShown(true)\r\n      }\r\n      else if(res.status === 403) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else if(res.status === 400) {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulFileUpload400'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setSnackbarShown, setSnackbarText, t])\r\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({ onDrop, accept: 'application/JSON' });\r\n\r\n  \r\n  const style = useMemo(() => {\r\n    const baseStyle = {\r\n      flex: 1,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: '40px',\r\n      borderWidth: 2,\r\n      borderRadius: 2,\r\n      borderColor: 'rgb(187 187 187)',\r\n      borderStyle: 'dashed',\r\n      backgroundColor: 'rgb(255 255 255)',\r\n      outline: 'none',\r\n      transition: 'border .5s ease-in-out'\r\n    };\r\n  \r\n    const activeStyle = {\r\n      borderColor: '#2196f3'\r\n    };\r\n  \r\n    const acceptStyle = {\r\n      borderColor: '#00e676'\r\n    };\r\n  \r\n    const rejectStyle = {\r\n      borderColor: '#ff1744'\r\n    };\r\n  \r\n    return {\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {})\r\n    }\r\n    \r\n  }, [\r\n    isDragActive,\r\n    isDragReject,\r\n    isDragAccept\r\n  ]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({ style })} className=\"dropzone\">\r\n        <input {...getInputProps()} />\r\n        <Typography variant=\"body1\" className={classes.dropzoneText}>{t('SettingsPage.DropzoneText')}</Typography>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Dropzone);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dropzone from './Dropzone.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FileService from '../services/file.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Settings({ setSnackbarText, setSnackbarShown }) {\r\n  const { t } = useTranslation()\r\n\r\n  const getConfigFile = () => {\r\n    FileService.downloadConfigFile().then(res => {\r\n      if (res.status === 200) {\r\n        FileService.saveFileAs(res.data, 'projectSettings.json')\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('SettingsPage.Title')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Dropzone />\r\n        </Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}>\r\n          <Button\r\n            onClick={() => getConfigFile()}\r\n            fullWidth variant=\"contained\" color=\"primary\">{t('SettingsPage.LoadButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Settings);","export const SELECT_DEVICE = 'SELECT_DEVICE';\r\n\r\nexport const selectDevice = (deviceIndex, deviceID, deviceType) => ({ type: SELECT_DEVICE, deviceIndex: deviceIndex, deviceID: deviceID, deviceType: deviceType })","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport { connect } from 'react-redux';\r\nimport { selectDevice } from '../actions/DevicesList.action';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MemoryIcon from '@material-ui/icons/Memory';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    //backgroundColor: theme.palette.background.paper,\r\n  },\r\n  active: {\r\n    color: 'green'\r\n  },\r\n  inactive: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nfunction SimpleList(props) {\r\n  const classes = useStyles();\r\n  const { allDevices, selectedDevice, selectDevice } = props;\r\n\r\n  useEffect(() => {\r\n    if(selectedDevice.selectedDeviceID === '' && allDevices.length>0) {\r\n      const firstEntry = Object.entries(allDevices[0])\r\n      selectDevice(0, firstEntry[0][1].id, firstEntry[0][1].type)\r\n    }\r\n  }, [allDevices, selectDevice, selectedDevice.selectedDeviceID])\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"device selection\">\r\n        {allDevices.map((dev, index) => {\r\n          const entries = Object.entries(dev)\r\n          for (const [, properties] of entries) {\r\n            const isActive = properties.isConnected !==undefined? properties.isConnected && properties.isActive : properties.isActive;\r\n            return (<ListItem key={index} button\r\n              selected={selectedDevice.selectedDeviceIndex === index ? true : false}\r\n              onClick={() => props.selectDevice(index, properties.id, properties.type)}>\r\n              <ListItemIcon>\r\n                {properties.type === 'MBDevice' ? <AssessmentIcon className={isActive ? classes.active : classes.inactive} />\r\n                  : properties.type === 'S7Device' ? <MemoryIcon className={isActive ? classes.active : classes.inactive} />\r\n                    : properties.type === 'InternalDevice' ? <StorageIcon className={isActive ? classes.active : classes.inactive} />\r\n                      : <CloudIcon className={isActive ? classes.active : classes.inactive} />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={properties.id} />\r\n            </ListItem>)\r\n          }\r\n          return null\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDevice: state.DevicesListReducer,\r\n    allDevices: state.DevicesSelectionPageReducer.devices\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  selectDevice\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleList)","export const SET_UNIVERSAL_TABS_NAME_INDEX = 'SET_UNIVERSAL_TABS_NAME_INDEX';\r\n\r\nexport const setUniversalTabsNameIndex = (name, index) => ({ type: SET_UNIVERSAL_TABS_NAME_INDEX, name: name, index: index })","// universal tabs component with tabpanels, only horizontal\r\n//pass required prop 'tabs' to it with [{label: yourlabeltext, content: yourcontent}, ...]\r\n// prop required 'name' required for redux active tab index storage\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { setUniversalTabsNameIndex } from '../actions/UniversalTabs.action';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={1}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport function a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    //width: `calc(100% + 16px)`,\r\n    //backgroundColor: theme.palette.background.paper,\r\n    //margin: '-8px',\r\n    marginBottom: '20px'\r\n  },\r\n  defaultRoot: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    marginBottom: '20px'\r\n  },\r\n  noElevation: {\r\n    boxShadow: 'unset'\r\n  }\r\n}));\r\n\r\nfunction ScrollableTabsButtonForce(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={props.defaultMargin ? classes.defaultRoot : classes.root}>\r\n      <AppBar position=\"static\" color=\"default\" className={classes.noElevation}>\r\n        <Tabs\r\n          value={props.tabsInstance[props.name] || 0}\r\n          onChange={(event, value)=>props.setUniversalTabsNameIndex(props.name, value)}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          aria-label=\"scrollable force tabs\"\r\n        >\r\n          {props.tabs.map((tab, i) => {\r\n            return <Tab key={`tab-${i}`} label={tab.label} {...a11yProps(i)} />\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      {props.tabs.map((tab, i) => {\r\n        return <TabPanel key={`tabpanel-${i}`} value={props.tabsInstance[props.name] || 0} index={i}>\r\n          {tab.content}\r\n        </TabPanel>\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tabsInstance: state.UniversalTabsReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUniversalTabsNameIndex,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScrollableTabsButtonForce)","export const SET_ALL_DEVICES = 'SET_ALL_DEVICES';\r\nexport const REFRESH_DEVICE_PARAMS = 'REFRESH_DEVICE_PARAMS';\r\n\r\nexport const setAllDevices = (devices) => ({ type: SET_ALL_DEVICES, devices: devices })\r\nexport const refreshDeviceParams = (params) => ({ type: REFRESH_DEVICE_PARAMS, params: params })","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst isNotObject = (data) => typeof data !== 'object' || data === null;\r\nconst test = (data) => typeof data.value !== 'object' || data.value === null;\r\nconst isObject = (data) => typeof data === 'object' && data !== null;\r\n\r\n//for array of arrays\r\nconst notObject = (element) => element.every(test);\r\n\r\nfunction Row(props) {\r\n  // props.row === ['item1', 'item2', 'item3', ...]\r\n  const { t } = useTranslation();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [objects, setObjects] = React.useState(null)\r\n  const classes = useRowStyles();\r\n  const { row, columns } = props;\r\n\r\n  React.useEffect(() => {\r\n    let obj = []\r\n    row.map((cell, index) => {\r\n      return isObject(cell.value) ? obj.push({ cell: cell.value, index: index }) : null\r\n    })\r\n    setObjects(obj)\r\n  }, [row])\r\n\r\n  const createCollapsedTable = (entries) => {\r\n    let cols = []\r\n    let rows = []\r\n    for (const [col, properties] of entries) {\r\n      cols.push(col)\r\n      rows.push(JSON.stringify(properties))\r\n    }\r\n    return {\r\n      rows: rows,\r\n      columns: cols\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          {/* if expand needed - first cell for arrow */}\r\n          {objects !== null && objects.length > 0 ? <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton> : null}\r\n        </TableCell>\r\n        {/* {columns.map((column, index) => {\r\n          if(row.includes())\r\n          let i = row.findIndex(el=>el.belongsToColumn === column)\r\n          if(i>=0) {\r\n            return <TableCell>{cell.value}</TableCell>\r\n          }\r\n          \r\n        })} */}\r\n        {row.map((cell, index) => {\r\n          return <TableCell key={index}>{typeof cell.value === \"boolean\" ? cell.value.toString() : typeof cell.value === \"object\" ?\r\n            (<IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>) : cell.value}</TableCell>\r\n        })}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={row.length + 1}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              {objects !== null ? objects.map((obj, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\" style={{ marginTop: '20px' }}>\r\n                      {columns[obj.index]}\r\n                    </Typography>\r\n                    <Table size=\"small\" aria-label=\"purchases\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {createCollapsedTable(Object.entries(obj.cell)).columns.map((col, index) => {\r\n                            return <TableCell style={{ width: `${100 / Object.entries(obj.cell).length}%` }} key={index}>{col}</TableCell>\r\n                          })}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow>\r\n                          {createCollapsedTable(Object.entries(objects[index].cell)).rows.map((row) => {\r\n                            return <TableCell key={row}>{row}</TableCell>\r\n                          })}\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </React.Fragment>\r\n\r\n                )\r\n              }) : null}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction SimpleRow(props) {\r\n  const classes = useRowStyles();\r\n  return (\r\n    <TableRow className={classes.root}>\r\n      {props.row.map((cell, index) => <TableCell key={index}>{typeof cell.value === \"boolean\" ? cell.value.toString() : typeof cell.value === \"object\" ? JSON.stringify(cell.value) : cell.value}</TableCell>)}\r\n    </TableRow>\r\n  )\r\n}\r\n\r\n\r\nexport default function CollapsibleTable(props) {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* {props.rows.length>0 && !props.rows[0].every(isNotObject)?\r\n            <TableCell/>:null}\r\n            {props.columns.map((column, index) => {\r\n              return <TableCell key={index}>{column}</TableCell>\r\n            })} */}\r\n            {props.rows.length > 0 && props.rows.filter(notObject).length < props.rows.length ?\r\n              <TableCell /> : null}\r\n            {props.columns.map((column, index) => {\r\n              return <TableCell key={index}>{column}</TableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.rows.map((row, index) => {\r\n\r\n            return props.rows.filter(notObject).length < props.rows.length ?\r\n              <Row key={index} row={row} columns={props.columns} />\r\n              : <SimpleRow row={row} key={index} />\r\n          }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n","const API_URL = \"/api/device/\";\r\n\r\nclass DeviceService {\r\n  async getDevices() {\r\n    const response = await fetch(`${API_URL}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      }\r\n    })\r\n    if(response.status === 200) {\r\n      const deviceData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: deviceData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DeviceService();","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DevicesList from './DevicesList.component';\r\nimport DeviceSelectionTabs from './UniversalTabs.component';\r\nimport { connect } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { setAllDevices, refreshDeviceParams } from '../actions/DevicesSelectionPage.action';\r\nimport CollapsibleTable from './CollapsibleTable.component';\r\nimport DeviceService from '../services/device.service';\r\nimport ActivateService from '../services/activate.service';\r\nimport worker from 'workerize-loader!../workers/devices.worker'; //eslint-disable-line import/no-webpack-loader-syntax\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  onboarded: {\r\n    color: 'green'\r\n  },\r\n  offboarded: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nlet instance;\r\n\r\nfunction DevicesSelectionPage(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const { setAllDevices, allDevices, selectedDevice, authenticated, refreshDeviceParams } = props;\r\n\r\n  const reformatDeviceDataToReducer = (data) => {\r\n    let arr = []\r\n    for (const [key, value] of Object.entries(data)) {\r\n      arr.push({ [key]: value })\r\n    }\r\n    return arr\r\n  }\r\n\r\n  //initial fetch all devices\r\n  useEffect(() => {\r\n    DeviceService.getDevices().then(res => {\r\n      if (res.status === 200) {\r\n        setAllDevices(reformatDeviceDataToReducer(res.data))\r\n      }\r\n    })\r\n  }, [setAllDevices])\r\n\r\n  //setup web worker for fetching periodically\r\n  useEffect(() => {\r\n    const refreshDeviceData = (message) => {\r\n      const { data } = message;\r\n      if (data !== undefined && data.type !== 'RPC') {\r\n        refreshDeviceParams(data)\r\n      }\r\n    }\r\n\r\n    instance = worker()\r\n    instance.addEventListener(\"message\", message => refreshDeviceData(message));\r\n    return () => {\r\n      instance.postMessage({ token: null, text: 'stop' })\r\n      instance.removeEventListener(\"message\", message => refreshDeviceData(message))\r\n      instance.terminate()\r\n    }\r\n  }, [refreshDeviceParams])\r\n\r\n  //check if authenticated, if not - stop fetching\r\n  useEffect(() => {\r\n    if (instance !== null) {\r\n      if (authenticated === false) {\r\n        instance.postMessage({ token: null, text: 'stop' })\r\n      }\r\n      else {\r\n        instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start', device: selectedDevice.selectedDeviceID });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authenticated, selectedDevice])\r\n\r\n  const createTabs = (devices, selectedDevice) => {\r\n    let columns = []\r\n    let rows = []\r\n    let tabs = []\r\n    devices.map((device, index) => {\r\n      const entries = Object.entries(device)\r\n      for (const [, properties] of entries) {\r\n        if (properties.id === selectedDevice.selectedDeviceID) {\r\n          const propertiesEntries = Object.entries(properties)\r\n          for (const [column, cell] of propertiesEntries) {\r\n            if (typeof cell !== 'object' && cell !== null) {\r\n              //INFO tab\r\n              columns.push(t(`DevicesSelectionPage.Properties.${column}`))\r\n              //columns.push(column)\r\n              rows.push({\r\n                value: cell,\r\n                belongsToColumn: t(`DevicesSelectionPage.Tabs.info`)\r\n              })\r\n            }\r\n            else {\r\n              const tab = createTab(cell)\r\n              tabs.push({\r\n                label: t(`DevicesSelectionPage.Tabs.${column}`),\r\n                content: <CollapsibleTable columns={tab.columns} rows={tab.rows} />\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return null\r\n    })\r\n    tabs.push({\r\n      label: t(`DevicesSelectionPage.Tabs.info`),\r\n      content: <CollapsibleTable columns={columns} rows={[rows]} />\r\n    })\r\n\r\n    return <DeviceSelectionTabs\r\n      name={selectedDevice.selectedDeviceType}\r\n      tabs={tabs}\r\n    />\r\n  }\r\n\r\n  const createTab = (obj) => {\r\n    let columns = []\r\n    let rows = []\r\n    const entries = Object.entries(obj)\r\n    for (const [, properties] of entries) {\r\n      let row = []\r\n      const propertiesEntries = Object.entries(properties)\r\n      for (const [column, cell] of propertiesEntries) {\r\n        if (!columns.includes(t(`DevicesSelectionPage.Properties.${column}`))) {\r\n          columns.push(t(`DevicesSelectionPage.Properties.${column}`))\r\n        }\r\n        //if is numeric and with decimal place, set precision to 2\r\n        if (!isNaN(cell) && cell % 1 !== 0 && cell !== false && cell !== true) {\r\n          row.push({\r\n            value: parseFloat(cell).toFixed(2),\r\n            belongsToColumn: t(`DevicesSelectionPage.Properties.${column}`)\r\n          })\r\n        }\r\n        else {\r\n          if (column === 'lastValueTick') {\r\n            row.push({\r\n              value: formatDateTime(new Date(cell * 1000)),\r\n              belongsToColumn: t(`DevicesSelectionPage.Properties.${column}`)\r\n            })\r\n          }\r\n          else {\r\n            //console.log(columns.findIndex(el=>el===t(`DevicesSelectionPage.Properties.${column}`)))\r\n            //row[columns[t(`DevicesSelectionPage.Properties.${column}`)]] =cell\r\n\r\n            row.push({\r\n              value: cell,\r\n              belongsToColumn: t(`DevicesSelectionPage.Properties.${column}`)\r\n            })\r\n          }\r\n        }\r\n      }\r\n      rows.push(row)\r\n    }\r\n    return { rows, columns }\r\n  }\r\n\r\n  const formatDateTime = (date) => {\r\n    const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()\r\n    const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()\r\n    const seconds = date.getSeconds() < 10 ? `0${date.getSeconds()}` : date.getSeconds()\r\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}, ${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const isActive = () => {\r\n    if (selectedDevice.selectedDeviceID !== '' && allDevices[selectedDevice.selectedDeviceIndex] !== undefined) {\r\n      if (allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isConnected !== undefined) {\r\n        return allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isActive && allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isConnected\r\n      }\r\n      else {\r\n        return allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].isActive\r\n      }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const isBoarded = () => {\r\n    return selectedDevice.selectedDeviceType === 'MSAgentDevice' ? allDevices[selectedDevice.selectedDeviceIndex][selectedDevice.selectedDeviceID].boarded : null\r\n  }\r\n\r\n  const activateDevice = (activate, device) => {\r\n    ActivateService.activateDevice(activate, device).then(res => {\r\n      if (res.status === 200) {\r\n        refreshDeviceParams(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={3}>\r\n          <Typography variant=\"h4\" className={classes.title}>{t('DevicesSelectionPage.DevicesTitle')}</Typography>\r\n          <DevicesList />\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} md={9} spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" className={classes.title}>{selectedDevice.selectedDeviceID}</Typography>\r\n            <React.Fragment>\r\n              {createTabs(allDevices, selectedDevice)}\r\n            </React.Fragment>\r\n          </Grid>\r\n          <Grid container item xs={12} spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"h5\">{t('DevicesSelectionPage.Status')}: {isActive() ? t('DevicesSelectionPage.StatusConnected') : t('DevicesSelectionPage.StatusDisconnected')}</Typography>\r\n              {selectedDevice.selectedDeviceType === 'MSAgentDevice' ?\r\n                <Typography variant=\"h6\" className={isBoarded() ? classes.onboarded : classes.offboarded}>{isBoarded() ? t('DevicesSelectionPage.StatusOnboarded') : t('DevicesSelectionPage.StatusOffboarded')}</Typography>\r\n                : null}\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button\r\n                onClick={() => activateDevice(true, selectedDevice.selectedDeviceID)}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isActive() ? true : false}>\r\n                {t('DevicesSelectionPage.Connect')}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6} sm={3}>\r\n              <Button\r\n                onClick={() => activateDevice(false, selectedDevice.selectedDeviceID)}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={isActive() ? false : true}>\r\n                {t('DevicesSelectionPage.Disconnect')}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDevice: state.DevicesListReducer,\r\n    allDevices: state.DevicesSelectionPageReducer.devices,\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAllDevices,\r\n  refreshDeviceParams\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DevicesSelectionPage)","//activate/deactivate device\r\nconst API_URL = \"/api/activate/\";\r\n\r\nclass ActivateService {\r\n  async activateDevice(activate, device) {\r\n    const response = await fetch(`${API_URL}/${device}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ isActive: activate })\r\n    })\r\n    if(response.status === 200) {\r\n      const deviceData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: deviceData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ActivateService();","export const SET_ACCOUNT_FORM_CURRENT_PASSWORD = 'SET_ACCOUNT_FORM_CURRENT_PASSWORD';\r\nexport const SET_ACCOUNT_FORM_NEW_PASSWORD = 'SET_ACCOUNT_FORM_NEW_PASSWORD';\r\n\r\nexport const setAccountFormCurrentPassword = (password) => ({ type: SET_ACCOUNT_FORM_CURRENT_PASSWORD, password: password })\r\nexport const setAccountFormNewPassword = (password) => ({ type: SET_ACCOUNT_FORM_NEW_PASSWORD, password: password })","const API_URL = '/api/user';\r\n\r\nclass UserService {\r\n  async getMyAccountDetails() {\r\n    const response = await fetch(`${API_URL}/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: userData\r\n      }\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  async getAllAccounts() {\r\n    const response = await fetch(`${API_URL}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      return {\r\n        status: response.status,\r\n        data: userData\r\n      };\r\n    }\r\n    else {\r\n      return { status: response.status }\r\n    }\r\n  }\r\n\r\n  async deleteAccount(id) {\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async editAccount(id, name, permissions, newPassword = false) {\r\n    let body = {\r\n      name: name,\r\n      permissions: permissions\r\n    };\r\n    let bodyWithPasswords;\r\n    if (newPassword) {\r\n      bodyWithPasswords = {\r\n        ...body,\r\n        password: newPassword,\r\n      }\r\n    }\r\n    const response = await fetch(`${API_URL}/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify(newPassword ? bodyWithPasswords : body)\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async editMyPassword(name, permissions, oldPassword, newPassword) {\r\n    const response = await fetch(`${API_URL}/me`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ name: name, permissions: permissions, oldPassword: oldPassword, password: newPassword })\r\n    })\r\n    return { status: response.status }\r\n  }\r\n\r\n  async register(username, password, permissions) {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': JSON.parse(localStorage.getItem(\"user\")).accessToken\r\n      },\r\n      body: JSON.stringify({ name: username, permissions: permissions, password: password })\r\n    })\r\n    return { status: response.status }\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { connect } from 'react-redux';\r\nimport { setAccountFormCurrentPassword, setAccountFormNewPassword } from '../actions/AccountPage.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserService from '../services/user.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  },\r\n  loginButton: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nfunction AccountPage({ currentPassword, newPassword, setAccountFormCurrentPassword, setAccountFormNewPassword, setSnackbarText, setSnackbarShown }) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [accountDetails, setAccountDetails] = useState({})\r\n\r\n  const getMyAccountDetails = useCallback(() => {\r\n    UserService.getMyAccountDetails().then(res => {\r\n      if (res.status === 200) {\r\n        setAccountDetails(res.data)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setSnackbarShown, setSnackbarText, t])\r\n\r\n  useEffect(() => {\r\n    getMyAccountDetails()\r\n  }, [getMyAccountDetails])\r\n\r\n  const verify = (textfield) => {\r\n    const lengthErrorText = t('AccountPage.PasswordHelperError8characters');\r\n    const similarityErrorText = t('AccountPage.PasswordHelperErrorSamePasswords');\r\n    if (textfield === 'currentPassword') {\r\n      if (currentPassword.length > 0 && currentPassword.length < 8) {\r\n        return {\r\n          error: true,\r\n          text: lengthErrorText\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if (newPassword.length > 0 && newPassword.length < 8) {\r\n        return {\r\n          error: true,\r\n          text: lengthErrorText\r\n        }\r\n      }\r\n    }\r\n    if (newPassword.length > 0 && currentPassword.length > 0 && newPassword === currentPassword) {\r\n      return {\r\n        error: true,\r\n        text: similarityErrorText\r\n      }\r\n    }\r\n    return {\r\n      error: false,\r\n      text: ''\r\n    }\r\n  }\r\n\r\n  const changePassword = () => {\r\n    UserService.editMyPassword(accountDetails.name, accountDetails.permissions, currentPassword, newPassword).then(res => {\r\n      if (res.status === 200) {\r\n        //reset fields after submit\r\n        setAccountFormCurrentPassword('')\r\n        setAccountFormNewPassword('')\r\n        setSnackbarText(t('Snackbar.SuccessfulPasswordChange'), 'success')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnsuccessfulPasswordChange'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        alignContent=\"center\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('AccountPage.Title')}</Typography>\r\n        </Grid>\r\n        <Grid container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          item xs={12}>\r\n          <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n            {accountDetails.permissions >= 1 ? <Chip avatar={<Avatar>U</Avatar>} label=\"User\" /> : null}\r\n            {accountDetails.permissions >= 3 ? <Chip color=\"primary\" avatar={<Avatar>A</Avatar>} label=\"Admin\" /> : null}\r\n            {accountDetails.permissions === 7 ? <Chip color=\"secondary\" avatar={<Avatar>S</Avatar>} label=\"SuperAdmin\" /> : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          item xs={12}>\r\n          <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n              {accountDetails._id ? <TextField fullWidth disabled label=\"ID\" defaultValue={accountDetails._id} /> : null}\r\n              {accountDetails.name ? <TextField fullWidth disabled label={t('AccountPage.NameTextField')} autoComplete=\"username\" defaultValue={accountDetails.name} /> : null}\r\n              <TextField\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={currentPassword}\r\n                onChange={(e) => setAccountFormCurrentPassword(e.target.value)}\r\n                fullWidth\r\n                label={t('AccountPage.CurrentPasswordTextField')}\r\n                helperText={verify('currentPassword').text}\r\n                error={verify('currentPassword').error} />\r\n              <TextField\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={newPassword}\r\n                onChange={(e) => setAccountFormNewPassword(e.target.value)}\r\n                fullWidth\r\n                label={t('AccountPage.NewPasswordTextField')}\r\n                helperText={verify('newPassword').text}\r\n                error={verify('newPassword').error} />\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Button onClick={() => changePassword()}\r\n            className={classes.loginButton} fullWidth color=\"secondary\" variant=\"contained\" disabled={currentPassword.length === 0 || newPassword.length === 0 || verify('newPassword').error || verify('currentPassword').error}>{t('AccountPage.ChangePasswordButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentPassword: state.AccountPageReducer.currentPassword,\r\n    newPassword: state.AccountPageReducer.newPassword\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAccountFormCurrentPassword,\r\n  setAccountFormNewPassword,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountPage);","//props = rows: array, columns: array, noPagination: bool\r\n\r\nimport React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    //minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable({ rows, columns, noPagination }) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows.length < 5 ? rows.length : 5);\r\n  const { t } = useTranslation()\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (rows.length < 5) {\r\n      setRowsPerPage(rows.length)\r\n    }\r\n    else {\r\n      setRowsPerPage(5)\r\n    }\r\n  }, [rows])\r\n\r\n  return (\r\n    <TableContainer component={Paper} >\r\n      <Table className={classes.table} aria-label=\"params table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, colIndex) => {\r\n              return <TableCell key={`column-${colIndex}`}>{column}</TableCell>\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {!noPagination?\r\n          (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row, rowIndex) => (\r\n            <TableRow key={`row-${rowIndex}`}>\r\n              {row.map((cell, cellIndex) => {\r\n                return <TableCell key={`cell-${cellIndex}`}>\r\n                  {typeof cell === \"boolean\"? cell.toString() : typeof cell === \"object\"? JSON.stringify(cell) : cell}\r\n                </TableCell>\r\n              })}\r\n            </TableRow>\r\n          )):\r\n          rows.map((row, rowIndex) => (\r\n            <TableRow key={`row-${rowIndex}`}>\r\n              {row.map((cell, cellIndex) => {\r\n                return <TableCell key={`cell-${cellIndex}`}>\r\n                  {typeof cell === \"boolean\"? cell.toString() : cell}\r\n                </TableCell>\r\n              })}\r\n            </TableRow>\r\n          ))\r\n          }\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        {!noPagination ?\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('UniversalTable.Of')} ${count}`}\r\n                labelRowsPerPage={t('UniversalTable.RowsPerPage')}\r\n                rowsPerPageOptions={[rows.length < 5 ? rows.length : 5, 10, 25]}\r\n                colSpan={columns.length}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n      :null}\r\n\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","export const SET_USER_ACCOUNTS_LIST = 'SET_USER_ACCOUNTS_LIST';\r\n\r\nexport const setUserAccountsList = (list) => ({ type: SET_USER_ACCOUNTS_LIST, list: list})","export const SET_CREATE_ACCOUNT_DIALOG_OPEN = 'SET_CREATE_ACCOUNT_DIALOG_OPEN';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR = 'SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT = 'SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD = 'SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD';\r\nexport const SET_CREATE_ACCOUNT_DIALOG_EDIT_ID = 'SET_CREATE_ACCOUNT_DIALOG_EDIT_ID';\r\n\r\nexport const setCreateAccountDialogOpen = (open, dialogType) => ({ type: SET_CREATE_ACCOUNT_DIALOG_OPEN, open: open, dialogType: dialogType }) //dialogType === create or edit\r\nexport const setCreateAccountDialogNameTextfield = (name) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD, name: name })\r\nexport const setCreateAccountDialogPasswordTextfield = (password) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD, password: password })\r\nexport const setCreateAccountDialogPermissionsSelect = (permissions) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT, permissions: permissions })\r\nexport const setCreateAccountDialogNameTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR, error: error })\r\nexport const setCreateAccountDialogPasswordTextfieldError = (error) => ({ type: SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR, error: error })\r\nexport const setCreateAccountDialogNewpasswordTextfield = (newpassword) => ({ type: SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD, newpassword: newpassword })\r\nexport const setCreateAccountDialogEditId = (id) => ({ type: SET_CREATE_ACCOUNT_DIALOG_EDIT_ID, id: id })","export const SET_CONFIRM_DELETE_USER_DIALOG_OPEN = 'SET_CONFIRM_DELETE_USER_DIALOG_OPEN';\r\nexport const SET_CONFIRM_DELETE_USER_DIALOG_USERNAME = 'SET_CONFIRM_DELETE_USER_DIALOG_USERNAME';\r\n\r\nexport const setConfirmDeleteUserDialogOpen = (open) => ({ type: SET_CONFIRM_DELETE_USER_DIALOG_OPEN, open: open })\r\nexport const setConfirmDeleteUserDialogUsername = (username, id) => ({type: SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, username: username, id: id })","const API_URL = \"/api/auth/\";\r\n\r\nclass AuthService {\r\n  async login(username, password) {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name: username, password: password })\r\n    })\r\n\r\n    if (response.status === 200) {\r\n      const userData = await response.json()\r\n      if (response.headers.get('x-auth-token')) {\r\n        localStorage.setItem(\"user\", JSON.stringify({ ...userData, accessToken: response.headers.get('x-auth-token') }))\r\n      }\r\n      return userData;\r\n    }\r\n    throw new Error(response.status)\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useEffect, useCallback } from 'react';\r\nimport UniversalTable from './UniversalTable.component';\r\nimport { connect } from 'react-redux';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport UserService from '../services/user.service';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { setCreateAccountDialogOpen, setCreateAccountDialogEditId, setCreateAccountDialogNameTextfield, setCreateAccountDialogPermissionsSelect } from '../actions/CreateAccountDialog.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\r\nimport AuthService from '../services/auth.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icons: {\r\n    padding: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction UserAccountsPage({ setUserAccountsList,\r\n  setCreateAccountDialogOpen,\r\n  accountsList,\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setCreateAccountDialogEditId,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfield,\r\n  setSnackbarText,\r\n  setSnackbarShown }) {\r\n\r\n  const { t } = useTranslation();\r\n  const classes = useStyles();\r\n\r\n  const getAllAccounts = useCallback(() => {\r\n    UserService.getAllAccounts().then(res => {\r\n      if (res.status === 200) {\r\n        setUserAccountsList(res.data)\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }, [setUserAccountsList, setSnackbarShown, setSnackbarText, t])\r\n\r\n  useEffect(() => {\r\n    getAllAccounts()\r\n  }, [getAllAccounts])\r\n\r\n  const deleteAcc = (id, username) => {\r\n    setConfirmDeleteUserDialogUsername(username, id)\r\n    setConfirmDeleteUserDialogOpen(true)\r\n  }\r\n\r\n  const editAcc = (id, name, permissions) => {\r\n    setCreateAccountDialogEditId(id)\r\n    setCreateAccountDialogNameTextfield(name)\r\n    setCreateAccountDialogPermissionsSelect(permissions)\r\n    setCreateAccountDialogOpen(true, 'edit')\r\n  }\r\n\r\n  const checkPermissions = (permissions) => {\r\n    const currentUser = AuthService.getCurrentUser().permissions;\r\n    if (currentUser === 7) {\r\n      return true;\r\n    }\r\n    if ((permissions === 3 || permissions === 7) && currentUser === 3) {\r\n      return false\r\n    }\r\n    if (permissions === 1 && currentUser >= 3) {\r\n      return true\r\n    }\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">{t('AccountMenu.UserAccounts')}</Typography>\r\n        </Grid>\r\n        {accountsList.length > 0 ?\r\n          <Grid item xs={12}>\r\n            <UniversalTable noPagination\r\n              columns={[t('UserAccountsPage.IdColumn'), t('UserAccountsPage.NameColumn'), t('UserAccountsPage.PermissionsColumn'), t('UserAccountsPage.ActionColumn')]}\r\n              rows={accountsList.map(acc => [acc._id, acc.name, acc.permissions === 1 ? 'User' : acc.permissions === 3 ? 'Admin' : 'SuperAdmin', checkPermissions(acc.permissions) ?\r\n                <div>\r\n                  <Tooltip title={t('UserAccountsPage.TooltipEdit')} placement=\"top\">\r\n                    <IconButton onClick={() => editAcc(acc._id, acc.name, acc.permissions)} className={classes.icons} aria-label=\"edit\">\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title={t('UserAccountsPage.TooltipDelete')} placement=\"top\">\r\n                    <IconButton onClick={() => deleteAcc(acc._id, acc.name)} className={classes.icons} aria-label=\"delete\">\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n                :\r\n                null])}\r\n            />\r\n          </Grid> : null\r\n        }\r\n        <Grid item xs={6} sm={4} md={3} lg={2}>\r\n          <Button\r\n            onClick={() => setCreateAccountDialogOpen(true, 'create')}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            {t('UserAccountsPage.CreateUser')}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    accountsList: state.UserAccountsPageReducer.accountsList,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setUserAccountsList,\r\n  setCreateAccountDialogOpen,\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setCreateAccountDialogEditId,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccountsPage);","import AuthService from \"../services/auth.service\";\r\n\r\nexport const isAuthenticated = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  if (user === null || user._id === undefined || user.name === undefined || user.permissions === undefined || user.accessToken === undefined) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const isAdmin = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  if(user!==null && user.permissions>=3) {\r\n    return true\r\n  }\r\n  return false\r\n}","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\n\r\nexport const setAuthenticated = (authed) => ({ type: SET_AUTHENTICATED, authenticated: authed})","import { isAdmin } from '../services/isAuthenticated.service';\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction AdminRoute({ children, authenticated, setAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAdmin() ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAuthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminRoute);","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Settings from '../components/Settings.component';\r\nimport DevicesSelectionPage from '../components/DevicesSelectionPage.component';\r\nimport AccountPage from '../components/AccountPage.component';\r\nimport UserAccountsPage from '../components/UserAccountsPage.component';\r\nimport AdminRoute from '../routes/ProtectedAdmin.routes';\r\n\r\nexport default function DrawerRoutes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/settings\" render={()=><Settings/>} />\r\n      <Route path=\"/myaccount\" render={()=><AccountPage/>} />\r\n      <AdminRoute path=\"/useraccounts\"><UserAccountsPage/></AdminRoute>\r\n      <Route path=\"/\" render={()=><DevicesSelectionPage/>} />\r\n    </Switch>\r\n  )\r\n}\r\n","export const SET_LANGUAGE_DIALOG_OPEN = 'SET_LANGUAGE_DIALOG_OPEN';\r\n\r\nexport const setLanguageDialogOpen = (open) => ({ type: SET_LANGUAGE_DIALOG_OPEN, open: open })","export const SET_FORM_USERNAME = 'SET_FORM_USERNAME';\r\nexport const SET_FORM_PASSWORD = 'SET_FORM_PASSWORD';\r\nexport const SET_FORM_USERNAME_ERROR = 'SET_FORM_USERNAME_ERROR';\r\nexport const SET_FORM_PASSWORD_ERROR = 'SET_FORM_PASSWORD_ERROR';\r\n\r\nexport const setFormUsername = (username) => ({ type: SET_FORM_USERNAME, username: username })\r\nexport const setFormPassword = (password) => ({ type: SET_FORM_PASSWORD, password: password })\r\nexport const setFormUsernameError = (error) => ({ type: SET_FORM_USERNAME_ERROR, error: error })\r\nexport const setFormPasswordError = (error) => ({ type: SET_FORM_PASSWORD_ERROR, error: error })","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { setFormUsername, setFormPassword } from '../actions/LoginPage.action';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setFormUsernameError, setFormPasswordError } from '../actions/LoginPage.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  contentDesktop: {\r\n    //flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    height: '100vh',\r\n    width: '100%'\r\n  },\r\n  contentMobile: {\r\n    padding: theme.spacing(1),\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  loginButton: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nfunction LoginPage(props) {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation()\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: landscape)`)\r\n  let history = useHistory();\r\n\r\n  const tryLogin = () => {\r\n    AuthService.login(props.login, props.password).then(() => {\r\n      history.push(\"/\");\r\n    }).catch(() => {\r\n      props.setFormUsernameError(true)\r\n      props.setFormPasswordError(true)\r\n    })\r\n  }\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter' && props.login.length >= 3 && props.password.length >= 8) {\r\n      tryLogin()\r\n    }\r\n  }\r\n\r\n  const buttonLogin = () => {\r\n    tryLogin()\r\n  }\r\n\r\n  const controlFormFields = (field, value) => {\r\n    props.setFormUsernameError(false)\r\n    props.setFormPasswordError(false)\r\n    if (field === 'username') {\r\n      props.setFormUsername(value)\r\n    }\r\n    else {\r\n      props.setFormPassword(value)\r\n    }\r\n  }\r\n\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Zoom\r\n        in={true}\r\n        timeout={transitionDuration}\r\n        style={{\r\n          transitionDelay: `500ms`,\r\n        }}\r\n        unmountOnExit\r\n      >\r\n        <Fab aria-label=\"choose langauge\" className={classes.fab} color=\"primary\" onClick={() => props.setLanguageDialogOpen(true)}>\r\n          <LanguageIcon />\r\n        </Fab>\r\n      </Zoom>\r\n\r\n      <Grid className={matches ? classes.contentMobile : classes.contentDesktop}\r\n        container\r\n        spacing={0}\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        alignContent=\"center\">\r\n        <Grid item xs={12} >\r\n          <Typography align=\"center\" variant=\"h2\" gutterBottom>Sidiro IoT</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} >\r\n          <Typography align=\"center\" variant=\"h4\" gutterBottom>{t('LoginPage.LoginTitle')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={6} lg={4} xl={3}>\r\n          <form noValidate autoComplete=\"off\" className={classes.form}>\r\n            <TextField\r\n              error={props.loginError}\r\n              value={props.login}\r\n              onChange={(e) => controlFormFields('username', e.target.value)}\r\n              id=\"login\" label={t('LoginPage.FormLoginTextField')} fullWidth variant=\"standard\" autoComplete=\"username\" onKeyDown={handleKeyDown} helperText={props.loginError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormLoginTextFieldHelperText')} />\r\n            <TextField\r\n              error={props.passwordError}\r\n              value={props.password}\r\n              onChange={(e) => controlFormFields('password', e.target.value)}\r\n              id=\"password\" type=\"password\" label={t('LoginPage.FormPasswordTextField')} fullWidth variant=\"standard\" autoComplete=\"password\" onKeyDown={handleKeyDown} helperText={props.loginError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormPasswordTextFieldHelperText')} />\r\n          </form>\r\n          <Button onClick={() => buttonLogin()} className={classes.loginButton} color=\"secondary\" variant=\"contained\" fullWidth disabled={props.login.length < 3 || props.password.length < 8}>{t('LoginPage.LoginButton')}</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.LoginPageReducer.username,\r\n    loginError: state.LoginPageReducer.usernameError,\r\n    password: state.LoginPageReducer.password,\r\n    passwordError: state.LoginPageReducer.passwordError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n  setFormPassword,\r\n  setFormUsername,\r\n  setFormUsernameError,\r\n  setFormPasswordError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","export const SET_HARDWARE_USAGE = 'SET_HARDWARE_USAGE';\r\n\r\nexport const setHardwareUsage = (cpuUsage, cpuTemperature, ramUsage, diskUsage) => ({ type: SET_HARDWARE_USAGE, cpuUsage: cpuUsage, cpuTemperature: cpuTemperature, ramUsage: ramUsage, diskUsage: diskUsage })","import { isAuthenticated } from '../services/isAuthenticated.service';\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction PrivateRoute({ children, authenticated, setAuthenticated, ...rest }) {\r\n  React.useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      setAuthenticated(true)\r\n    }\r\n  }, [authenticated, setAuthenticated])\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated() ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setAuthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularProgressWithLabel(props) {\r\n  const percentColors = [\r\n    { pct: 0.0, color: { r: 0x00, g: 0xff, b: 0 } },\r\n    { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0 } },\r\n    { pct: 1.0, color: { r: 0xff, g: 0x00, b: 0 } }];\r\n\r\n  const getColorForPercentage = (pct) => {\r\n    for (var i = 1; i < percentColors.length - 1; i++) {\r\n      if (pct < percentColors[i].pct) {\r\n        break;\r\n      }\r\n    }\r\n    var lower = percentColors[i - 1];\r\n    var upper = percentColors[i];\r\n    var range = upper.pct - lower.pct;\r\n    var rangePct = (pct - lower.pct) / range;\r\n    var pctLower = 1 - rangePct;\r\n    var pctUpper = rangePct;\r\n    var color = {\r\n      r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\r\n      g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\r\n      b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\r\n    };\r\n    return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\r\n    // or output as hex if preferred\r\n  };\r\n\r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   usageGaugesGroup: {\r\n  //     marginRight: '20px',\r\n  //     marginLeft: '5px'\r\n  //   },\r\n  //   usageColor: {\r\n  //     position: 'absolute',\r\n  //     left: 0,\r\n  //     animationDuration: '1500ms',\r\n  //   },\r\n  //   bottom: {\r\n  //     color: '#eeeeee1c',\r\n  //   },\r\n  // }));\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-flex', marginRight: '20px', marginLeft: '5px' }}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        style={{color:'#eeeeee1c'}}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress \r\n      variant=\"static\" {...props} \r\n      style={{position: 'absolute', animationDuration: '1500ms', color: getColorForPercentage(props.value / 100)}} />\r\n      <div style={{position: 'absolute', display: 'flex', top: '0px', left: '0px', bottom: '0px', right: '0px', alignItems:\"center\", justifyContent:\"center\"}}>\r\n      \r\n        <Typography variant=\"caption\" component=\"div\" color=\"initial\">{`${Math.round(props.value,)}${props.unit}`}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport ViewArrayIcon from \"@material-ui/icons/ViewArray\";\r\nimport { Link, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport DeviceHubIcon from \"@material-ui/icons/DeviceHub\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport DrawerRoutes from '../routes/DrawerRoutes.routes';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrochip, faMemory, faThermometerHalf, faHdd } from '@fortawesome/free-solid-svg-icons'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LoginPage from './LoginPage.component';\r\nimport { setHardwareUsage } from '../actions/HardwareUsage.action';\r\nimport worker from 'workerize-loader!../workers/hwinfo.worker'; //eslint-disable-line import/no-webpack-loader-syntax\r\nimport PrivateRoute from '../routes/protected.routes';\r\nimport AuthService from \"../services/auth.service\";\r\nimport { setAuthenticated } from '../actions/Authentication.action';\r\nimport { setCreateAccountDialogOpen } from '../actions/CreateAccountDialog.action';\r\nimport { isAdmin } from '../services/isAuthenticated.service';\r\nimport CircularProgressWithLabel from './CircularProgress.component';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      display: 'none'\r\n    },\r\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n      display: 'flex'\r\n    },\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100% - 57px)`,\r\n    padding: theme.spacing(1),\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      paddingBottom: theme.spacing(10),\r\n      paddingTop: theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    },\r\n  },\r\n  bottomNavi: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n    [`${theme.breakpoints.down('sm')} and (orientation: portrait)`]: {\r\n      display: 'flex'\r\n    },\r\n    [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n      display: 'none'\r\n    },\r\n    [`${theme.breakpoints.up('md')}`]: {\r\n      display: 'none'\r\n    },\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hardwareUsage: {\r\n    width: '50px',\r\n    height: '40px',\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    //height: '40px',\r\n    flexGrow: 1\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  loginButton: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    }\r\n  }\r\n}));\r\n\r\nlet instance;\r\n\r\nfunction MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { t } = useTranslation();\r\n  const matches = useMediaQuery(`${theme.breakpoints.down('sm')} and (orientation: portrait)`)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [bottomNaviValue, setBottomNaviValue] = React.useState(0);\r\n  const { setHardwareUsage, authenticated, setAuthenticated } = props;\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  useEffect(() => {\r\n    instance = worker()\r\n    instance.addEventListener(\"message\", message => {\r\n      const { data } = message;\r\n      if (data.cpuUsage !== undefined) {\r\n        setHardwareUsage(message.data.cpuUsage, message.data.cpuTemperature, message.data.ramUsage, message.data.diskUsage)\r\n      }\r\n    });\r\n  }, [setHardwareUsage])\r\n\r\n  useEffect(() => {\r\n    setBottomNaviValue(location.pathname)\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (authenticated === false) {\r\n      instance.postMessage({ token: null, text: 'stop' })\r\n    }\r\n    else {\r\n      instance.postMessage({ token: JSON.parse(localStorage.getItem(\"user\")).accessToken, text: 'start' });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [authenticated])\r\n\r\n  const signout = () => {\r\n    setAuthenticated(false)\r\n    AuthService.logout()\r\n    handleMenuClose()\r\n    history.push('/login')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (matches) {\r\n      //small viewport\r\n      setOpen(false)\r\n      setAnchorEl(null)\r\n    }\r\n  }, [matches])\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    handleMobileMenuClose();\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem component={Link}\r\n        to=\"/myaccount\"\r\n        onClick={handleMenuClose}>{t('AccountMenu.MyAccount')}</MenuItem>\r\n      <MenuItem onClick={() => signout()}>{t('AccountMenu.Logout')}</MenuItem>\r\n      {isAdmin() ?\r\n        <div>\r\n          <Divider />\r\n          <MenuItem component={Link}\r\n            onClick={handleMenuClose}\r\n            to=\"/useraccounts\">{t('AccountMenu.UserAccounts')}</MenuItem>\r\n        </div>\r\n        : null\r\n      }\r\n    </Menu >\r\n  );\r\n\r\n  const toFixed = (num) => {\r\n    if (num !== null) {\r\n      return num.toFixed()\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.cpuUsage)}%`} color=\"primary\" >\r\n          <IconButton aria-label=\"cpu usage\" color=\"inherit\" className={classes.hardwareUsage} >\r\n            <FontAwesomeIcon icon={faMicrochip} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>CPU</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.cpuTemperature)}°C`} color=\"primary\">\r\n          <IconButton aria-label=\"cpu temperature\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faThermometerHalf} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>TEMP</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.ramUsage)}%`} color=\"primary\" >\r\n          <IconButton aria-label=\"memory usage\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faMemory} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>MEM</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <Badge badgeContent={`${toFixed(props.hardwareUsage.diskUsage)}%`} color=\"primary\">\r\n          <IconButton aria-label=\"space usage\" color=\"inherit\" className={classes.hardwareUsage}>\r\n            <FontAwesomeIcon icon={faHdd} />\r\n          </IconButton>\r\n        </Badge>\r\n        <p>DISK</p>\r\n      </MenuItem>\r\n      <Divider />\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>{t('AccountMenu.Profile')}</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Switch>\r\n        <Route path=\"/login\" render={() => <LoginPage />} />\r\n        <PrivateRoute path=\"/\">\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n              })}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, {\r\n                    [classes.hide]: open,\r\n                    [classes.hide]: matches\r\n                  })}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                  Sidiro IoT\r\n                </Typography>\r\n                <div className={classes.sectionDesktop}>\r\n                  <Typography variant=\"body1\">CPU</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuUsage} unit=\"%\" />\r\n                  <Typography variant=\"body1\">TEMP</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.cpuTemperature} unit=\"°C\" />\r\n                  <Typography variant=\"body1\">MEM</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.ramUsage} unit=\"%\" />\r\n                  <Typography variant=\"body1\">DISK</Typography>\r\n                  <CircularProgressWithLabel value={props.hardwareUsage.diskUsage} unit=\"%\" />\r\n                </div>\r\n                <IconButton\r\n                  className={classes.loginButton}\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <div className={classes.sectionMobile}>\r\n                  <IconButton\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                  >\r\n                    <MoreIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            <Drawer\r\n              variant=\"permanent\"\r\n              className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n              })}\r\n              classes={{\r\n                paper: clsx({\r\n                  [classes.drawerOpen]: open,\r\n                  [classes.drawerClose]: !open,\r\n                }),\r\n              }}\r\n            >\r\n              <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n              </div>\r\n              <Divider />\r\n              <List>\r\n                <ListItem button component={Link} to=\"/\" selected={location.pathname === \"/\" ? true : false} >\r\n                  <ListItemIcon>\r\n                    <DeviceHubIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Devices')} />\r\n                </ListItem>\r\n                <ListItem button component={Link} to=\"/settings\" selected={location.pathname === \"/settings\" ? true : false} >\r\n                  <ListItemIcon>\r\n                    <SettingsIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Settings')} />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem button onClick={() => props.setLanguageDialogOpen(true)}>\r\n                  <ListItemIcon>\r\n                    <LanguageIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={t('Drawer.Language')} />\r\n                </ListItem>\r\n              </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n              <div className={classes.toolbar} />\r\n              <DrawerRoutes />\r\n            </main>\r\n            <BottomNavigation\r\n              showLabels={false}\r\n              className={classes.bottomNavi}\r\n              value={bottomNaviValue}\r\n            >\r\n              <BottomNavigationAction value=\"/\" label={t('Drawer.Devices')} icon={<DeviceHubIcon />} component={Link} to=\"/\" />\r\n              <BottomNavigationAction value=\"/settings\" label={t('Drawer.Settings')} icon={<ViewArrayIcon />} component={Link} to=\"/settings\" />\r\n              <BottomNavigationAction label={t('Drawer.Language')} icon={<LanguageIcon />} onClick={() => props.setLanguageDialogOpen(true)} />\r\n            </BottomNavigation>\r\n          </React.Fragment>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hardwareUsage: state.HardwareUsageReducer,\r\n    authenticated: state.AuthenticationReducer.authed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n  setHardwareUsage,\r\n  setAuthenticated,\r\n  setCreateAccountDialogOpen\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniDrawer);","import { SET_LANGUAGE_DIALOG_OPEN } from '../actions/LanguageDialog.action';\r\n\r\nconst initialState = {\r\n    open: false,\r\n}\r\n\r\nexport const LanguageDialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LANGUAGE_DIALOG_OPEN:\r\n            return {\r\n                ...state,\r\n                open: action.open\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_UNIVERSAL_TABS_NAME_INDEX } from '../actions/UniversalTabs.action';\r\n\r\nconst initialState = {\r\n    //tabs instances added dynamically\r\n}\r\n\r\nexport const UniversalTabsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_UNIVERSAL_TABS_NAME_INDEX:\r\n            return {\r\n                ...state,\r\n                [action.name]: action.index\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SELECT_DEVICE } from '../actions/DevicesList.action';\r\n\r\nconst initialState = {\r\n    selectedDeviceIndex: 0,\r\n    selectedDeviceID: '',\r\n    selectedDeviceType: '',\r\n    \r\n}\r\n\r\nexport const DevicesListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_DEVICE:\r\n            return {\r\n                ...state,\r\n                selectedDeviceIndex: action.deviceIndex,\r\n                selectedDeviceID: action.deviceID,\r\n                selectedDeviceType: action.deviceType\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { SET_FORM_USERNAME, SET_FORM_PASSWORD, SET_FORM_USERNAME_ERROR, SET_FORM_PASSWORD_ERROR } from '../actions/LoginPage.action';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  usernameError: false,\r\n  password: '',\r\n  passwordError: false\r\n}\r\n\r\nexport const LoginPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FORM_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n      }\r\n    case SET_FORM_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case SET_FORM_USERNAME_ERROR:\r\n      return {\r\n        ...state,\r\n        usernameError: action.error\r\n      }\r\n    case SET_FORM_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        passwordError: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_ACCOUNT_FORM_CURRENT_PASSWORD, SET_ACCOUNT_FORM_NEW_PASSWORD } from '../actions/AccountPage.action';\r\n\r\nconst initialState = {\r\n  currentPassword: '',\r\n  newPassword: ''\r\n\r\n}\r\n\r\nexport const AccountPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ACCOUNT_FORM_CURRENT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        currentPassword: action.password,\r\n      }\r\n    case SET_ACCOUNT_FORM_NEW_PASSWORD:\r\n      return {\r\n        ...state,\r\n        newPassword: action.password\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_HARDWARE_USAGE } from '../actions/HardwareUsage.action';\r\n\r\nconst initialState = {\r\n  cpuUsage: 0,\r\n  cpuTemperature: 0,\r\n  ramUsage: 0,\r\n  diskUsage: 0\r\n}\r\n\r\nexport const HardwareUsageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_HARDWARE_USAGE:\r\n      return {\r\n        ...state,\r\n        cpuUsage: action.cpuUsage,\r\n        cpuTemperature: action.cpuTemperature,\r\n        ramUsage: action.ramUsage,\r\n        diskUsage: action.diskUsage\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_AUTHENTICATED } from '../actions/Authentication.action';\r\n\r\nconst initialState = {\r\n  authed: false,\r\n}\r\n\r\nexport const AuthenticationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authed: action.authenticated,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  SET_CREATE_ACCOUNT_DIALOG_OPEN,\r\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT,\r\n  SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR,\r\n  SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR,\r\n  SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD,\r\n  SET_CREATE_ACCOUNT_DIALOG_EDIT_ID\r\n} from '../actions/CreateAccountDialog.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  type: 'create',\r\n  //form values\r\n  name: '',\r\n  nameError: false,\r\n  password: '',\r\n  passwordError: false,\r\n  newPassword: '',\r\n  editAccountId: '',\r\n  permissions: 1\r\n}\r\n\r\nexport const CreateAccountDialog = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CREATE_ACCOUNT_DIALOG_OPEN:\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n        type: action.dialogType ? action.dialogType : state.type\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PERMISSIONS_SELECT:\r\n      return {\r\n        ...state,\r\n        permissions: action.permissions\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NAME_TEXTFIELD_ERROR:\r\n      return {\r\n        ...state,\r\n        nameError: action.error\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_PASSWORD_TEXTFIELD_ERROR:\r\n      return {\r\n        ...state,\r\n        passwordError: action.error\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_NEWPASSWORD_TEXTFIELD:\r\n      return {\r\n        ...state,\r\n        newPassword: action.newpassword\r\n      }\r\n    case SET_CREATE_ACCOUNT_DIALOG_EDIT_ID:\r\n      return {\r\n        ...state,\r\n        editAccountId: action.id\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_USER_ACCOUNTS_LIST } from '../actions/UserAccountsPage.action';\r\n\r\nconst initialState = {\r\n  accountsList: []\r\n}\r\n\r\nexport const UserAccountsPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_ACCOUNTS_LIST:\r\n      return {\r\n        ...state,\r\n        accountsList: action.list,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_SNACKBAR_TEXT, SET_SNACKBAR_SHOWN } from '../actions/Snackbar.action';\r\n\r\nconst initialState = {\r\n  text: '',\r\n  severity: '',\r\n  shown: false\r\n}\r\n\r\nexport const SnackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR_TEXT:\r\n      return {\r\n        ...state,\r\n        text: action.text,\r\n        severity: action.severity\r\n      }\r\n    case SET_SNACKBAR_SHOWN:\r\n      return {\r\n        ...state,\r\n        shown: action.shown\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CONFIRM_DELETE_USER_DIALOG_USERNAME, SET_CONFIRM_DELETE_USER_DIALOG_OPEN } from '../actions/ConfirmDeleteUserDialog.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  username: '',\r\n  id: ''\r\n}\r\n\r\nexport const ConfirmDeleteUserDialogReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CONFIRM_DELETE_USER_DIALOG_OPEN:\r\n      return {\r\n        ...state,\r\n        open: action.open,\r\n      }\r\n    case SET_CONFIRM_DELETE_USER_DIALOG_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        id: action.id\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_ALL_DEVICES, REFRESH_DEVICE_PARAMS } from '../actions/DevicesSelectionPage.action';\r\n\r\nconst initialState = {\r\n  devices: []\r\n}\r\n\r\nexport const DevicesSelectionPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ALL_DEVICES:\r\n      return {\r\n        ...state,\r\n        devices: action.devices\r\n      }\r\n    case REFRESH_DEVICE_PARAMS:\r\n      return {\r\n        ...state,\r\n        devices: state.devices.map(dev => {\r\n          if (action.params.id === Object.entries(dev)[0][0]) {\r\n            return { [action.params.id]: action.params }\r\n          }\r\n          else {\r\n            return dev\r\n          }\r\n        })\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { LanguageDialogReducer } from './LanguageDialog.reducer';\r\nimport { UniversalTabsReducer } from './UniversalTabs.reducer';\r\nimport { DevicesListReducer } from './DevicesList.reducer';\r\nimport { LoginPageReducer } from './LoginPage.reducer';\r\nimport { AccountPageReducer } from './AccountPage.reducer';\r\nimport { HardwareUsageReducer } from './HardwareUsage.reducer';\r\nimport { AuthenticationReducer } from './Authentication.reducer';\r\nimport { CreateAccountDialog } from './CreateAccountDialog.reducer';\r\nimport { UserAccountsPageReducer } from './UserAccountsPage.reducer';\r\nimport { SnackbarReducer } from './Snackbar.reducer';\r\nimport { ConfirmDeleteUserDialogReducer } from './ConfirmDeleteUserDialog.reducer';\r\nimport { DevicesSelectionPageReducer } from './DevicesSelectionPage.reducer';\r\n\r\nexport default combineReducers({\r\n  LanguageDialogReducer,\r\n  UniversalTabsReducer,\r\n  DevicesListReducer,\r\n  LoginPageReducer,\r\n  AccountPageReducer,\r\n  HardwareUsageReducer,\r\n  AuthenticationReducer,\r\n  CreateAccountDialog,\r\n  UserAccountsPageReducer,\r\n  SnackbarReducer,\r\n  ConfirmDeleteUserDialogReducer,\r\n  DevicesSelectionPageReducer\r\n})","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { resources } from './translations';\r\n  \r\nconst options = {\r\n    // order and from where user language should be detected\r\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\r\n  \r\n    // keys or params to lookup language from\r\n    lookupQuerystring: 'lng',\r\n    lookupCookie: 'i18next',\r\n    lookupLocalStorage: 'i18nextLng',\r\n    lookupFromPathIndex: 0,\r\n    lookupFromSubdomainIndex: 0,\r\n  \r\n    // cache user language on\r\n    caches: ['localStorage', 'cookie'],\r\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n  \r\n    // optional htmlTag with lang attribute, the default is:\r\n    htmlTag: document.documentElement,\r\n  \r\n    // only detect languages that are in the whitelist\r\n    checkWhitelist: true,\r\n  \r\n    // fallback to a similar whitelist language\r\n    // Example 1: Browser language is 'es'\r\n    // if 'es' is not found in whitelist, first fallback to any whitelist language that starts with 'es-', then fallback to fallbackLng ('es' -> 'es-*' -> fallbackLng)\r\n    // Example 2: Browser language is 'es-MX'\r\n    // if 'es-MX' is not found in whitelist, first fallback to 'es', then fallback to 'es-*', then fallback to fallbackLng ('es-MX' -> 'es' -> 'es-*' -> fallbackLng)\r\n    checkForSimilarInWhitelist: false,\r\n  \r\n    // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\r\n    cookieOptions: {path:'/'}\r\n  }\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        detection: options,\r\n        fallbackLng: \"en\",\r\n\r\n        keySeparator: \".\", // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;","export const resources = {\r\n  en: {\r\n    translation: {\r\n      \"Drawer\": {\r\n        \"Devices\": \"Devices\",\r\n        \"Settings\": \"Settings\",\r\n        \"Language\": \"Language\"\r\n      },\r\n      \"LanguageSelection\": {\r\n        \"Label\": \"Choose application language\",\r\n        \"PolishLanguage\": \"Polish\",\r\n        \"EnglishLanguage\": \"English\"\r\n      },\r\n      \"DevicesSelectionPage\": {\r\n        \"DatapointsTab\": \"Data points\",\r\n        \"EdgecomputingTab\": \"Edge computing\",\r\n        \"EventsTab\": \"Events\",\r\n        \"DevicesTitle\": \"Devices\",\r\n        \"StatusConnected\": \"Connected\",\r\n        \"StatusDisconnected\": \"Disconnected\",\r\n        \"Status\": \"Status\",\r\n        \"Connect\": \"Connect\",\r\n        \"Disconnect\": \"Disconnect\",\r\n        \"StatusOnboarded\": \"Onboarded\",\r\n        \"StatusOffboarded\": \"Offboarded\",\r\n        \"Properties\": {\r\n          \"id\": \"ID\",\r\n          \"name\": \"Name\",\r\n          \"type\": \"Type\",\r\n          \"ipAddress\": \"IP Address\",\r\n          \"portNumber\": \"Port\",\r\n          \"timeout\": \"Timeout\",\r\n          \"isActive\": \"Active\",\r\n          \"isConnected\": \"Connected\",\r\n          \"deviceId\": \"Device ID\",\r\n          \"unit\": \"Unit\",\r\n          \"sampleTime\": \"Sample time\",\r\n          \"defaultValue\": \"Default value\",\r\n          \"offset\": \"Offset\",\r\n          \"length\": \"Length\",\r\n          \"read\": \"Read\",\r\n          \"write\": \"Write\",\r\n          \"readFCode\": \"Read FCode\",\r\n          \"writeFCode\": \"Write FCode\",\r\n          \"unitID\": \"Unit ID\",\r\n          \"readAsSingle\": \"Read as single\",\r\n          \"writeAsSingle\": \"Write as single\",\r\n          \"value\": \"Value\",\r\n          \"variableID\": \"Variable ID\",\r\n          \"factor\": \"Factor\",\r\n          \"calculationInterval\": \"Calculation interval\",\r\n          \"highLimit\": \"High limit\",\r\n          \"texts\": \"Texts\",\r\n          \"severity\": \"Severity\",\r\n          \"hysteresis\": \"Hysteresis\",\r\n          \"timeOnDelay\": \"Time on delay\",\r\n          \"timeOffDelay\": \"Time off delay\",\r\n          \"areaType\": \"Area type\",\r\n          \"dbNumber\": \"DB number\",\r\n          \"lowLimit\": \"Low limit\",\r\n          \"slot\": \"Slot\",\r\n          \"rack\": \"Rack\",\r\n          \"overflow\": \"Overflow\",\r\n          \"inverseLogic\": \"Inverse logic\",\r\n          \"AssociatedDeviceId\": \"Associated device ID\",\r\n          \"AssociatedElementId\": \"Associated element ID\",\r\n          \"variableIDs\": \"Variable IDs\",\r\n          \"alertValues\": \"Alert values\",\r\n          \"datapoint\": \"Datapoint\",\r\n          \"valueConverterObject\": \"Value converter object\",\r\n          \"sendingEnabled\": \"Sending enabled\",\r\n          \"sendFileLimit\": \"Send file limit\",\r\n          \"sendEventLimit\": \"Send event limit\",\r\n          \"sendingInterval\": \"Sending interval\",\r\n          \"numberOfSendRetries\": \"Number of send retries\",\r\n          \"boarded\": \"Boarded\",\r\n          \"lastValueTick\": \"Last value tick\",\r\n          \"elementId\": \"Element ID\",\r\n          \"qualityCodeEnabled\": \"Quality code enabled\",\r\n          \"datapointId\": \"Datapoint ID\",\r\n          \"dataConverter\": \"Data converter\",\r\n          \"entityId\": \"Entity ID\",\r\n          \"sourceType\": \"Source type\",\r\n          \"sourceId\": \"Source ID\",\r\n          \"source\": \"Source\",\r\n          \"sendDataFileInterval\": \"Send data file interval\",\r\n          \"sendEventFileInterval\": \"Send event file interval\",\r\n          \"dataStorageSize\": \"Data storage size\",\r\n          \"eventStorageSize\": \"Event storage size\",\r\n          \"numberOfDataFilesToSend\": \"Number of data files to send\",\r\n          \"numberOfEventFilesToSend\": \"Number of event files to send\",\r\n          \"numberOfSendDataRetries\": \"Number of send data retries\",\r\n          \"numberOfSendEventRetries\": \"Number of send event retries\",\r\n          \"memoryType\": \"Memory type\",\r\n          \"bitNumber\": \"Bit number\",\r\n          \"byteNumber\": \"Byte number\",\r\n          \"expression\": \"Expression\",\r\n          \"parameters\": \"Parameters\"\r\n        },\r\n        \"Tabs\": {\r\n          \"calcElements\": \"Edge computing\",\r\n          \"variables\": \"Variables\",\r\n          \"alerts\": \"Alerts\",\r\n          \"info\": \"Info\",\r\n          \"datapoints\": \"Datapoints\",\r\n          \"dataToSendConfig\": \"Data to send\",\r\n          \"eventsToSendConfig\": \"Events to send\"\r\n        }\r\n      },\r\n      \"UniversalTable\": {\r\n        \"RowsPerPage\": \"Rows per page\",\r\n        \"Of\": \"of\"\r\n      },\r\n      \"SettingsPage\": {\r\n        \"Title\": \"Settings\",\r\n        \"LoadButton\": \"Download settings\",\r\n        \"DropzoneText\": \"Drag & drop or click to upload a file\"\r\n      },\r\n      \"LoginPage\": {\r\n        \"LoginTitle\": \"Please log in\",\r\n        \"LoginButton\": \"Login\",\r\n        \"FormLoginTextField\": \"Login\",\r\n        \"FormPasswordTextField\": \"Password\",\r\n        \"FormLoginTextFieldHelperText\": \"At least 3 characters\",\r\n        \"FormPasswordTextFieldHelperText\": \"At least 8 characters\",\r\n        \"InvalidLoginPassword\": \"Invalid login/password combination\"\r\n      },\r\n      \"AccountMenu\": {\r\n        \"MyAccount\": \"My Account\",\r\n        \"Logout\": \"Sign out\",\r\n        \"Profile\": \"Profile\",\r\n        \"UserAccounts\": \"User accounts\"\r\n      },\r\n      \"AccountPage\": {\r\n        \"Title\": \"Account settings\",\r\n        \"NameTextField\": \"Name\",\r\n        \"CurrentPasswordTextField\": \"Current password\",\r\n        \"NewPasswordTextField\": \"New password\",\r\n        \"ChangePasswordButton\": \"Change password\",\r\n        \"PasswordHelperError8characters\": \"Password must consist of at least 8 characters\",\r\n        \"PasswordHelperErrorSamePasswords\": \"Current password and new password can't be the same\"\r\n      },\r\n      \"CreateAccountDialog\": {\r\n        \"TitleCreate\": \"Create new account\",\r\n        \"TitleEdit\": \"Edit account\",\r\n        \"Cancel\": \"Cancel\",\r\n        \"Create\": \"Create\",\r\n        \"Update\": \"Update\",\r\n        \"NameTextField\": \"Name\",\r\n        \"PasswordTextField\": \"Password\",\r\n        \"NewPasswordTextField\": \"New password\",\r\n        \"PermissionsSelect\": \"Permissions\",\r\n        \"HelperTextName\": \"At least 3 characters\",\r\n        \"HelperTextPassword\": \"At least 8 characters\",\r\n        \"AccountBeingEditedSubtitle\": \"You are editing an account with ID: \"\r\n      },\r\n      \"UserAccountsPage\": {\r\n        \"CreateUser\": \"Create user\",\r\n        \"IdColumn\": \"ID\",\r\n        \"NameColumn\": \"Name\",\r\n        \"PermissionsColumn\": \"Permissions\",\r\n        \"ActionColumn\": \"Actions\",\r\n        \"TooltipDelete\": \"Delete\",\r\n        \"TooltipEdit\": \"Edit\"\r\n      },\r\n      \"Snackbar\": {\r\n        \"SuccessfulUserCreation\": \"User created successfully\",\r\n        \"SuccessfulUserDeletion\": \"User deleted successfully\",\r\n        \"SuccessfulUserEdit\": \"User edited successfully\",\r\n        \"SuccessfulPasswordChange\": \"Password changed successfully\",\r\n        \"UnsuccessfulPasswordChange\": \"Current password is invalid\",\r\n        \"UnsuccessfulUserEdit\": \"User editing failed\",\r\n        \"SuccessfulFileUpload\": \"File sent successfully\",\r\n        \"UnsuccessfulFileUpload403\": \"Only admin type accounts have permission to send configuration file\",\r\n        \"UnsuccessfulFileUpload400\": \"Invalid file contents\",\r\n        \"UnknownError\": \"Unknown error occured. Try again.\",\r\n        \"Generic403\": \"Access forbidden\"\r\n      },\r\n      \"ConfirmDeleteUserDialog\": {\r\n        \"Title\": \"Please confirm deletion. The process is irreversible.\",\r\n        \"AccountToBeDeleted\": \"The following account is going to be deleted: \",\r\n        \"Confirm\": \"Confirm\",\r\n        \"Cancel\": \"Cancel\"\r\n      }\r\n    }\r\n  },\r\n  pl: {\r\n    translation: {\r\n      \"Drawer\": {\r\n        \"Devices\": \"Urządzenia\",\r\n        \"Settings\": \"Ustawienia\",\r\n        \"Language\": \"Język\"\r\n      },\r\n      \"LanguageSelection\": {\r\n        \"Label\": \"Wybierz język aplikacji\",\r\n        \"PolishLanguage\": \"Polski\",\r\n        \"EnglishLanguage\": \"Angielski\"\r\n      },\r\n      \"DevicesSelectionPage\": {\r\n        \"DatapointsTab\": \"Data pointy\",\r\n        \"EdgecomputingTab\": \"Edge computing\",\r\n        \"EventsTab\": \"Zdarzenia\",\r\n        \"DevicesTitle\": \"Urządzenia\",\r\n        \"StatusConnected\": \"Połączony\",\r\n        \"StatusDisconnected\": \"Rozłączony\",\r\n        \"Status\": \"Stan\",\r\n        \"Connect\": \"Połącz\",\r\n        \"Disconnect\": \"Rozłącz\",\r\n        \"Tabs\": {\r\n          \"calcElements\": \"Edge computing\",\r\n          \"variables\": \"Zmienne\",\r\n          \"alerts\": \"Zdarzenia\",\r\n          \"info\": \"Informacje\",\r\n          \"datapoints\": \"Datapointy\",\r\n          \"dataToSendConfig\": \"Konfiguracja danych\",\r\n          \"eventsToSendConfig\": \"Konfiguracja zdarzeń\"\r\n        },\r\n      },\r\n      \"UniversalTable\": {\r\n        \"RowsPerPage\": \"Wierszy na stronę\",\r\n        \"Of\": \"z\"\r\n      },\r\n      \"SettingsPage\": {\r\n        \"Title\": \"Ustawienia\",\r\n        \"LoadButton\": \"Pobierz ustawienia\",\r\n        \"DropzoneText\": \"Przeciągnij i upuść tutaj lub kliknij, aby wczytać plik\"\r\n      },\r\n      \"LoginPage\": {\r\n        \"LoginTitle\": \"Zaloguj się\",\r\n        \"LoginButton\": \"Zaloguj\",\r\n        \"FormLoginTextField\": \"Login\",\r\n        \"FormPasswordTextField\": \"Hasło\",\r\n        \"FormLoginTextFieldHelperText\": \"Co najmniej 3 znaki\",\r\n        \"FormPasswordTextFieldHelperText\": \"Co najmniej 8 znaków\",\r\n        \"InvalidLoginPassword\": \"Nieprawidłowa nazwa lub hasło\"\r\n      },\r\n      \"AccountMenu\": {\r\n        \"MyAccount\": \"Moje konto\",\r\n        \"Logout\": \"Wyloguj\",\r\n        \"Profile\": \"Profil\",\r\n        \"UserAccounts\": \"Konta użytkowników\"\r\n      },\r\n      \"AccountPage\": {\r\n        \"Title\": \"Ustawienia konta\",\r\n        \"NameTextField\": \"Nazwa\",\r\n        \"CurrentPasswordTextField\": \"Aktualne hasło\",\r\n        \"NewPasswordTextField\": \"Nowe hasło\",\r\n        \"ChangePasswordButton\": \"Zmień hasło\",\r\n        \"PasswordHelperError8characters\": \"Hasło musi się składać z co najmniej 8 znaków\",\r\n        \"PasswordHelperErrorSamePasswords\": \"Nowe hasło nie może być takie same jak aktualne\"\r\n      },\r\n      \"CreateAccountDialog\": {\r\n        \"TitleCreate\": \"Utwórz nowe konto\",\r\n        \"TitleEdit\": \"Edytuj konto\",\r\n        \"Cancel\": \"Anuluj\",\r\n        \"Create\": \"Utwórz\",\r\n        \"Update\": \"Aktualizuj\",\r\n        \"NameTextField\": \"Nazwa\",\r\n        \"PasswordTextField\": \"Hasło\",\r\n        \"NewPasswordTextField\": \"Nowe hasło\",\r\n        \"PermissionsSelect\": \"Uprawnienia\",\r\n        \"HelperTextName\": \"Co najmniej 3 znaki\",\r\n        \"HelperTextPassword\": \"Co najmniej 8 znaków\",\r\n        \"AccountBeingEditedSubtitle\": \"Edytujesz konto o następującym ID: \"\r\n      },\r\n      \"UserAccountsPage\": {\r\n        \"CreateUser\": \"Utwórz użytkownika\",\r\n        \"IdColumn\": \"ID\",\r\n        \"NameColumn\": \"Nazwa\",\r\n        \"PermissionsColumn\": \"Uprawnienia\",\r\n        \"ActionColumn\": \"Akcje\",\r\n        \"TooltipDelete\": \"Usuń\",\r\n        \"TooltipEdit\": \"Edytuj\"\r\n      },\r\n      \"Snackbar\": {\r\n        \"SuccessfulUserCreation\": \"Użytkownik pomyślnie utworzony\",\r\n        \"SuccessfulUserDeletion\": \"Użytkownik pomyślnie usunięty\",\r\n        \"SuccessfulUserEdit\": \"Edytowano pomyślnie\",\r\n        \"SuccessfulPasswordChange\": \"Zmieniono hasło pomyślnie\",\r\n        \"UnsuccessfulPasswordChange\": \"Aktualne hasło jest nieprawidłowe\",\r\n        \"UnsuccessfulUserEdit\": \"Nie powiodła się edycja użytkownika\",\r\n        \"SuccessfulFileUpload\": \"Pomyślnie przesłano plik\",\r\n        \"UnsuccessfulFileUpload403\": \"Tylko konta admina mają uprawnienia do wysyłania pliku konfiguracyjnego\",\r\n        \"UnsuccessfulFileUpload400\": \"Nieprawidłowa zawartość pliku\",\r\n        \"UnknownError\": \"Wystąpił nieznany błąd. Spróbuj ponownie.\",\r\n        \"Generic403\": \"Brak uprawnień\"\r\n      },\r\n      \"ConfirmDeleteUserDialog\": {\r\n        \"Title\": \"Proszę potwierdzić usunięcie. Ten proces jest nieodwracalny.\",\r\n        \"AccountToBeDeleted\": \"Zostanie usunięte następujące konto: \",\r\n        \"Confirm\": \"Potwierdź\",\r\n        \"Cancel\": \"Anuluj\"\r\n      }\r\n    }\r\n  }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { connect } from 'react-redux';\r\nimport { setLanguageDialogOpen } from '../actions/LanguageDialog.action';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  }\r\n});\r\n\r\n function LanguageDialog(props) {\r\n  const classes = useStyles();\r\n  const { t, i18n } = useTranslation();\r\n  const chooseLanguage = (language) => {\r\n    props.setLanguageDialogOpen(false)\r\n    i18n.changeLanguage(language)\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={()=>props.setLanguageDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={props.open}>\r\n      <DialogTitle id=\"simple-dialog-title\">{t('LanguageSelection.Label')}</DialogTitle>\r\n      <List>\r\n        <ListItem button onClick={()=>chooseLanguage('pl')}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              PL\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={t('LanguageSelection.PolishLanguage')} />\r\n        </ListItem>\r\n        <ListItem button onClick={()=>chooseLanguage('en')}>\r\n          <ListItemAvatar>\r\n            <Avatar className={classes.avatar}>\r\n              EN\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={t('LanguageSelection.EnglishLanguage')} />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.LanguageDialogReducer.open\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLanguageDialogOpen,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageDialog);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setCreateAccountDialogNewpasswordTextfield\r\n} from '../actions/CreateAccountDialog.action';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useTranslation } from 'react-i18next';\r\nimport UserService from '../services/user.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: '100%'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  form: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CreateAccountDialog({ open,\r\n  type,\r\n  name,\r\n  nameError,\r\n  password,\r\n  passwordError,\r\n  permissions,\r\n  editAccountId,\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setSnackbarShown,\r\n  setSnackbarText,\r\n  setUserAccountsList }) {\r\n\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  let history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    const val = event.target.value;\r\n    const name = event.target.name;\r\n    setCreateAccountDialogPasswordTextfieldError(false)\r\n    setCreateAccountDialogNameTextfieldError(false)\r\n\r\n    if (name === 'name') {\r\n      setCreateAccountDialogNameTextfield(val)\r\n    }\r\n    else if (name === 'password') {\r\n      setCreateAccountDialogPasswordTextfield(val)\r\n    }\r\n    else if (name === 'newpassword') {\r\n      setCreateAccountDialogNewpasswordTextfield(val)\r\n    }\r\n    else {\r\n      setCreateAccountDialogPermissionsSelect(val)\r\n    }\r\n  }\r\n\r\n  const disableButton = () => {\r\n    if (type === 'edit') {\r\n      if (password.length > 0 && password.length < 8) {\r\n        return true\r\n      }\r\n    }\r\n    else {\r\n      if (password.length < 8 || name.length < 3) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const register = () => {\r\n    UserService.register(name, password, permissions).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulUserCreation'), 'success')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setCreateAccountDialogOpen(false)\r\n        UserService.getAllAccounts().then(res => {\r\n          setUserAccountsList(res.data)\r\n        })\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setCreateAccountDialogOpen(false)\r\n      }\r\n      else {\r\n        setCreateAccountDialogNameTextfieldError(true)\r\n        setCreateAccountDialogPasswordTextfieldError(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const edit = () => {\r\n    UserService.editAccount(editAccountId, name, permissions, password === '' ? false : password).then(res => {\r\n      if (res.status === 200) {\r\n        setSnackbarText(t('Snackbar.SuccessfulUserEdit'), 'success')\r\n        setCreateAccountDialogPasswordTextfield('')\r\n        setCreateAccountDialogNameTextfield('')\r\n        setSnackbarShown(true)\r\n        setCreateAccountDialogOpen(false)\r\n        UserService.getAllAccounts().then(res => {\r\n          setUserAccountsList(res.data)\r\n        })\r\n        //if edited account is currently logged in\r\n        if (res._id === AuthService.getCurrentUser()._id) {\r\n          AuthService.logout()\r\n          history.push('/login')\r\n        }\r\n      }\r\n      else if (res.status === 403) {\r\n        setSnackbarText(t('Snackbar.Generic403'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n      else {\r\n        setSnackbarText(t('Snackbar.UnknownError'), 'error')\r\n        setSnackbarShown(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setCreateAccountDialogOpen(false)} aria-labelledby=\"form-dialog-title\">\r\n      <DialogTitle id=\"form-dialog-title\">{type === 'create' ? t('CreateAccountDialog.TitleCreate') : t('CreateAccountDialog.TitleEdit')}</DialogTitle>\r\n      <DialogContent>\r\n        {type === 'edit' ?\r\n          <DialogContentText>\r\n            {t('CreateAccountDialog.AccountBeingEditedSubtitle')}<strong>{editAccountId}</strong>\r\n          </DialogContentText>\r\n          : null}\r\n\r\n        <form className={classes.form}>\r\n          {AuthService.getCurrentUser() !== null ?\r\n            <div>\r\n              <TextField\r\n                disabled={type === 'edit' ? true : false}\r\n                error={nameError}\r\n                helperText={nameError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormLoginTextFieldHelperText')}\r\n                onChange={handleChange}\r\n                name=\"name\"\r\n                value={name}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label={t('CreateAccountDialog.NameTextField')}\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordError ? t('LoginPage.InvalidLoginPassword') : t('LoginPage.FormPasswordTextFieldHelperText')}\r\n                onChange={handleChange}\r\n                autoComplete=\"off\"\r\n                value={password}\r\n                name=\"password\"\r\n                margin=\"dense\"\r\n                id=\"password\"\r\n                label={t('CreateAccountDialog.PasswordTextField')}\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"permissions\">{t('CreateAccountDialog.PermissionsSelect')}</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  labelId=\"permissions\"\r\n                  id=\"permissions-select\"\r\n                  name=\"permissions\"\r\n                  value={permissions}\r\n                  onChange={handleChange}\r\n                >\r\n                  {AuthService.getCurrentUser().permissions >= 3 ? <MenuItem value={1}>User</MenuItem> : null}\r\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={3}>Admin</MenuItem> : null}\r\n                  {AuthService.getCurrentUser().permissions === 7 ? <MenuItem value={7}>SuperAdmin</MenuItem> : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            : null}\r\n\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setCreateAccountDialogOpen(false)} color=\"primary\">\r\n          {t('CreateAccountDialog.Cancel')}\r\n        </Button>\r\n        <Button disabled={disableButton()} onClick={() => type === 'edit' ? edit() : register()} color=\"primary\">\r\n          {type === 'create' ? t('CreateAccountDialog.Create') : t('CreateAccountDialog.Update')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog >\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.CreateAccountDialog.open,\r\n    type: state.CreateAccountDialog.type,\r\n    name: state.CreateAccountDialog.name,\r\n    nameError: state.CreateAccountDialog.nameError,\r\n    password: state.CreateAccountDialog.password,\r\n    passwordError: state.CreateAccountDialog.passwordError,\r\n    permissions: state.CreateAccountDialog.permissions,\r\n    editAccountId: state.CreateAccountDialog.editAccountId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setCreateAccountDialogOpen,\r\n  setCreateAccountDialogNameTextfield,\r\n  setCreateAccountDialogPasswordTextfield,\r\n  setCreateAccountDialogPermissionsSelect,\r\n  setCreateAccountDialogNameTextfieldError,\r\n  setCreateAccountDialogPasswordTextfieldError,\r\n  setSnackbarText,\r\n  setSnackbarShown,\r\n  setUserAccountsList,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountDialog);","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { setSnackbarShown } from '../actions/Snackbar.action';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CustomizedSnackbars(props) {\r\n  \r\n  const classes = useStyles();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    props.setSnackbarShown(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={props.shown} autoHideDuration={5000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={props.severity}>\r\n          {props.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    text: state.SnackbarReducer.text,\r\n    shown: state.SnackbarReducer.shown,\r\n    severity: state.SnackbarReducer.severity\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedSnackbars);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setConfirmDeleteUserDialogOpen, setConfirmDeleteUserDialogUsername } from '../actions/ConfirmDeleteUserDialog.action';\r\nimport UserService from '../services/user.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { setUserAccountsList } from '../actions/UserAccountsPage.action';\r\nimport { setSnackbarText, setSnackbarShown } from '../actions/Snackbar.action';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AlertDialog(props) {\r\n  const { t } = useTranslation();\r\n  let history = useHistory();\r\n\r\n  const deletePerm = () => {\r\n    UserService.deleteAccount(props.accountIdToBeDeleted).then(res => {\r\n      if (res.status === 200) {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.SuccessfulUserDeletion'));\r\n        props.setSnackbarShown(true);\r\n        //if edited account is currently logged in\r\n        if (props.accountIdToBeDeleted === AuthService.getCurrentUser()._id) {\r\n          AuthService.logout()\r\n          history.push('/login')\r\n        }\r\n        else {\r\n          UserService.getAllAccounts().then(res => {\r\n            props.setUserAccountsList(res.data)\r\n          })\r\n        }\r\n      }\r\n      else if (res.status === 403) {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.Generic403'));\r\n        props.setSnackbarShown(true);\r\n      }\r\n      else {\r\n        props.setConfirmDeleteUserDialogOpen(false);\r\n        props.setSnackbarText(t('Snackbar.UnknownError'));\r\n        props.setSnackbarShown(true);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={() => props.setConfirmDeleteUserDialogOpen(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{t('ConfirmDeleteUserDialog.Title')}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {t('ConfirmDeleteUserDialog.AccountToBeDeleted')}<strong>{props.accountNameToBeDeleted}</strong>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => deletePerm()} color=\"secondary\">\r\n          {t('ConfirmDeleteUserDialog.Confirm')}\r\n        </Button>\r\n        <Button onClick={() => props.setConfirmDeleteUserDialogOpen(false)} color=\"primary\" autoFocus>\r\n          {t('ConfirmDeleteUserDialog.Cancel')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.ConfirmDeleteUserDialogReducer.open,\r\n    accountNameToBeDeleted: state.ConfirmDeleteUserDialogReducer.username,\r\n    accountIdToBeDeleted: state.ConfirmDeleteUserDialogReducer.id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setConfirmDeleteUserDialogOpen,\r\n  setConfirmDeleteUserDialogUsername,\r\n  setUserAccountsList,\r\n  setSnackbarText,\r\n  setSnackbarShown\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialog);","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Drawer from './components/Drawer.component';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/Root.reducer\";\nimport './i18n';\nimport LanguageDialog from './components/LanguageSelectionDialog.component';\nimport CreateAccountDialog from './components/CreateAccountDialog.component';\nimport Snackbar from './components/Snackbar.component';\nimport ConfirmDeleteUserDialog from './components/ConfirmDeleteUserDialog.component';\n\nconst store = createStore(rootReducer);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33a095',\n      main: '#00897b',\n      dark: '#005f56',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Drawer />\n            <CreateAccountDialog/>\n            <ConfirmDeleteUserDialog/>\n          </Router>\n          <LanguageDialog/>\n          <Snackbar/>\n        </Provider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}