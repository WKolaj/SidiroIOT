const Project = require("../../../../classes/Project/Project");

describe("Project", () => {
  beforeEach(() => {
    jest.setTimeout(30000);
  });
  //TODO - add other Project class tests
  describe("validatePayload", () => {
    let payload;

    beforeEach(() => {
      payload = {
        connectableDevices: {
          connectableDeviceID1: {
            id: "connectableDeviceID1",
            name: "connectableDeviceName1",
            type: "MBDevice",
            variables: {
              connectableDeviceID1Variable1ID: {
                id: "connectableDeviceID1Variable1ID",
                name: "connectableDeviceID1Variable1Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 1,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID1Variable2ID: {
                id: "connectableDeviceID1Variable2ID",
                name: "connectableDeviceID1Variable2Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 3,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID1Variable3ID: {
                id: "connectableDeviceID1Variable3ID",
                name: "connectableDeviceID1Variable3Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 5,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID1Variable4ID: {
                id: "connectableDeviceID1Variable4ID",
                name: "connectableDeviceID1Variable4Name",
                type: "DeviceConnectionVariable",
                unit: "V",
                sampleTime: 1,
                defaultValue: false,
              },
            },
            calcElements: {
              connectableDeviceID1CalcElement1ID: {
                id: "connectableDeviceID1CalcElement1ID",
                name: "connectableDeviceID1CalcElement1Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID1Variable1ID",
                factor: 10,
              },
              connectableDeviceID1CalcElement2ID: {
                id: "connectableDeviceID1CalcElement2ID",
                name: "connectableDeviceID1CalcElement2Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID1Variable2ID",
                factor: 20,
              },
              connectableDeviceID1CalcElement3ID: {
                id: "connectableDeviceID1CalcElement3ID",
                name: "connectableDeviceID1CalcElement3Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID1Variable3ID",
                factor: 30,
              },
            },
            alerts: {
              connectableDeviceID1Alert1ID: {
                id: "connectableDeviceID1Alert1ID",
                name: "connectableDeviceID1Alert1Name",
                type: "HighLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 100,
                defaultValue: null,
                hysteresis: 10,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID1Variable1ID",
                highLimit: 100,
              },
              connectableDeviceID1Alert2ID: {
                id: "connectableDeviceID1Alert2ID",
                name: "connectableDeviceID1Alert2Name",
                type: "LowLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 200,
                defaultValue: null,
                hysteresis: 20,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID1Variable2ID",
                lowLimit: 100,
              },
              connectableDeviceID1Alert3ID: {
                id: "connectableDeviceID1Alert3ID",
                name: "connectableDeviceID1Alert3Name",
                type: "BandwidthLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 300,
                defaultValue: null,
                hysteresis: 30,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID1Variable3ID",
                highLimit: 100,
                lowLimit: 100,
              },
            },
            isActive: false,
            ipAddress: "192.168.0.1",
            portNumber: 502,
            timeout: 500,
          },
          connectableDeviceID2: {
            id: "connectableDeviceID2",
            name: "connectableDeviceName2",
            type: "MBGatewayDevice",
            variables: {
              connectableDeviceID2Variable1ID: {
                id: "connectableDeviceID2Variable1ID",
                name: "connectableDeviceID2Variable1Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 1,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID2Variable2ID: {
                id: "connectableDeviceID2Variable2ID",
                name: "connectableDeviceID2Variable2Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 3,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID2Variable3ID: {
                id: "connectableDeviceID2Variable3ID",
                name: "connectableDeviceID2Variable3Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 5,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID2Variable4ID: {
                id: "connectableDeviceID2Variable4ID",
                name: "connectableDeviceID2Variable4Name",
                type: "DeviceConnectionVariable",
                unit: "V",
                sampleTime: 1,
                defaultValue: false,
              },
            },
            calcElements: {
              connectableDeviceID2CalcElement1ID: {
                id: "connectableDeviceID2CalcElement1ID",
                name: "connectableDeviceID2CalcElement1Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID2Variable1ID",
                factor: 10,
              },
              connectableDeviceID2CalcElement2ID: {
                id: "connectableDeviceID2CalcElement2ID",
                name: "connectableDeviceID2CalcElement2Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID2Variable2ID",
                factor: 20,
              },
              connectableDeviceID2CalcElement3ID: {
                id: "connectableDeviceID2CalcElement3ID",
                name: "connectableDeviceID2CalcElement3Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID2Variable3ID",
                factor: 30,
              },
            },
            alerts: {
              connectableDeviceID2Alert1ID: {
                id: "connectableDeviceID2Alert1ID",
                name: "connectableDeviceID2Alert1Name",
                type: "HighLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 100,
                defaultValue: null,
                hysteresis: 10,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID2Variable1ID",
                highLimit: 100,
              },
              connectableDeviceID2Alert2ID: {
                id: "connectableDeviceID2Alert2ID",
                name: "connectableDeviceID2Alert2Name",
                type: "LowLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 200,
                defaultValue: null,
                hysteresis: 20,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID2Variable2ID",
                lowLimit: 100,
              },
              connectableDeviceID2Alert3ID: {
                id: "connectableDeviceID2Alert3ID",
                name: "connectableDeviceID2Alert3Name",
                type: "BandwidthLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 300,
                defaultValue: null,
                hysteresis: 30,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID2Variable3ID",
                highLimit: 100,
                lowLimit: 100,
              },
            },
            isActive: false,
            ipAddress: "192.168.0.2",
            portNumber: 502,
            timeout: 500,
          },
          connectableDeviceID3: {
            id: "connectableDeviceID3",
            name: "connectableDeviceName3",
            type: "MBDevice",
            variables: {
              connectableDeviceID3Variable1ID: {
                id: "connectableDeviceID3Variable1ID",
                name: "connectableDeviceID3Variable1Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 1,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID3Variable2ID: {
                id: "connectableDeviceID3Variable2ID",
                name: "connectableDeviceID3Variable2Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 3,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID3Variable3ID: {
                id: "connectableDeviceID3Variable3ID",
                name: "connectableDeviceID3Variable3Name",
                type: "MBSwappedFloat",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                offset: 5,
                length: 2,
                read: true,
                write: false,
                readFCode: 3,
                writeFCode: 16,
                unitID: 1,
                readAsSingle: false,
                writeAsSingle: false,
              },
              connectableDeviceID3Variable4ID: {
                id: "connectableDeviceID3Variable4ID",
                name: "connectableDeviceID3Variable4Name",
                type: "DeviceConnectionVariable",
                unit: "V",
                sampleTime: 1,
                defaultValue: false,
              },
            },
            calcElements: {
              connectableDeviceID3CalcElement1ID: {
                id: "connectableDeviceID3CalcElement1ID",
                name: "connectableDeviceID3CalcElement1Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID3Variable1ID",
                factor: 10,
              },
              connectableDeviceID3CalcElement2ID: {
                id: "connectableDeviceID3CalcElement2ID",
                name: "connectableDeviceID3CalcElement2Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID3Variable2ID",
                factor: 20,
              },
              connectableDeviceID3CalcElement3ID: {
                id: "connectableDeviceID3CalcElement3ID",
                name: "connectableDeviceID3CalcElement3Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "connectableDeviceID3Variable3ID",
                factor: 30,
              },
            },
            alerts: {
              connectableDeviceID3Alert1ID: {
                id: "connectableDeviceID3Alert1ID",
                name: "connectableDeviceID3Alert1Name",
                type: "HighLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 100,
                defaultValue: null,
                hysteresis: 10,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID3Variable1ID",
                highLimit: 100,
              },
              connectableDeviceID3Alert2ID: {
                id: "connectableDeviceID3Alert2ID",
                name: "connectableDeviceID3Alert2Name",
                type: "LowLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 200,
                defaultValue: null,
                hysteresis: 20,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID3Variable2ID",
                lowLimit: 100,
              },
              connectableDeviceID3Alert3ID: {
                id: "connectableDeviceID3Alert3ID",
                name: "connectableDeviceID3Alert3Name",
                type: "BandwidthLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 300,
                defaultValue: null,
                hysteresis: 30,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "connectableDeviceID3Variable3ID",
                highLimit: 100,
                lowLimit: 100,
              },
            },
            isActive: false,
            ipAddress: "192.168.0.3",
            portNumber: 502,
            timeout: 500,
          },
        },
        internalDevices: {
          internalDeviceID1: {
            id: "internalDeviceID1",
            name: "internalDeviceName1",
            type: "InternalDevice",
            variables: {
              internalDeviceID1Variable1ID: {
                id: "internalDeviceID1Variable1ID",
                name: "internalDeviceID1Variable1Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID1",
                associatedElementID: "connectableDeviceID1Variable1ID",
              },
              internalDeviceID1Variable2ID: {
                id: "internalDeviceID1Variable2ID",
                name: "internalDeviceID1Variable2Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID1",
                associatedElementID: "connectableDeviceID1Variable2ID",
              },
              internalDeviceID1Variable3ID: {
                id: "internalDeviceID1Variable3ID",
                name: "internalDeviceID1Variable3Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID1",
                associatedElementID: "connectableDeviceID1Variable3ID",
              },
            },
            calcElements: {
              internalDeviceID1CalcElement1ID: {
                id: "internalDeviceID1CalcElement1ID",
                name: "internalDeviceID1CalcElement1Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID1Variable1ID",
                factor: 10,
              },
              internalDeviceID1CalcElement2ID: {
                id: "internalDeviceID1CalcElement2ID",
                name: "internalDeviceID1CalcElement2Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID1Variable2ID",
                factor: 20,
              },
              internalDeviceID1CalcElement3ID: {
                id: "internalDeviceID1CalcElement3ID",
                name: "internalDeviceID1CalcElement3Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID1Variable3ID",
                factor: 30,
              },
            },
            alerts: {
              internalDeviceID1Alert1ID: {
                id: "internalDeviceID1Alert1ID",
                name: "internalDeviceID1Alert1Name",
                type: "HighLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 100,
                defaultValue: null,
                hysteresis: 10,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID1Variable1ID",
                highLimit: 100,
              },
              internalDeviceID1Alert2ID: {
                id: "internalDeviceID1Alert2ID",
                name: "internalDeviceID1Alert2Name",
                type: "LowLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 200,
                defaultValue: null,
                hysteresis: 20,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID1Variable2ID",
                lowLimit: 100,
              },
              internalDeviceID1Alert3ID: {
                id: "internalDeviceID1Alert3ID",
                name: "internalDeviceID1Alert3Name",
                type: "BandwidthLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 300,
                defaultValue: null,
                hysteresis: 30,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID1Variable3ID",
                highLimit: 100,
                lowLimit: 100,
              },
            },
            isActive: true,
          },
          internalDeviceID2: {
            id: "internalDeviceID2",
            name: "internalDeviceName2",
            type: "InternalDevice",
            variables: {
              internalDeviceID2Variable1ID: {
                id: "internalDeviceID2Variable1ID",
                name: "internalDeviceID2Variable1Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID2",
                associatedElementID: "connectableDeviceID2Variable1ID",
              },
              internalDeviceID2Variable2ID: {
                id: "internalDeviceID2Variable2ID",
                name: "internalDeviceID2Variable2Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID2",
                associatedElementID: "connectableDeviceID2Variable2ID",
              },
              internalDeviceID2Variable3ID: {
                id: "internalDeviceID2Variable3ID",
                name: "internalDeviceID2Variable3Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID2",
                associatedElementID: "connectableDeviceID2Variable3ID",
              },
            },
            calcElements: {
              internalDeviceID2CalcElement1ID: {
                id: "internalDeviceID2CalcElement1ID",
                name: "internalDeviceID2CalcElement1Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID2Variable1ID",
                factor: 10,
              },
              internalDeviceID2CalcElement2ID: {
                id: "internalDeviceID2CalcElement2ID",
                name: "internalDeviceID2CalcElement2Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID2Variable2ID",
                factor: 20,
              },
              internalDeviceID2CalcElement3ID: {
                id: "internalDeviceID2CalcElement3ID",
                name: "internalDeviceID2CalcElement3Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID2Variable3ID",
                factor: 30,
              },
            },
            alerts: {
              internalDeviceID2Alert1ID: {
                id: "internalDeviceID2Alert1ID",
                name: "internalDeviceID2Alert1Name",
                type: "HighLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 100,
                defaultValue: null,
                hysteresis: 10,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID2Variable1ID",
                highLimit: 100,
              },
              internalDeviceID2Alert2ID: {
                id: "internalDeviceID2Alert2ID",
                name: "internalDeviceID2Alert2Name",
                type: "LowLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 200,
                defaultValue: null,
                hysteresis: 20,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID2Variable2ID",
                lowLimit: 100,
              },
              internalDeviceID2Alert3ID: {
                id: "internalDeviceID2Alert3ID",
                name: "internalDeviceID2Alert3Name",
                type: "BandwidthLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 300,
                defaultValue: null,
                hysteresis: 30,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID2Variable3ID",
                highLimit: 100,
                lowLimit: 100,
              },
            },
            isActive: true,
          },
          internalDeviceID3: {
            id: "internalDeviceID3",
            name: "internalDeviceName3",
            type: "InternalDevice",
            variables: {
              internalDeviceID3Variable1ID: {
                id: "internalDeviceID3Variable1ID",
                name: "internalDeviceID3Variable1Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID3",
                associatedElementID: "connectableDeviceID3Variable1ID",
              },
              internalDeviceID3Variable2ID: {
                id: "internalDeviceID3Variable2ID",
                name: "internalDeviceID3Variable2Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID3",
                associatedElementID: "connectableDeviceID3Variable2ID",
              },
              internalDeviceID3Variable3ID: {
                id: "internalDeviceID3Variable3ID",
                name: "internalDeviceID3Variable3Name",
                type: "AssociatedVariable",
                unit: "V",
                sampleTime: 1,
                associatedDeviceID: "connectableDeviceID3",
                associatedElementID: "connectableDeviceID3Variable3ID",
              },
            },
            calcElements: {
              internalDeviceID3CalcElement1ID: {
                id: "internalDeviceID3CalcElement1ID",
                name: "internalDeviceID3CalcElement1Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID3Variable1ID",
                factor: 10,
              },
              internalDeviceID3CalcElement2ID: {
                id: "internalDeviceID3CalcElement2ID",
                name: "internalDeviceID3CalcElement2Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID3Variable2ID",
                factor: 20,
              },
              internalDeviceID3CalcElement3ID: {
                id: "internalDeviceID3CalcElement3ID",
                name: "internalDeviceID3CalcElement3Name",
                type: "FactorCalculator",
                unit: "V",
                sampleTime: 1,
                defaultValue: 0,
                variableID: "internalDeviceID3Variable3ID",
                factor: 30,
              },
            },
            alerts: {
              internalDeviceID3Alert1ID: {
                id: "internalDeviceID3Alert1ID",
                name: "internalDeviceID3Alert1Name",
                type: "HighLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 100,
                defaultValue: null,
                hysteresis: 10,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID3Variable1ID",
                highLimit: 100,
              },
              internalDeviceID3Alert2ID: {
                id: "internalDeviceID3Alert2ID",
                name: "internalDeviceID3Alert2Name",
                type: "LowLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 200,
                defaultValue: null,
                hysteresis: 20,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID3Variable2ID",
                lowLimit: 100,
              },
              internalDeviceID3Alert3ID: {
                id: "internalDeviceID3Alert3ID",
                name: "internalDeviceID3Alert3Name",
                type: "BandwidthLimitAlert",
                unit: "V",
                sampleTime: 1,
                severity: 300,
                defaultValue: null,
                hysteresis: 30,
                timeOnDelay: 100,
                timeOffDelay: 200,
                variableID: "internalDeviceID3Variable3ID",
                highLimit: 100,
                lowLimit: 100,
              },
            },
            isActive: true,
          },
        },
        agentDevices: {},
      };
    });

    let exec = () => {
      return Project.validatePayload(payload);
    };

    it("should return null if payload is valid", () => {
      let result = exec();

      expect(result).toEqual(null);
    });

    it("should return message if connectableDevices is not defined", () => {
      delete payload.connectableDevices;

      let result = exec();

      expect(result).toEqual(`"connectableDevices" is required`);
    });

    it("should return message if connectableDevices is null", () => {
      payload.connectableDevices = null;

      let result = exec();

      expect(result).toEqual(`"connectableDevices" cannot be null`);
    });

    it("should return message if one of connectableDevice payload is invalid - id different than id inside payload", () => {
      payload.connectableDevices.device1ID = {
        id: "device99ID",
        name: "device1Name",
        type: "MBDevice",
        variables: {
          testVariable1ID: {
            id: "testVariable1ID",
            name: "testVariable1Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable2ID: {
            id: "testVariable2ID",
            name: "testVariable2Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable3ID: {
            id: "testVariable3ID",
            name: "testVariable3Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable4ID: {
            id: "testVariable4ID",
            name: "testVariable4Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable5ID: {
            id: "testVariable5ID",
            name: "testVariable5Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable6ID: {
            id: "testVariable6ID",
            name: "testVariable6Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable7ID: {
            id: "testVariable7ID",
            name: "testVariable7Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable8ID: {
            id: "testVariable8ID",
            name: "testVariable8Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable9ID: {
            id: "testVariable9ID",
            name: "testVariable9Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
        },
        calcElements: {},
        alerts: {},
        isActive: true,
        ipAddress: "192.168.10.100",
        portNumber: 502,
        timeout: 500,
      };

      let result = exec();

      expect(result).toEqual(
        `connectable device's id as key and in payload differ!`
      );
    });

    it("should return message if one of connectableDevices payload is invalid - MBDevice", () => {
      //invalid default value of one of variables
      payload.connectableDevices.device1ID = {
        id: "device99ID",
        name: "device1Name",
        type: "MBDevice",
        variables: {
          testVariable1ID: {
            id: "testVariable1ID",
            name: "testVariable1Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: "testFakeValue",
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable2ID: {
            id: "testVariable2ID",
            name: "testVariable2Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable3ID: {
            id: "testVariable3ID",
            name: "testVariable3Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable4ID: {
            id: "testVariable4ID",
            name: "testVariable4Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable5ID: {
            id: "testVariable5ID",
            name: "testVariable5Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable6ID: {
            id: "testVariable6ID",
            name: "testVariable6Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable7ID: {
            id: "testVariable7ID",
            name: "testVariable7Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable8ID: {
            id: "testVariable8ID",
            name: "testVariable8Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable9ID: {
            id: "testVariable9ID",
            name: "testVariable9Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
        },
        calcElements: {},
        alerts: {},
        isActive: true,
        ipAddress: "192.168.10.100",
        portNumber: 502,
        timeout: 500,
      };

      let result = exec();

      expect(result).toEqual(`"defaultValue" must be a number`);
    });

    it("should return message if one of connectableDevices payload is invalid - MBGatewayDevice", () => {
      //invalid default value of one of variables
      payload.connectableDevices.device1ID = {
        id: "device99ID",
        name: "device1Name",
        type: "MBGatewayDevice",
        variables: {
          testVariable1ID: {
            id: "testVariable1ID",
            name: "testVariable1Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: "testFakeValue",
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable2ID: {
            id: "testVariable2ID",
            name: "testVariable2Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable3ID: {
            id: "testVariable3ID",
            name: "testVariable3Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable4ID: {
            id: "testVariable4ID",
            name: "testVariable4Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable5ID: {
            id: "testVariable5ID",
            name: "testVariable5Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable6ID: {
            id: "testVariable6ID",
            name: "testVariable6Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable7ID: {
            id: "testVariable7ID",
            name: "testVariable7Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable8ID: {
            id: "testVariable8ID",
            name: "testVariable8Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable9ID: {
            id: "testVariable9ID",
            name: "testVariable9Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
        },
        calcElements: {},
        alerts: {},
        isActive: true,
        ipAddress: "192.168.10.100",
        portNumber: 502,
        timeout: 500,
      };

      let result = exec();

      expect(result).toEqual(`"defaultValue" must be a number`);
    });

    //TODO - add tests for S7Device

    it("should return message if one of connectableDevice types is not recognized", () => {
      payload.connectableDevices.device1ID = {
        id: "device1ID",
        name: "device1Name",
        type: "FakeDevice",
        variables: {
          testVariable1ID: {
            id: "testVariable1ID",
            name: "testVariable1Name",
            type: "MBFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.321,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable2ID: {
            id: "testVariable2ID",
            name: "testVariable2Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable3ID: {
            id: "testVariable3ID",
            name: "testVariable3Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable4ID: {
            id: "testVariable4ID",
            name: "testVariable4Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable5ID: {
            id: "testVariable5ID",
            name: "testVariable5Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable6ID: {
            id: "testVariable6ID",
            name: "testVariable6Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable7ID: {
            id: "testVariable7ID",
            name: "testVariable7Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable8ID: {
            id: "testVariable8ID",
            name: "testVariable8Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable9ID: {
            id: "testVariable9ID",
            name: "testVariable9Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
        },
        calcElements: {},
        alerts: {},
        isActive: true,
        ipAddress: "192.168.10.100",
        portNumber: 502,
        timeout: 500,
      };

      let result = exec();

      expect(result).toEqual(`connectable device type not recognized`);
    });

    it("should return message if devicesID are the same", () => {
      payload.internalDevices.connectableDeviceID2 = {
        id: "connectableDeviceID2",
        name: "internalDeviceName2",
        type: "InternalDevice",
        variables: {
          internalDeviceID2Variable1ID: {
            id: "internalDeviceID2Variable1ID",
            name: "internalDeviceID2Variable1Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable1ID",
          },
          internalDeviceID2Variable2ID: {
            id: "internalDeviceID2Variable2ID",
            name: "internalDeviceID2Variable2Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable2ID",
          },
          internalDeviceID2Variable3ID: {
            id: "internalDeviceID2Variable3ID",
            name: "internalDeviceID2Variable3Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable3ID",
          },
        },
        calcElements: {
          internalDeviceID2CalcElement1ID: {
            id: "internalDeviceID2CalcElement1ID",
            name: "internalDeviceID2CalcElement1Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable1ID",
            factor: 10,
          },
          internalDeviceID2CalcElement2ID: {
            id: "internalDeviceID2CalcElement2ID",
            name: "internalDeviceID2CalcElement2Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable2ID",
            factor: 20,
          },
          internalDeviceID2CalcElement3ID: {
            id: "internalDeviceID2CalcElement3ID",
            name: "internalDeviceID2CalcElement3Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable3ID",
            factor: 30,
          },
        },
        alerts: {
          internalDeviceID2Alert1ID: {
            id: "internalDeviceID2Alert1ID",
            name: "internalDeviceID2Alert1Name",
            type: "HighLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 100,
            defaultValue: null,
            hysteresis: 10,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable1ID",
            highLimit: 100,
          },
          internalDeviceID2Alert2ID: {
            id: "internalDeviceID2Alert2ID",
            name: "internalDeviceID2Alert2Name",
            type: "LowLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 200,
            defaultValue: null,
            hysteresis: 20,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable2ID",
            lowLimit: 100,
          },
          internalDeviceID2Alert3ID: {
            id: "internalDeviceID2Alert3ID",
            name: "internalDeviceID2Alert3Name",
            type: "BandwidthLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 300,
            defaultValue: null,
            hysteresis: 30,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable3ID",
            highLimit: 100,
            lowLimit: 100,
          },
        },
        isActive: true,
      };

      let result = exec();

      expect(result).toEqual(
        `All ids inside project payload should be unique!`
      );
    });

    it("should return message if devicesID is the same with variable id", () => {
      payload.internalDevices.internalDeviceID2 = {
        id: "internalDeviceID2",
        name: "internalDeviceName2",
        type: "InternalDevice",
        variables: {
          internalDeviceID2: {
            id: "internalDeviceID2",
            name: "internalDeviceID2Variable1Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable1ID",
          },
          internalDeviceID2Variable2ID: {
            id: "internalDeviceID2Variable2ID",
            name: "internalDeviceID2Variable2Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable2ID",
          },
          internalDeviceID2Variable3ID: {
            id: "internalDeviceID2Variable3ID",
            name: "internalDeviceID2Variable3Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable3ID",
          },
        },
        calcElements: {
          internalDeviceID2CalcElement1ID: {
            id: "internalDeviceID2CalcElement1ID",
            name: "internalDeviceID2CalcElement1Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable1ID",
            factor: 10,
          },
          internalDeviceID2CalcElement2ID: {
            id: "internalDeviceID2CalcElement2ID",
            name: "internalDeviceID2CalcElement2Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable2ID",
            factor: 20,
          },
          internalDeviceID2CalcElement3ID: {
            id: "internalDeviceID2CalcElement3ID",
            name: "internalDeviceID2CalcElement3Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable3ID",
            factor: 30,
          },
        },
        alerts: {
          internalDeviceID2Alert1ID: {
            id: "internalDeviceID2Alert1ID",
            name: "internalDeviceID2Alert1Name",
            type: "HighLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 100,
            defaultValue: null,
            hysteresis: 10,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable1ID",
            highLimit: 100,
          },
          internalDeviceID2Alert2ID: {
            id: "internalDeviceID2Alert2ID",
            name: "internalDeviceID2Alert2Name",
            type: "LowLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 200,
            defaultValue: null,
            hysteresis: 20,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable2ID",
            lowLimit: 100,
          },
          internalDeviceID2Alert3ID: {
            id: "internalDeviceID2Alert3ID",
            name: "internalDeviceID2Alert3Name",
            type: "BandwidthLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 300,
            defaultValue: null,
            hysteresis: 30,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable3ID",
            highLimit: 100,
            lowLimit: 100,
          },
        },
        isActive: true,
      };

      let result = exec();

      expect(result).toEqual(
        `All ids inside project payload should be unique!`
      );
    });

    it("should return message if variablesID are the same", () => {
      //variable1 has the same id as calcElement
      payload.internalDevices.internalDeviceID2 = {
        id: "internalDeviceID2",
        name: "internalDeviceName2",
        type: "InternalDevice",
        variables: {
          internalDeviceID2Variable1ID: {
            id: "internalDeviceID2Variable1ID",
            name: "internalDeviceID2Variable1Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable1ID",
          },
          internalDeviceID2Variable2ID: {
            id: "internalDeviceID2Variable2ID",
            name: "internalDeviceID2Variable2Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable2ID",
          },
          internalDeviceID2Variable3ID: {
            id: "internalDeviceID2Variable3ID",
            name: "internalDeviceID2Variable3Name",
            type: "AssociatedVariable",
            unit: "V",
            sampleTime: 1,
            associatedDeviceID: "connectableDeviceID2",
            associatedElementID: "connectableDeviceID2Variable3ID",
          },
        },
        calcElements: {
          internalDeviceID2Variable2ID: {
            id: "internalDeviceID2Variable2ID",
            name: "internalDeviceID2CalcElement1Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable1ID",
            factor: 10,
          },
          internalDeviceID2CalcElement2ID: {
            id: "internalDeviceID2CalcElement2ID",
            name: "internalDeviceID2CalcElement2Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable2ID",
            factor: 20,
          },
          internalDeviceID2CalcElement3ID: {
            id: "internalDeviceID2CalcElement3ID",
            name: "internalDeviceID2CalcElement3Name",
            type: "FactorCalculator",
            unit: "V",
            sampleTime: 1,
            defaultValue: 0,
            variableID: "internalDeviceID2Variable3ID",
            factor: 30,
          },
        },
        alerts: {
          internalDeviceID2Alert1ID: {
            id: "internalDeviceID2Alert1ID",
            name: "internalDeviceID2Alert1Name",
            type: "HighLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 100,
            defaultValue: null,
            hysteresis: 10,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable1ID",
            highLimit: 100,
          },
          internalDeviceID2Alert2ID: {
            id: "internalDeviceID2Alert2ID",
            name: "internalDeviceID2Alert2Name",
            type: "LowLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 200,
            defaultValue: null,
            hysteresis: 20,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable2ID",
            lowLimit: 100,
          },
          internalDeviceID2Alert3ID: {
            id: "internalDeviceID2Alert3ID",
            name: "internalDeviceID2Alert3Name",
            type: "BandwidthLimitAlert",
            unit: "V",
            sampleTime: 1,
            severity: 300,
            defaultValue: null,
            hysteresis: 30,
            timeOnDelay: 100,
            timeOffDelay: 200,
            variableID: "internalDeviceID2Variable3ID",
            highLimit: 100,
            lowLimit: 100,
          },
        },
        isActive: true,
      };

      let result = exec();

      expect(result).toEqual(
        `All ids inside project payload should be unique!`
      );
    });

    it("should return message if internalDevices is not defined", () => {
      delete payload.internalDevices;

      let result = exec();

      expect(result).toEqual(`"internalDevices" is required`);
    });

    it("should return message if internalDevices is null", () => {
      payload.internalDevices = null;

      let result = exec();

      expect(result).toEqual(`"internalDevices" cannot be null`);
    });

    it("should return message if one of internalDevice types is not recognized", () => {
      payload.internalDevices.device1ID = {
        id: "device1ID",
        name: "device1Name",
        type: "FakeDevice",
        variables: {
          testVariable1ID: {
            id: "testVariable1ID",
            name: "testVariable1Name",
            type: "MBFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.321,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable2ID: {
            id: "testVariable2ID",
            name: "testVariable2Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable3ID: {
            id: "testVariable3ID",
            name: "testVariable3Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable4ID: {
            id: "testVariable4ID",
            name: "testVariable4Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable5ID: {
            id: "testVariable5ID",
            name: "testVariable5Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable6ID: {
            id: "testVariable6ID",
            name: "testVariable6Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable7ID: {
            id: "testVariable7ID",
            name: "testVariable7Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable8ID: {
            id: "testVariable8ID",
            name: "testVariable8Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable9ID: {
            id: "testVariable9ID",
            name: "testVariable9Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
        },
        calcElements: {},
        alerts: {},
        isActive: true,
        ipAddress: "192.168.10.100",
        portNumber: 502,
        timeout: 500,
      };

      let result = exec();

      expect(result).toEqual(`internal device type not recognized`);
    });

    it("should return message if one of internalDevices payload is invalid - id different than id inside payload", () => {
      payload.internalDevices.device1ID = {
        id: "internalDeviceID8",
        name: "internalDeviceName2",
        type: "InternalDevice",
        variables: {},
        calcElements: {},
        alerts: {},
        isActive: true,
      };

      let result = exec();

      expect(result).toEqual(
        `internal device's id as key and in payload differ!`
      );
    });

    it("should return message if agentDevices is not defined", () => {
      delete payload.agentDevices;

      let result = exec();

      expect(result).toEqual(`"agentDevices" is required`);
    });

    it("should return message if agentDevices is null", () => {
      payload.agentDevices = null;

      let result = exec();

      expect(result).toEqual(`"agentDevices" cannot be null`);
    });

    it("should return message if one of agentDevices types is not recognized", () => {
      payload.agentDevices.device1ID = {
        id: "device1ID",
        name: "device1Name",
        type: "FakeDevice",
        variables: {
          testVariable1ID: {
            id: "testVariable1ID",
            name: "testVariable1Name",
            type: "MBFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.321,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable2ID: {
            id: "testVariable2ID",
            name: "testVariable2Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable3ID: {
            id: "testVariable3ID",
            name: "testVariable3Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 1,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable4ID: {
            id: "testVariable4ID",
            name: "testVariable4Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable5ID: {
            id: "testVariable5ID",
            name: "testVariable5Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable6ID: {
            id: "testVariable6ID",
            name: "testVariable6Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 2,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable7ID: {
            id: "testVariable7ID",
            name: "testVariable7Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 123.456,
            offset: 1,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable8ID: {
            id: "testVariable8ID",
            name: "testVariable8Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 321.654,
            offset: 3,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
          testVariable9ID: {
            id: "testVariable9ID",
            name: "testVariable9Name",
            type: "MBSwappedFloat",
            unit: "FakeUnit",
            sampleTime: 1,
            defaultValue: 789.654,
            offset: 5,
            length: 2,
            read: true,
            write: false,
            readFCode: 3,
            writeFCode: 16,
            unitID: 3,
            readAsSingle: false,
            writeAsSingle: false,
          },
        },
        calcElements: {},
        alerts: {},
        isActive: true,
        ipAddress: "192.168.10.100",
        portNumber: 502,
        timeout: 500,
      };

      let result = exec();

      expect(result).toEqual(`agent device type not recognized`);
    });

    //TODO - add tests with agent device
  });
});
